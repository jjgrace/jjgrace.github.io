<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="/posts/0.html"/>
      <url>/posts/0.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-1-什么是istio？有什么用？"><a href="#1-1-什么是istio？有什么用？" class="headerlink" title="1.1 什么是istio？有什么用？"></a>1.1 什么是istio？有什么用？</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">istio：之前业务出错我们需要重试，后来出了断路器等组件，但是是冗余到业务系统代码里的，istio就是要将这些断路器、重试、鉴权等东西抽离出来下沉成单独服务，让业务系统不在关心。也就是说在create pod的时候被人拦截下来，然后在pod里部署一个sidecar的容器，这步骤是无需业务代码感知的，是自动的。业务只需要关心业务就行，这些重试鉴权等东西自动沉淀下去。</span><br></pre></td></tr></table></figure><h2 id="1-2-istio的两大组件是什么"><a href="#1-2-istio的两大组件是什么" class="headerlink" title="1.2 istio的两大组件是什么"></a>1.2 istio的两大组件是什么</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">数据平面：由一组代理组成，这些代理微服务所有网络通信，并接收和实施来自Mixer的策略。</span><br><span class="line">• Proxy：负责高效转发与策略实现。</span><br><span class="line"></span><br><span class="line">控制平面：管理和配置代理来路由流量。此外，通过mixer实施策略与收集来自边车代理的数据。</span><br><span class="line">• Mixer：适配组件，数据平面与控制平面通过它交互，为Proxy提供策略和数据上报。</span><br><span class="line">• Pilot：策略配置组件，为Proxy提供服务发现、智能路由、错误处理等。</span><br><span class="line">• Citadel：安全组件，提供证书生成下发、加密通信、访问控制。</span><br><span class="line">• Galley：配置管理、验证、分发</span><br></pre></td></tr></table></figure><p><img src="D:\面试题\主要问题截图\istio组件.png" alt="istio组件"></p><h2 id="1-3-说说istio的注入？"><a href="#1-3-说说istio的注入？" class="headerlink" title="1.3 说说istio的注入？"></a>1.3 说说istio的注入？</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">将原来的pod停止，在新启动两个pod：原pod+istio proxy，准确的说启动三个pod，还有一个是istio-init，这个pod负责搭建网络环境，搭建完就消亡了，所以他是雷锋，铺好通信的道路就走了，所以到最后就两个pod，一个原来的pod，还一个是istio proxy代理。这些过程全自动。</span><br><span class="line"></span><br><span class="line">部署httpbin Web示例：</span><br><span class="line">cd istio-1.4.2/samples/httpbin</span><br><span class="line"># 手动注入</span><br><span class="line">kubectl apply -f &lt;(istioctl kube-inject -f httpbin-nodeport.yaml)</span><br><span class="line">或者</span><br><span class="line">istioctl kube-inject -f httpbin-nodeport.yaml |kubectl apply -f -</span><br><span class="line"># 自动注入</span><br><span class="line">kubectl label namespace default istio-injection=enabled</span><br><span class="line">kubectl apply -f httpbin-gateway.yaml</span><br><span class="line">NodePort访问地址：http://192.168.31.62:31928</span><br></pre></td></tr></table></figure><h2 id="1-4-istio-有4-个配置资源"><a href="#1-4-istio-有4-个配置资源" class="headerlink" title="1.4 istio 有4 个配置资源"></a>1.4 istio 有4 个配置资源</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">istio 有 4 个配置资源，落地所有流量管理需求：</span><br><span class="line">• VirtualService：实现服务请求路由规则的功能。</span><br><span class="line">• DestinationRule：实现目标服务的负载均衡、服务发现、故障处理和故障注入的功能。</span><br><span class="line">• Gateway：让服务网格内的服务，可以被全世界看到。</span><br><span class="line">• ServiceEntry ：让服务网格内的服务，可以看到外面的世界。</span><br></pre></td></tr></table></figure><h2 id="1-5-istio概述-Service-Mesh"><a href="#1-5-istio概述-Service-Mesh" class="headerlink" title="1.5 istio概述 Service Mesh"></a>1.5 istio概述 Service Mesh</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">通常serviceA去调用serviceB,是走的service名，然后通过dns解析cluster ip,再通过iptable和ipvs的规则转到serviceB，可以理解为直连。</span><br><span class="line"></span><br><span class="line">所谓的Service Mesh，不让你直连，不希望你业务到业务的调用是直接走的，我希望做什么呢？我希望在每个业务的pod容器旁插一个Sidecar,就被转换成一几段，A服务的实例到他自己的边车这一段的调用，A的sidecar到B的sidecar的调用，B的sidecar到B服务的实例调用。为什么要做这些事情，平白无故的多了一些开销吗？他存在的原因：我们要委托他一些事情，</span><br><span class="line">1.服务发现的能力</span><br><span class="line">2.认证鉴权能力</span><br><span class="line">3.协议升级TLS</span><br><span class="line">4.熔断的能力(降级，比如广告微服务出现问题，让他不显示而已，不影响业务)</span><br><span class="line">5.负载均衡的能力</span><br><span class="line">所谓的服务风格，可以理解为传统意义上来讲的微服务平台加上Sidecar，以Sidecar的形式来实现的微服务的治理就是服务风格</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">Service Mesh 的中文译为 “服务网格” ，是一个用于处理服务和服务之间通信的基础设施层，它负责为构建复杂的云原生应用传递可靠的网络请求，并为服务通信实现了微服务所需的基本组件功能，例如服务发现、负载均衡、监控、流量管理、访问控制等。在实践中，服务网格通常实现为一组和应用程序部署在一起的轻量级的网络代理，但对应用程序来说是透明的。</span><br><span class="line"></span><br><span class="line">服务网格：主要接管业务程序进出流量，管理这些流量</span><br><span class="line"></span><br><span class="line">• 治理能力独立（Sidecar）</span><br><span class="line">• 应用程序无感知</span><br><span class="line">• 服务通信的基础设施层</span><br><span class="line">• 解耦应用程序的重试/超时、监控、追踪和服务发现</span><br><span class="line"></span><br><span class="line">• 连接（Connect）</span><br><span class="line">- 流量管理</span><br><span class="line">- 负载均衡</span><br><span class="line">- 灰度发布</span><br><span class="line">• 安全（Secure）</span><br><span class="line">- 认证</span><br><span class="line">- 鉴权</span><br><span class="line">• 控制（Control）</span><br><span class="line">- 限流</span><br><span class="line">- ACL</span><br><span class="line">• 观察（Observe）</span><br><span class="line">- 监控</span><br><span class="line">- 调用链</span><br></pre></td></tr></table></figure><h2 id="1-6-服务网关-gateway"><a href="#1-6-服务网关-gateway" class="headerlink" title="1.6 服务网关 gateway"></a>1.6 服务网关 gateway</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Gateway为网格内服务提供负载均衡器，提供以下功能：</span><br><span class="line">• L4-L7的负载均衡</span><br><span class="line">• 对外的mTLS</span><br><span class="line">Gateway根据流入流出方向分为：</span><br><span class="line">• IngressGateway：接收外部访问，并将流量转发到网格内的服务。</span><br><span class="line">• EgressGateway：网格内服务访问外部应用。</span><br><span class="line"></span><br><span class="line">ingress gateway：envory</span><br><span class="line">gateway   # 绑定端口</span><br><span class="line">virtualservice  # 具体规则</span><br></pre></td></tr></table></figure><p><img src="D:\面试题\主要问题截图\istio-gateway.png" alt="istio-gateway"></p><h2 id="1-7-Istio-实现灰度发布"><a href="#1-7-Istio-实现灰度发布" class="headerlink" title="1.7 Istio 实现灰度发布"></a>1.7 Istio 实现灰度发布</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">主流发布方案：</span><br><span class="line">• 蓝绿发布</span><br><span class="line">• 滚动发布</span><br><span class="line">• 灰度发布（金丝雀发布）</span><br><span class="line">• A/B Test</span><br></pre></td></tr></table></figure><h3 id="1-7-1-蓝绿发布"><a href="#1-7-1-蓝绿发布" class="headerlink" title="1.7.1 蓝绿发布"></a>1.7.1 蓝绿发布</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">项目逻辑上分为AB组，在项目升级时，首先把A组从负载均衡中摘除，进行新版本的部署。B组仍然继续提供服务。A组升级完成上线，B组从负载均衡中摘除。</span><br><span class="line">特点：</span><br><span class="line">• 策略简单</span><br><span class="line">• 升级/回滚速度快</span><br><span class="line">• 用户无感知，平滑过渡</span><br><span class="line">缺点：</span><br><span class="line">• 需要两倍以上服务器资源</span><br><span class="line">• 短时间内浪费一定资源成本</span><br><span class="line">• 有问题影响范围大</span><br></pre></td></tr></table></figure><h2 id="1-7-2-滚动发布"><a href="#1-7-2-滚动发布" class="headerlink" title="1.7.2 滚动发布"></a>1.7.2 滚动发布</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">每次只升级一个或多个服务，升级完成后加入生产环境，不断执行这个过程，直到集群中的全部旧版升级新版本。Kubernetes的默认发布策略。</span><br><span class="line">特点：</span><br><span class="line">• 用户无感知，平滑过渡</span><br><span class="line">缺点：</span><br><span class="line">• 部署周期长</span><br><span class="line">• 发布策略较复杂</span><br><span class="line">• 不易回滚</span><br><span class="line">• 有影响范围较大</span><br></pre></td></tr></table></figure><h3 id="1-7-3-灰度发布（金丝雀发布）"><a href="#1-7-3-灰度发布（金丝雀发布）" class="headerlink" title="1.7.3 灰度发布（金丝雀发布）"></a>1.7.3 灰度发布（金丝雀发布）</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">只升级部分服务，即让一部分用户继续用老版本，一部分用户开始用新版本，如果用户对新版本没有什么意见，那么逐步扩大范围，把所有用户都迁移到新版本上面来。</span><br><span class="line">特点：</span><br><span class="line">• 保证整体系统稳定性</span><br><span class="line">• 用户无感知，平滑过渡</span><br><span class="line">缺点：</span><br><span class="line">• 自动化要求高</span><br><span class="line"></span><br><span class="line">基于权重的路由（金丝雀发布）</span><br><span class="line">  weight: 90</span><br></pre></td></tr></table></figure><h2 id="1-7-4-灰度发布（A-B-Test）"><a href="#1-7-4-灰度发布（A-B-Test）" class="headerlink" title="1.7.4 灰度发布（A&#x2F;B Test）"></a>1.7.4 灰度发布（A&#x2F;B Test）</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">灰度发布的一种方式，主要对特定用户采样后，对收集到的反馈数据做相关对比，然后根据比对结果作出决策。用来测试应用功能表现的方法，侧重应用的可用性，受欢迎程度等，最后决定是否升级。</span><br><span class="line"></span><br><span class="line">基于请求内容的路由（A/B Test）</span><br></pre></td></tr></table></figure><p><img src="D:\面试题\主要问题截图\istio-灰度发布.png" alt="istio-灰度发布"></p><h2 id="1-8-可视化监控"><a href="#1-8-可视化监控" class="headerlink" title="1.8 可视化监控"></a>1.8 可视化监控</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">grafana：</span><br><span class="line">1、请求成功率</span><br><span class="line">2、http时延，百分位计算方式</span><br><span class="line"></span><br><span class="line">Jaeger：</span><br><span class="line">1、响应时间</span><br><span class="line">2、链路追踪（关联的其他服务、HTTP请求详细信息）</span><br><span class="line"></span><br><span class="line">kiali：</span><br><span class="line">1、微服务链路拓扑图</span><br><span class="line">2、单个微服务RPS、成功率、错误率</span><br><span class="line">3、流量最小/最大（请求数据包和响应数据包）</span><br><span class="line">4、查看工作负载（应用）</span><br><span class="line">5、查看容器日志</span><br><span class="line">6、数据包请求/响应大小</span><br><span class="line">7、查看istio资源配置文件</span><br><span class="line"></span><br><span class="line">istio解决什么问题？</span><br><span class="line">1、故障排查</span><br><span class="line">2、应用容错性</span><br><span class="line">3、应用升级发布</span><br><span class="line">4、系统安全性</span><br></pre></td></tr></table></figure><h2 id="1-9-一个项目使用istio做灰度发布："><a href="#1-9-一个项目使用istio做灰度发布：" class="headerlink" title="1.9 一个项目使用istio做灰度发布："></a>1.9 一个项目使用istio做灰度发布：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">1、使用deployment部署这项目，并增加一个独立用于区分版本的标签：version: v1</span><br><span class="line">2、添加istio灰度发布规则（virtualservice、destinationrule）</span><br><span class="line">3、灰度发布准备先将新的版本部署k8s中</span><br><span class="line"></span><br><span class="line">service名称 端口</span><br><span class="line">1、全部到v1</span><br><span class="line">virtualservice -&gt; subset -&gt; destinationrule定义的subset名称 -&gt; 根据标签匹配pod </span><br><span class="line">2、90%v1 10%v2 增加两个版本权重 virtualservice -&gt; subset</span><br><span class="line">3、50%v2 50%v3 调整权重值</span><br></pre></td></tr></table></figure><h2 id="1-10-接入了istio后-mycaller服务请求myresponser服务时，http接口可以通，grpc服务不通"><a href="#1-10-接入了istio后-mycaller服务请求myresponser服务时，http接口可以通，grpc服务不通" class="headerlink" title="1.10 接入了istio后,mycaller服务请求myresponser服务时，http接口可以通，grpc服务不通"></a>1.10 接入了istio后,mycaller服务请求myresponser服务时，http接口可以通，<a href="https://so.csdn.net/so/search?q=grpc&spm=1001.2101.3001.7020">grpc</a>服务不通</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">分析：</span><br><span class="line"> 1.使用sleep容器对mycaller服务进行请求：</span><br><span class="line">   # kubectl exec -it -c sleep $(kubectl get pod  -l app=sleep -o jsonpath=&#x27;&#123;.items[0].metadata.name&#125;&#x27;) -- curl &quot;mycaller.default:59130/testCaller/GetHello?type=1&amp;orgcode=private&amp;port=53605&quot;</span><br><span class="line"> &#123;&quot;code&quot;:10000000,&quot;error&quot;:&quot;内部错误&quot;,&quot;detail&quot;:&quot;grpc: error while marshaling: proto: Marshal called with nil&quot;&#125;</span><br><span class="line">2.返回错误，于是查看mycaller服务容器的日志:</span><br><span class="line">  看日志http get请求返回了正常的数据，但是grpc调用Hello方法时报错：rpc error: code = Unimplemented desc = Not Found: HTTP status code 404; transport: received the unexpected content-type “text/plain; charset=utf-8”</span><br><span class="line">3.于是再查看mycaller pod中的envoy日志:</span><br><span class="line">  发现是HTTP/2协议报的404，于是查看svc，是配置的grpc协议，不是http2</span><br><span class="line">4.于是修改svc，将name从grpc-53606修改为http2-53606  </span><br><span class="line">5.再次请求mycaller服务，发现还是报一样的错误。搞了半天，索性把http部分去掉，只保留http2的port</span><br><span class="line">参考文档：https://blog.csdn.net/scun_cg/article/details/104625863</span><br><span class="line"></span><br><span class="line">例2：</span><br><span class="line">我有一个服务在两个端口上监听;一个是http，另一个是grpc。 我想建立一个可以通过同一主机路由到这两个端口的入口。 如果使用http / 1.1，则负载均衡器将重定向到http端口，如果使用h2，负载均衡器将重定向到grpc端口。 有没有办法用istio做到这一点？</span><br><span class="line">如果将grpc-server和http-server容器移动到具有唯一标签的不同容器(即，服务的不同版本，可以这么说)，然后在Ingress后面使用Istio路由规则，则可以执行类似的操作。 标题Upgrade: h2匹配的规则可以将流量发送到grpc版本，默认规则会将其余流量发送到http 1</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 容器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> istio </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ansible安装</title>
      <link href="/posts/1856478860.html"/>
      <url>/posts/1856478860.html</url>
      
        <content type="html"><![CDATA[<h1 id="1-python安装"><a href="#1-python安装" class="headerlink" title="1. python安装"></a>1. python安装</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">- python3.10安装</span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash">dnf install wget make gcc bzip2-devel openssl-devel zlib-devel libffi-devel -y</span></span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash">wget https://www.python.org/ftp/python/3.10.5/Python-3.10.5.tgz</span></span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash">tar xvf Python-3.10.5.tgz</span></span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash"><span class="built_in">cd</span> Python-3.10.5</span></span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash">./configure --enable-optimizations &amp;&amp; make -j2 &amp;&amp; make install -j2</span> </span><br></pre></td></tr></table></figure><h1 id="2-yum-安装ansible"><a href="#2-yum-安装ansible" class="headerlink" title="2. yum 安装ansible"></a>2. yum 安装ansible</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">- 更新系统</span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash">sudo dnf update -y</span></span><br><span class="line">- 重启系统</span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash">sudo reboot</span></span><br><span class="line">- 配置 EPEL 存储库</span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash">sudo dnf install -y epel-release</span></span><br><span class="line">- 安装 Ansible</span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash">sudo dnf install ansible -y</span></span><br><span class="line">- 查看 Ansible 版本</span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash">ansible --version</span></span><br></pre></td></tr></table></figure><h1 id="3-pipenv-安装ansible"><a href="#3-pipenv-安装ansible" class="headerlink" title="3. pipenv 安装ansible"></a>3. pipenv 安装ansible</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">如果您正在寻找 Ansible 的最新版本，那么请使用 pip 安装 Ansible。</span></span><br><span class="line">- 安装所有更新</span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash">sudo dnf update -y</span></span><br><span class="line">- 重启系统</span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash">reboot</span></span><br><span class="line">- 安装 python 3.9(默认已安装) 和其他依赖项</span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash">dnf -y install python3-devel</span></span><br><span class="line"></span><br><span class="line">- 安装pipenv</span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash">pip install pipenv  <span class="comment">#pip3 install pipenv -i http://mirrors.aliyun.com/pypi/simple/ --trusted-host mirrors.aliyun.com</span></span></span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash">pipenv --version</span></span><br><span class="line"></span><br><span class="line">- 使用pipenv</span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash">pipenv --<span class="built_in">where</span> <span class="comment">#查看项目位置</span></span></span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash">pipenv --venv <span class="comment">#查看虚拟环境位置</span></span></span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash">pipenv --py  <span class="comment">#查看解释器信息</span></span></span><br><span class="line">  </span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash">pipenv shell</span></span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash">pipenv graph</span></span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash">pipenv uninstall 包名</span></span><br><span class="line"></span><br><span class="line">- 安装 Ansible</span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash">pip3 install setuptools-rust wheel -i http://mirrors.aliyun.com/pypi/simple/ --trusted-host mirrors.aliyun.com</span></span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash">pipenv install ansible -i http://mirrors.aliyun.com/pypi/simple/ --trusted-host mirrors.aliyun.com</span></span><br><span class="line">  </span><br><span class="line">- 查看 Ansible 版本</span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash">ansible --version</span></span><br></pre></td></tr></table></figure><h1 id="4-Ansible"><a href="#4-Ansible" class="headerlink" title="4. Ansible"></a>4. Ansible</h1><h2 id="4-1-常用模块"><a href="#4-1-常用模块" class="headerlink" title="4.1 常用模块"></a>4.1 常用模块</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">• Inventory：主机清单，根据服务器角色进行分组管理。</span><br><span class="line">• Playbook：描述希望在远程服务器做哪些事的文件，采用YAML格式</span><br><span class="line"></span><br><span class="line">常用模块：ping，command（默认），shell，yum，service，copy，user，group，file，template，unarchive，git, cron</span><br><span class="line">ansible-doc –l 查看所有模块</span><br><span class="line">ansible-doc –s copy 查看模块文档</span><br><span class="line"></span><br><span class="line">command 和 shell 模块 ：ansible 在远程主机执行 shell 命令，默认使用的 command 模块</span><br><span class="line">文件传输（copy、file 和 synchronize） ： copy 拷贝文件； file 修改文件权限 ；synchronize 增量同步</span><br><span class="line">收集系统信息（setup） : setup 模块用于收集系统信息</span><br></pre></td></tr></table></figure><h2 id="4-2-任务控制"><a href="#4-2-任务控制" class="headerlink" title="4.2 任务控制"></a>4.2 任务控制</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">指定：ansible-playbook example.yml --tags &quot;configuration,install&quot;</span><br><span class="line">跳过：ansible-playbook example.yml --skip-tags &quot;install&quot;</span><br><span class="line">语法法检查：ansible-playbook main.yml --syntax-check</span><br></pre></td></tr></table></figure><h2 id="4-3-include-import-区别"><a href="#4-3-include-import-区别" class="headerlink" title="4.3 include &amp; import 区别"></a>4.3 include &amp; import 区别</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">include*（动态）：在运行时导入</span><br><span class="line">• --list-tags，--list-tasks不会显示到输出</span><br><span class="line">• 不能使用notify触发来自include*内处理程序名称（handlers）</span><br><span class="line">import*（静态）：在Playbook解析时预先导入</span><br><span class="line">• 不能与循环一起使用</span><br><span class="line">• 将变量用于目标文件或角色名称时，不能使用inventory（主机/主机组等）中的变量</span><br></pre></td></tr></table></figure><h2 id="4-4-Roles目录结构"><a href="#4-4-Roles目录结构" class="headerlink" title="4.4 Roles目录结构"></a>4.4 Roles目录结构</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">• tasks - 包含角色要执行的主要任务列表</span><br><span class="line">• handlers - 包含角色使用的处理程序</span><br><span class="line">• defaults - 角色默认的变量</span><br><span class="line">• vars - 角色其他的变量</span><br><span class="line">• files - 角色部署时用到的文件</span><br><span class="line">• templates - 角色部署时用到的模板</span><br><span class="line">• meta - 角色定义的一些元数据</span><br></pre></td></tr></table></figure><h2 id="4-5-什么是-Ansible-facts"><a href="#4-5-什么是-Ansible-facts" class="headerlink" title="4.5 什么是 Ansible facts"></a>4.5 什么是 Ansible facts</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">facts 是远程系统的信息，主要包含IP地址，操作系统，以太网设备，mac 地址，时间/日期相关数据，硬件信息等信息.</span><br><span class="line">默认情况下，在使用 Ansible 对远程主机执行任何一个 playbook 之前，总会先通过 setup 模块获取 facts，并暂存在内存中，直至该 playbook 执行结束。</span><br><span class="line">(这意味着，想要在 playbook 中引用主机变量，至少先与该主机通信一次，以便 Ansible 能够访问其 facts，尽管有时候只需要来自该主机的少量信息)</span><br><span class="line"></span><br><span class="line">Ansible 提供了 setup 模块来收集主机的系统信息，这些 facts 信息可以直接以变量的形式使用。</span><br><span class="line">如果想查看 setup 模块获取到的数据，可以在命令行上通过调用 setup 模块命令查看：</span><br><span class="line">ansible all -m setup  #将会返回一大大堆数据</span><br><span class="line">获取这么多数据是非常耗时的，通过 time 指令可以看出，获取一台主机的 facts 数据就用了 3 秒多时间：</span><br><span class="line">time ansible localhost -m setup</span><br><span class="line">real 0m3.321s</span><br><span class="line">user 0m1.797s</span><br><span class="line">sys 0m0.205s</span><br><span class="line"></span><br><span class="line">在被控主机较少的情况下，收集信息还可以容忍，如果被控主机数量非常大，收集 facts 信息会消耗掉非常多时间。那怎么办呢？优化 Ansible 运行速度，最简单的莫过于设置 facts 缓存了</span><br><span class="line">设置 facts 缓存:我们可以设置 gather_facts: no 来禁止 Ansible 收集 facts 信息，但是有时候又需要使用 facts 中的内容，这时候可以设置 facts 的缓存。</span><br><span class="line">Ansible 1.8 版本开始，引入了 facts 缓存功能。</span><br><span class="line">Ansible 的配置文件中可以修改 gathering 的值为 smart、implicit 或者 explicit。</span><br><span class="line">- smart 表示默认收集 facts，但 facts 已有的情况下不会收集，即使用缓存 facts；</span><br><span class="line">- implicit 表示默认收集 facts，要禁止收集，必须使用 gather_facts: False；</span><br><span class="line">- explicit 则表示默认不收集，要显式收集，必须使用 gather_facts: Ture。</span><br><span class="line"></span><br><span class="line">在使用 facts 缓存时（即设置为 smart），Ansible 支持两种 facts 缓存：redis 和 jsonfile。</span><br><span class="line">- 使用 redis 缓存:</span><br><span class="line">gathering = smart</span><br><span class="line">fact_caching_timeout = 86400</span><br><span class="line">fact_caching = redis</span><br><span class="line">fact_caching_connection = 127.0.0.1:6379</span><br><span class="line"></span><br><span class="line"># 若 redis 设置了密码</span><br><span class="line"># fact_caching_connection = localhost:6379:0:admin</span><br><span class="line">- 使用 json 文件缓存</span><br><span class="line">fact_caching = jsonfile</span><br><span class="line">fact_caching_connection = /tmp/mycachedir #注意：这个目录需要是一个可读写的目录。</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ansible </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>gitlab</title>
      <link href="/posts/1255920736.html"/>
      <url>/posts/1255920736.html</url>
      
        <content type="html"><![CDATA[<h2 id="一、自建gitlab"><a href="#一、自建gitlab" class="headerlink" title="一、自建gitlab"></a>一、自建gitlab</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">官网文档：https://docs.gitlab.com/ee/policy/maintenance.html</span><br><span class="line">官网：https://packages.gitlab.com/gitlab/gitlab-ce/packages/el/7/</span><br><span class="line">CentOS清华大学：https://mirrors.tuna.tsinghua.edu.cn/gitlab-ce/yum/el7/</span><br><span class="line">ubuntu清华大学：https://mirrors.tuna.tsinghua.edu.cn/gitlab-ce/ubuntu/pool/xenial/main/g/gitlab-ce/</span><br></pre></td></tr></table></figure><h3 id="1-安装依赖"><a href="#1-安装依赖" class="headerlink" title="1.安装依赖"></a>1.安装依赖</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y curl openssh-server openssh-clients postfix cronie policycoreutils-python</span><br></pre></td></tr></table></figure><h3 id="2-下载gitlab包并安装"><a href="#2-下载gitlab包并安装" class="headerlink" title="2. 下载gitlab包并安装"></a>2. 下载gitlab包并安装</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cd /opt/tools/</span><br><span class="line"></span><br><span class="line">wget http://ftp.sjtu.edu.cn/sites/gitlab-ce/yum/el7/gitlab-ce-12.3.5-ce.0.el7.x86_64.rpm</span><br><span class="line">wget http://ftp.sjtu.edu.cn/sites/gitlab-ce/yum/el7/gitlab-ce-14.6.1-ce.0.el7.x86_64.rpm</span><br><span class="line"></span><br><span class="line">rpm -ivh gitlab-ce-12.3.5-ce.0.el7.x86_64.rpm</span><br><span class="line">rpm -ivh gitlab-ce-14.6.1-ce.0.el7.x86_64.rpm</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">curl -s https://packages.gitlab.com/install/repositories/gitlab/gitlab-ce/script.rpm.sh | sudo bash</span><br><span class="line">yum install gitlab-ce-12.3.5-ce.0.el7.x86_64.rpm</span><br><span class="line"></span><br><span class="line">#卸载完旧版本后，记得删除旧的安装数据[配置文件，安装目录，数据目录等]</span><br><span class="line">rpm -e gitlab-ce</span><br><span class="line">rm -rf /var/opt/gitlab/</span><br><span class="line">rm -rf /opt/gitlab/</span><br><span class="line">rm -rf /etc/gitlab/</span><br><span class="line">rm -rf /var/log/gitlab/</span><br><span class="line">rm -rf /etc/systemd/system/default.target.wants/gitlab-runsvdir.service</span><br></pre></td></tr></table></figure><h3 id="3-gitlab的配置文件-编辑如下"><a href="#3-gitlab的配置文件-编辑如下" class="headerlink" title="3. gitlab的配置文件  编辑如下"></a>3. gitlab的配置文件  编辑如下</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">grep &quot;^external_url&quot; /etc/gitlab/gitlab.rb</span><br><span class="line"></span><br><span class="line">vim /etc/gitlab/gitlab.rb </span><br><span class="line">external_url &#x27;http://192.168.64.129&#x27;  #绑定监听的域名或IP</span><br><span class="line">gitlab-ctl reconfigure  #自动配置，并安装数据库，初始化信息(第一次使用配置时间较长)</span><br><span class="line">gitlab-ctl start   #启动gitlab服务</span><br><span class="line">gitlab-ctl stop  #停止gitlab服务</span><br><span class="line">gitlab-ctl tail  #查看日志</span><br><span class="line">head -1 /opt/gitlab/version-manifest.txt    #gitlab-ce 13.2.1   #启动并查看gitlab版本信息</span><br></pre></td></tr></table></figure><h3 id="3-1-gitlab启用https-修改port"><a href="#3-1-gitlab启用https-修改port" class="headerlink" title="3.1 gitlab启用https,修改port"></a>3.1 gitlab启用https,修改port</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">如果需要手工修改nginx的port ，可以在gitlab.rb中设置 nginx[‘listen_port’] = 8000 ，然后再次 gitlab-ctl reconfigure即可</span><br><span class="line"></span><br><span class="line">vim /etc/gitlab/gitlab.rb</span><br><span class="line">external_url &#x27;https://192.168.64.129:10443&#x27;  #绑定监听的域名或IP</span><br><span class="line"></span><br><span class="line">#修改nginx配置</span><br><span class="line">gitlab_rails[&#x27;gitlab_shell_ssh_port&#x27;] = 10022</span><br><span class="line">nginx[&#x27;redirect_http_to_https&#x27;] = true</span><br><span class="line">nginx[&#x27;ssl_certificate&#x27;] = &quot;/etc/gitlab/ssl/gitlab.crt&quot;</span><br><span class="line">nginx[&#x27;ssl_certificate_key&#x27;] = &quot;/etc/gitlab/ssl/gitlab.key&quot;</span><br><span class="line"></span><br><span class="line">#生成秘钥与证书</span><br><span class="line">openssl genrsa -out server.key 2048</span><br><span class="line">openssl req -new -key server.key -subj &quot;/C=US/ST=Mars/L=iTranswarp/O=iTranswarp/OU=iTranswarp/CN=gitlab&quot; -out server.csr</span><br><span class="line"></span><br><span class="line">mv server.key  gitlab.origin.key</span><br><span class="line">openssl rsa -in gitlab.origin.key -out gitlab.key</span><br><span class="line">openssl x509 -req -days 3650 -in server.csr -signkey gitlab.key -out gitlab.crt</span><br><span class="line"></span><br><span class="line">ls /opt/tools/gitlab_ssl</span><br><span class="line">  gitlab.crt  gitlab.key  gitlab.origin.key  server.csr</span><br><span class="line"></span><br><span class="line">#拷贝证书到相应目录：</span><br><span class="line">cd /opt/tools/gitlab_ssl</span><br><span class="line">cp gitlab.crt  gitlab.key  /etc/gitlab/ssl</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">gitlab-ctl reconfigure</span><br><span class="line">gitlab-ctl stop</span><br><span class="line">gitlab-ctl start</span><br><span class="line">https://192.168.64.129:10443</span><br><span class="line"></span><br><span class="line">#获取/修改超级管理员root的密码</span><br><span class="line">gitlab-rails console production   #开始初始化密码</span><br><span class="line">irb(main):001:0&gt; u=User.where(id:1).first   #来查找与切换账号（User.all 可以查看所有用户）</span><br><span class="line">irb(main):001:0&gt; u.password=&#x27;12345678&#x27;    #设置密码为12345678(这里的密码看自己喜欢)：</span><br><span class="line">irb(main):001:0&gt; u.password_confirmation=&#x27;12345678&#x27;   #再次确认密码</span><br><span class="line">irb(main):001:0&gt; u.save!   #进行保存（切记切记 后面的 !）</span><br><span class="line">如果看到true即设置成功，执行 exit 退出当前设置流程即可</span><br></pre></td></tr></table></figure><h3 id="3-2-在系统防火墙中打开HTTP和SSH访问"><a href="#3-2-在系统防火墙中打开HTTP和SSH访问" class="headerlink" title="3.2 在系统防火墙中打开HTTP和SSH访问"></a>3.2 在系统防火墙中打开HTTP和SSH访问</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --permanent --add-service=http</span><br><span class="line">firewall-cmd --permanent --add-service=https</span><br><span class="line">firewall-cmd --zone=public --add-port=10022/tcp --permanent</span><br><span class="line">firewall-cmd --zone=public --add-port=10443/tcp --permanent</span><br><span class="line">firewall-cmd --reload</span><br><span class="line">firewall-cmd --zone=public --list-ports</span><br></pre></td></tr></table></figure><h3 id="3-3-修改配置文件，添加smtp邮件功能"><a href="#3-3-修改配置文件，添加smtp邮件功能" class="headerlink" title="3.3 修改配置文件，添加smtp邮件功能"></a>3.3 修改配置文件，添加smtp邮件功能</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/gitlab/gitlab.rb</span><br><span class="line">grep -P &quot;^[^#].*smtp_|user_email|gitlab_email&quot; /etc/gitlab/gitlab.rb</span><br><span class="line"></span><br><span class="line">gitlab_rails[&#x27;gitlab_email_enabled&#x27;] = true</span><br><span class="line">gitlab_rails[&#x27;gitlab_email_from&#x27;] = &#x27;xxxx@qq.com&#x27;</span><br><span class="line">gitlab_rails[&#x27;gitlab_email_display_name&#x27;] = &#x27;Admin&#x27;</span><br><span class="line">gitlab_rails[&#x27;gitlab_email_reply_to&#x27;] = &#x27;xxxx@qq.com&#x27;</span><br><span class="line">gitlab_rails[&#x27;gitlab_email_subject_suffix&#x27;] = &#x27;[gitlab]&#x27;</span><br><span class="line">gitlab_rails[&#x27;smtp_enable&#x27;] = true</span><br><span class="line">gitlab_rails[&#x27;smtp_address&#x27;] = &quot;stmp.qq.com&quot;</span><br><span class="line">gitlab_rails[&#x27;smtp_port&#x27;] = 465</span><br><span class="line">gitlab_rails[&#x27;smtp_user_name&#x27;] = &quot;xxxx@qq.com&quot;</span><br><span class="line">gitlab_rails[&#x27;smtp_password&#x27;] = &quot;heiwyqbe&quot;</span><br><span class="line">gitlab_rails[&#x27;smtp_domain&#x27;] = &quot;qq.com&quot;</span><br><span class="line">gitlab_rails[&#x27;smtp_authentication&#x27;] = &quot;login&quot;</span><br><span class="line">gitlab_rails[&#x27;smtp_enable_starttls_auto&#x27;] = true</span><br><span class="line">gitlab_rails[&#x27;smtp_tls&#x27;] = true</span><br><span class="line">gitlab_rails[&#x27;smtp_openssl_verify_mode&#x27;] = &#x27;none&#x27;</span><br><span class="line">user[&#x27;git_user_email&#x27;] = &quot;xxxx@qq.com&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#console命令进行发送邮件测试</span><br><span class="line">gitlab-rails console</span><br><span class="line">irb(main):001:0&gt; Notify.test_email(&#x27;xxxx@qq.com&#x27;, &#x27;Message Subject&#x27;, &#x27;Message Body&#x27;).deliver_now</span><br><span class="line">注：gitlab配置邮箱报execution expired，云服务器默认是屏蔽25端口的,改用163邮箱的465端口即可</span><br><span class="line"></span><br><span class="line">firewall-cmd --zone=public --add-port=465/tcp --permanent</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#安装Postfix以发送通知电子邮件</span><br><span class="line">sudo yum install postfix</span><br><span class="line">sudo systemctl enable postfix</span><br><span class="line">sudo systemctl start postfix</span><br><span class="line">在Postfix安装期间，可能会出现配置屏幕。选择“Internet Site”并按Enter键。使用服务器的外部DNS作为“邮件名称”，然后按Enter键。如果出现其他屏幕，请继续按Enter键接受默认值</span><br></pre></td></tr></table></figure><h2 id="二、自建的Gitlab备份、迁移、恢复和升级"><a href="#二、自建的Gitlab备份、迁移、恢复和升级" class="headerlink" title="二、自建的Gitlab备份、迁移、恢复和升级"></a>二、自建的Gitlab备份、迁移、恢复和升级</h2><h3 id="1-Gitlab备份"><a href="#1-Gitlab备份" class="headerlink" title="1.Gitlab备份"></a>1.Gitlab备份</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">gitlab-rake gitlab:backup:create</span><br><span class="line">使用以上命令会在/var/opt/gitlab/backups目录下创建一个名称类似为1590031244_gitlab_backup.tar的压缩包, 这个压缩包就是Gitlab整个的完整部分, 其中开头的1590031244是备份创建的日期 </span><br><span class="line"></span><br><span class="line">/etc/gitlab/gitlab.rb  #配置文件须备份 /var/opt/gitlab/nginx/conf  #nginx配置文件 /etc/postfix/main.cfpostfix  #邮件配置备份</span><br></pre></td></tr></table></figure><h4 id="1-1Gitlab备份目录"><a href="#1-1Gitlab备份目录" class="headerlink" title="1.1Gitlab备份目录"></a>1.1Gitlab备份目录</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gitlab_rails[&#x27;backup_path&#x27;] = &quot;/var/opt/gitlab/backups&quot; /var/opt/gitlab/backups修改为你想存放备份的目录即可, 修改完成之后使用gitlab-ctl reconfigure命令重载配置文件即可.</span><br></pre></td></tr></table></figure><h4 id="1-2Gitlab自动备份"><a href="#1-2Gitlab自动备份" class="headerlink" title="1.2Gitlab自动备份"></a>1.2Gitlab自动备份</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">实现每天凌晨2点进行一次自动备份:通过crontab使用备份命令实现</span><br><span class="line">0 2 * * * /opt/gitlab/bin/gitlab-rake gitlab:backup:create</span><br></pre></td></tr></table></figure><h3 id="2-Gitlab恢复"><a href="#2-Gitlab恢复" class="headerlink" title="2.Gitlab恢复"></a>2.Gitlab恢复</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 停止相关数据连接服务</span><br><span class="line">gitlab-ctl stop unicorn </span><br><span class="line">gitlab-ctl stop sidekiq </span><br><span class="line"></span><br><span class="line">#从1481598919编号备份中恢复 </span><br><span class="line">gitlab-rake gitlab:backup:restore BACKUP=1590031244 </span><br><span class="line"></span><br><span class="line">#启动Gitlab </span><br><span class="line">gitlab-ctl start</span><br></pre></td></tr></table></figure><h3 id="3-gitlab迁移"><a href="#3-gitlab迁移" class="headerlink" title="3.gitlab迁移"></a>3.gitlab迁移</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">要求：新服务器的gitlab版本与旧的服务器相同。</span><br><span class="line"></span><br><span class="line">迁移如同备份与恢复的步骤一样, 只需要将老服务器/var/opt/gitlab/backups目录下的备份文件拷贝到新服务器上的/var/opt/gitlab/backups即可(如果你没修改过默认备份目录的话). </span><br><span class="line"></span><br><span class="line">但是需要注意的是新服务器上的Gitlab的版本必须与创建备份时的Gitlab版本号相同. 比如新服务器安装的是最新的7.60版本的Gitlab, 那么迁移之前, 最好将老服务器的Gitlab 升级为7.60在进行备份.</span><br><span class="line"></span><br><span class="line">/etc/gitlab/gitlab.rb   #gitlab配置文件须迁移,迁移后需要调整数据存放目录 </span><br><span class="line">/var/opt/gitlab/nginx/conf   #nginx配置文件目录须迁移 </span><br><span class="line">/etc/gitlab/gitlab-secrets.json  #复制新服务器相同的目录下 </span><br><span class="line">/etc/ssh/*key*   # 复制到新服务器相同目录下，解决ssh key认证不成功问题 </span><br><span class="line"></span><br><span class="line">gitlab-ctl stop unicorn    #ok: down: unicorn: 0s, normally up </span><br><span class="line">gitlab-ctl stop sidekiq    #ok: down: sidekiq: 0s, normally up </span><br><span class="line">chmod 777 /var/opt/gitlab/backups/1481598919_gitlab_backup.tar </span><br><span class="line"># 或 chown git:git /var/opt/gitlab/backups/1481598919_gitlab_backup.tar </span><br><span class="line">gitlab-rake gitlab:backup:restore BACKUP=1590031244</span><br></pre></td></tr></table></figure><h3 id="4-gitlab升级"><a href="#4-gitlab升级" class="headerlink" title="4.gitlab升级"></a>4.gitlab升级</h3><h4 id="4-1关闭gitlab服务"><a href="#4-1关闭gitlab服务" class="headerlink" title="4.1关闭gitlab服务"></a>4.1关闭gitlab服务</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">gitlab-ctl stop unicorn </span><br><span class="line">gitlab-ctl stop sidekiq </span><br><span class="line">gitlab-ctl stop nginx</span><br></pre></td></tr></table></figure><h4 id="4-2-备份gitlab"><a href="#4-2-备份gitlab" class="headerlink" title="4.2.备份gitlab"></a>4.2.备份gitlab</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gitlab-rake gitlab:backup:create</span><br></pre></td></tr></table></figure><h4 id="4-3-下载gitlab的RPM包并进行升级"><a href="#4-3-下载gitlab的RPM包并进行升级" class="headerlink" title="4.3.下载gitlab的RPM包并进行升级"></a>4.3.下载gitlab的RPM包并进行升级</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#升级文档：https://docs.gitlab.com/ee/policy/maintenance.html</span><br><span class="line">依据文档需要先升级到12.3.5-&gt; 12.10.6-&gt; 13.0.0-&gt;13.2.0</span><br><span class="line">curl -s https://packages.gitlab.com/install/repositories/gitlab/gitlab-ce/script.rpm.sh | sudo bash </span><br><span class="line">yum update gitlab-ce </span><br><span class="line">或者直接安装高版本 yum install gitlab-ce-13.2.1-ce.0.el7.x86_64 </span><br><span class="line">或者上官网下载最新版本 gitlab对应软件包 [gitlab官网](https://packages.gitlab.com/gitlab/gitlab-ce/packages/el/7/gitlab-ce-13.2.1-ce.0.el7.x86_64.rpm) 使用 rpm -Uvh gitlab-ce-13.2.1-ce.0.el7.x86_64.rpm</span><br></pre></td></tr></table></figure><h3 id="5-常见错误"><a href="#5-常见错误" class="headerlink" title="5.常见错误"></a>5.常见错误</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#报错</span><br><span class="line">Error executing action `run` on resource &#x27;ruby_block[directory resource: /var/opt/gitlab/git-data/repositories]&#x27; </span><br><span class="line">解决方法: sudo chmod 2770 /var/opt/gitlab/git-data/repositories</span><br></pre></td></tr></table></figure><h2 id="三、其它git操作"><a href="#三、其它git操作" class="headerlink" title="三、其它git操作"></a>三、其它git操作</h2><h3 id="test分支版本回退"><a href="#test分支版本回退" class="headerlink" title="test分支版本回退"></a>test分支版本回退</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git log</span><br><span class="line">git reset --hard id  //选择要回退的id</span><br><span class="line">git push -f origin test  //回退后强制推送到远程仓库</span><br></pre></td></tr></table></figure><h3 id="git拉取远程分支"><a href="#git拉取远程分支" class="headerlink" title="git拉取远程分支"></a>git拉取远程分支</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git fetch origin dev //从远程获取最新版本到本地，不会自动merge</span><br><span class="line">git checkout -b 本地分支名 origin/远程分支名  </span><br></pre></td></tr></table></figure><h3 id="拉取远程分支到本地分支"><a href="#拉取远程分支到本地分支" class="headerlink" title="拉取远程分支到本地分支"></a>拉取远程分支到本地分支</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git checkout mydev  //切换到本地分支</span><br><span class="line">git pull origin dev   //将远程仓库中的dev分支拉取到mydev分支</span><br></pre></td></tr></table></figure><h3 id="删除本地分支及远程分支"><a href="#删除本地分支及远程分支" class="headerlink" title="删除本地分支及远程分支"></a>删除本地分支及远程分支</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git branch -D dev  //删除本地分支</span><br><span class="line">git push origin :dev  //删除远程分支s</span><br></pre></td></tr></table></figure><h3 id="删除本地及远程仓库tag"><a href="#删除本地及远程仓库tag" class="headerlink" title="删除本地及远程仓库tag"></a>删除本地及远程仓库tag</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git tag -d v2.9.0　　　　　　　　//本地删除tag</span><br><span class="line">git push origin :refs/tags/v2.9.0　　　　　//本地tag删除了，再执行该句，删除线上tag</span><br></pre></td></tr></table></figure><h3 id="查看最近3条更新日志，并简单显示出所涉及的文件"><a href="#查看最近3条更新日志，并简单显示出所涉及的文件" class="headerlink" title="查看最近3条更新日志，并简单显示出所涉及的文件"></a>查看最近3条更新日志，并简单显示出所涉及的文件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git log -3 --stat</span><br><span class="line">git show 3dbfdbccc8238ff688316e481266cfbda8733b8d   //查看修改了文件的那些内容</span><br></pre></td></tr></table></figure><h3 id="统计代码每天提交的行数"><a href="#统计代码每天提交的行数" class="headerlink" title="统计代码每天提交的行数"></a>统计代码每天提交的行数</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line">#统计某时间段内每个开发人员提交的分支，提交的次数，增加的行数，删除的行数与相对增加的行数</span><br><span class="line">#!/usr/bin/env bash</span><br><span class="line"></span><br><span class="line"># 脚本运行： sh gitCodeStat.sh 2021-10-18 2021-10-19</span><br><span class="line"></span><br><span class="line"># 项目所有目录</span><br><span class="line">ITEM_PATH=E:/Gitlab-code</span><br><span class="line"># 统计结果输出文件</span><br><span class="line">curRecordFile=E:/Gitlab-code/gitCodeStat-`date &quot;+%Y%m%d&quot;`&quot;.log&quot;</span><br><span class="line">TODAY_DATE=`date &quot;+%Y-%m-%d %H:%M:%S&quot;`</span><br><span class="line"># 开始时间</span><br><span class="line">#START_DATE=`date &quot;+%Y-%m-%d`</span><br><span class="line">START_DATE=$1</span><br><span class="line"># 结束时间</span><br><span class="line">#STOP_DATE=`date &quot;+%Y-%m-%d`</span><br><span class="line">STOP_DATE=$2</span><br><span class="line"># 统计周期长度，默认为1天前的</span><br><span class="line">STAT_DURATION_DAY=1</span><br><span class="line"></span><br><span class="line"># 统计代码</span><br><span class="line">function statCode() &#123;</span><br><span class="line">    git fetch --all</span><br><span class="line">    git pull --all</span><br><span class="line"></span><br><span class="line">    echo -e &quot;stat git code =&gt; $(pwd)&quot;</span><br><span class="line">    #git log --format=&#x27;%aN&#x27; --since=$&#123;STAT_DURATION_DAY&#125;.day.ago | sort -u | while read name; do echo -en &quot;当前查询时间:$TODAY_DATE 项目:$1 开发人员:$name&quot;; \</span><br><span class="line">#git log --graph --decorate |grep HEAD |awk -F &#x27;,&#x27; &#x27;&#123;print  &quot; 提交分支:&quot;$1&#125;&#x27;; \</span><br><span class="line">    #git log --since=$&#123;STAT_DURATION_DAY&#125;.day.ago --author=&quot;$name&quot; --pretty=oneline | awk -vsum=0 &#x27;&#123; sum += 1 &#125; END &#123; printf &quot; 提交的次数:%s &quot;, sum &#125;&#x27; -; \</span><br><span class="line">    #git log --since=$&#123;STAT_DURATION_DAY&#125;.day.ago --author=&quot;$name&quot; --pretty=tformat: --numstat | awk -vadd=0 -vsubs=0 -vloc=0 &#x27;&#123; add += $1; subs += $2; loc += $1 - $2 &#125; END &#123; printf &quot; 增加的行数:%s 删除的行数:%s 相对增加的行数:%s \n&quot;, add, subs, loc &#125;&#x27; -; done  &gt;&gt; $curRecordFile</span><br><span class="line">    </span><br><span class="line">CURRENT_BRANCH=`git rev-parse --abbrev-ref HEAD`</span><br><span class="line">    git log --format=&#x27;%aN&#x27; --since=&quot;$&#123;START_DATE&#125; 00:00&quot; --until=&quot;$&#123;STOP_DATE&#125; 23:59&quot; | sort -u | while read name; do echo -en &quot;当前查询时间:$TODAY_DATE 查询时间范围:[$&#123;START_DATE&#125; 00:00----$&#123;STOP_DATE&#125; 23:59] 项目:$1 分支:$&#123;CURRENT_BRANCH&#125; 开发人员:$name&quot;; \</span><br><span class="line">    git log --since=&quot;$&#123;START_DATE&#125; 00:00&quot; --until=&quot;$&#123;STOP_DATE&#125; 23:59&quot; --author=&quot;$name&quot; --pretty=oneline | awk -vsum=0 &#x27;&#123; sum += 1 &#125; END &#123; printf &quot; 提交的次数:%s &quot;, sum &#125;&#x27; -; \</span><br><span class="line">    git log --since=&quot;$&#123;START_DATE&#125; 00:00&quot; --until=&quot;$&#123;STOP_DATE&#125; 23:59&quot; --author=&quot;$name&quot; --pretty=tformat: --numstat | awk -vadd=0 -vsubs=0 -vloc=0 &#x27;&#123; add += $1; subs += $2; loc += $1 - $2 &#125; END &#123; printf &quot; 增加的行数:%s 删除的行数:%s 相对增加的行数:%s \n&quot;, add, subs, loc &#125;&#x27; -; done  &gt;&gt; $curRecordFile</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 遍历文件夹下的所有项目文件夹</span><br><span class="line">function readDir() &#123;</span><br><span class="line">    echo &quot;current record file name: $curRecordFile&quot;</span><br><span class="line">    echo &quot;date project name commits addLines removeLines oppositeAddLines&quot;</span><br><span class="line">    cd $ITEM_PATH</span><br><span class="line">    for subDir in `ls $ITEM_PATH` ;</span><br><span class="line">    do</span><br><span class="line">        echo &quot;sub dir : $subDir&quot;</span><br><span class="line">        cd $subDir</span><br><span class="line">        echo &quot;current dir: $(pwd)&quot;</span><br><span class="line">        statCode $subDir</span><br><span class="line">        cd ../</span><br><span class="line">    done</span><br><span class="line">    echo &quot;&quot; &gt;&gt; $curRecordFile</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if [ $# == 2 ]; then</span><br><span class="line">    echo &quot;&quot;</span><br><span class="line">    echo &quot;请输入开始日期 结果日期&quot;</span><br><span class="line">    echo &quot;例如: sh $0 2021-10-18 2021-10-19&quot;</span><br><span class="line">    </span><br><span class="line">if echo $1 | grep -Eq &quot;[0-9]&#123;4&#125;-[0-9]&#123;2&#125;-[0-9]&#123;2&#125;&quot; ; then </span><br><span class="line">        if echo $2 | grep -Eq &quot;[0-9]&#123;4&#125;-[0-9]&#123;2&#125;-[0-9]&#123;2&#125;&quot; ; then  </span><br><span class="line">            # 启动脚本</span><br><span class="line">            readDir</span><br><span class="line">else</span><br><span class="line">            echo &quot;输入的日期格式不正确，应为yyyy-mm-dd&quot;</span><br><span class="line">            exit 1</span><br><span class="line">        fi</span><br><span class="line">    else</span><br><span class="line">        echo &quot;输入的日期格式不正确，应为yyyy-mm-dd&quot;</span><br><span class="line">        exit 1</span><br><span class="line">    fi</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">else </span><br><span class="line">    echo &quot;输入是日期格式不正确或参数不够&quot;</span><br><span class="line">    echo &quot;请正确输入开始日期 结果日期，中间用空格隔开&quot;</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line">#统计某时间段内每个开发人员提交的分支，提交的次数，增加的行数，删除的行数与相对增加的行数</span><br><span class="line">#!/usr/bin/env bash</span><br><span class="line"></span><br><span class="line"># 脚本运行： sh gitCodeStat.sh 2021-10-14 2021-10-19</span><br><span class="line"># 会每天生成一个日期文件记录当天的统计</span><br><span class="line"></span><br><span class="line"># 项目所有目录</span><br><span class="line">ITEM_PATH=E:/gitCode</span><br><span class="line"># 统计结果输出文件</span><br><span class="line">curRecordFile=E:/gitcodelog/`date &quot;+%Y%m%d&quot;`&quot;.log&quot;</span><br><span class="line">TODAY_DATE=`date &quot;+%Y-%m-%d %H:%M:%S&quot;`</span><br><span class="line"># 开始时间</span><br><span class="line">#START_DATE=`date &quot;+%Y-%m-%d`</span><br><span class="line">START_DATE=$1</span><br><span class="line"># 结束时间</span><br><span class="line">#STOP_DATE=`date &quot;+%Y-%m-%d`</span><br><span class="line">STOP_DATE=$2</span><br><span class="line"># 统计周期长度，默认为1天前的</span><br><span class="line">STAT_DURATION_DAY=1</span><br><span class="line"></span><br><span class="line">t1=`date -d &quot;$&#123;START_DATE&#125;&quot; +%s`</span><br><span class="line">t2=`date -d &quot;$&#123;STOP_DATE&#125;&quot; +%s`</span><br><span class="line"></span><br><span class="line"># 统计代码</span><br><span class="line">function statCode() &#123;</span><br><span class="line">    START_DATE=$&#123;2&#125;</span><br><span class="line">    git fetch --all</span><br><span class="line">    git pull --all</span><br><span class="line"></span><br><span class="line">    echo -e &quot;stat git code =&gt; $(pwd)&quot;</span><br><span class="line">CURRENT_BRANCH=`git rev-parse --abbrev-ref HEAD` </span><br><span class="line">    git log --format=&#x27;%aN&#x27; --since=&quot;$&#123;START_DATE&#125; 00:00&quot; --until=&quot;$&#123;START_DATE&#125; 23:59&quot; |sort -u |while read name; do echo -en &quot;\r\n 开发人员:$name 项目:$1 分支:$&#123;CURRENT_BRANCH&#125; &quot;; \</span><br><span class="line">    git log --since=&quot;$&#123;START_DATE&#125; 00:00&quot; --until=&quot;$&#123;START_DATE&#125; 23:59&quot; --author=&quot;$name&quot; --pretty=oneline | awk -vsum=0 &#x27;&#123; sum += 1 &#125; END &#123; printf &quot; 提交的次数:%s &quot;, sum &#125;&#x27; -; \</span><br><span class="line">    git log --since=&quot;$&#123;START_DATE&#125; 00:00&quot; --until=&quot;$&#123;START_DATE&#125; 23:59&quot; --author=&quot;$name&quot; --pretty=tformat: --numstat | awk -vadd=0 -vsubs=0 -vloc=0 &#x27;&#123; add += $1; subs += $2; loc += $1 - $2 &#125; END &#123; printf &quot; 增加的行数:%s 删除的行数:%s 相对增加的行数:%s \r\n\r\n&quot;, add, subs, loc &#125;&#x27; -; done  &gt;&gt; $curRecordFile</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 遍历文件夹下的所有项目文件夹</span><br><span class="line">function readDir() &#123;</span><br><span class="line">    echo &quot;current record file name: $curRecordFile&quot;</span><br><span class="line">    cd $ITEM_PATH</span><br><span class="line">    for subDir in `ls $ITEM_PATH` ;</span><br><span class="line">    do</span><br><span class="line">        cd $ITEM_PATH/$subDir</span><br><span class="line">echo -en &quot;----$subDir----\r\n&quot; &gt;&gt; $curRecordFile</span><br><span class="line">START_DATE=$&#123;1&#125;</span><br><span class="line">        statCode $subDir $START_DATE</span><br><span class="line">        cd ../</span><br><span class="line">    done</span><br><span class="line">echo -en &quot;\r\n&quot; &gt;&gt; $curRecordFile</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 启动脚本</span><br><span class="line">#readDir</span><br><span class="line"></span><br><span class="line">function genAlldate</span><br><span class="line">&#123;</span><br><span class="line"> START_DAY_TMP=$&#123;1&#125;</span><br><span class="line"> END_DAY_TMP=$&#123;2&#125;</span><br><span class="line"> SPLITER_TMP=&quot;-&quot;</span><br><span class="line"> I_DATE_ARRAY_INDX=0</span><br><span class="line"></span><br><span class="line"> while (( &quot;$&#123;START_DAY_TMP&#125;&quot; &lt;= &quot;$&#123;END_DAY_TMP&#125;&quot; )); do</span><br><span class="line"> cur_day=$(date -d @$&#123;START_DAY_TMP&#125; +&quot;%Y$&#123;SPLITER_TMP&#125;%m$&#123;SPLITER_TMP&#125;%d&quot;)</span><br><span class="line"> DATE_ARRAY[$&#123;I_DATE_ARRAY_INDX&#125;]=$&#123;cur_day&#125;</span><br><span class="line"></span><br><span class="line"> START_DAY_TMP=$(($&#123;START_DAY_TMP&#125;+86400))</span><br><span class="line"> ((I_DATE_ARRAY_INDX++))</span><br><span class="line"> </span><br><span class="line"> done</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">START_DAY=$(date -d &quot;$1&quot; +%s)</span><br><span class="line">STOP_DY=$(date -d &quot;$2&quot; +%s)</span><br><span class="line">declare -a DATE_ARRAY</span><br><span class="line">genAlldate &quot;$&#123;START_DAY&#125;&quot; &quot;$&#123;STOP_DY&#125;&quot;</span><br><span class="line"></span><br><span class="line">if [[ $START_DATE &lt; $STOP_DATE ]]; then</span><br><span class="line">    for i in &quot;$&#123;!DATE_ARRAY[@]&#125;&quot;; do</span><br><span class="line">     #echo &quot;$&#123;DATE_ARRAY[$i]&#125;&quot;</span><br><span class="line"> curRecordFile=E:/gitcodelog/$&#123;DATE_ARRAY[$i]&#125;.log</span><br><span class="line"> readDir &quot;$&#123;DATE_ARRAY[$i]&#125;&quot;</span><br><span class="line">    done</span><br><span class="line">    #echo &quot;$START_DATE &lt; $STOP_DATE&quot;</span><br><span class="line">elif [[ $START_DATE = $STOP_DATE ]]; then</span><br><span class="line">    curRecordFile=E:/gitcodelog/$&#123;START_DATE&#125;.log</span><br><span class="line">readDir &quot;$&#123;START_DATE&#125;&quot;</span><br><span class="line">#echo &quot;$START_DATE = $STOP_DATE&quot; &gt;&gt; $curRecordFile</span><br><span class="line">else</span><br><span class="line">    #echo &quot;$START_DATE &gt; $STOP_DATE&quot;</span><br><span class="line">echo &quot;第二个日期早于第一个日期&quot;</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> gitlab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux性能分析工具使用</title>
      <link href="/posts/2285186292.html"/>
      <url>/posts/2285186292.html</url>
      
        <content type="html"><![CDATA[<h1 id="Dool"><a href="#Dool" class="headerlink" title="Dool"></a>Dool</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Dool 是一个命令行工具，用于监控系统的许多方面：CPU、内存、网络、平均负载等。它还包括一个强大的插件架构，可以监控其他系统指标。</span><br></pre></td></tr></table></figure><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1. 下载最新版本的存档文件或克隆 Git 存储库:https://github.com/scottchiefbaker/dool/releases</span><br><span class="line">2. 将存档解压到系统上适当的临时目录</span><br><span class="line">3. 运行install.py脚本</span><br></pre></td></tr></table></figure><h2 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h2><h3 id="１-total-cpu-usage："><a href="#１-total-cpu-usage：" class="headerlink" title="１. total-cpu-usage："></a>１. total-cpu-usage：</h3><table><thead><tr><th>usr</th><th>sys</th><th>idl</th><th>wai</th><th>hiq</th><th>siq</th></tr></thead><tbody><tr><td>用户时间占比</td><td>系统时间占比</td><td>空闲时间占比</td><td>等待时间占比</td><td>硬中断</td><td>软中断</td></tr></tbody></table><h3 id="2-dsk-total："><a href="#2-dsk-total：" class="headerlink" title="2. dsk&#x2F;total："></a>2. dsk&#x2F;total：</h3><table><thead><tr><th>read</th><th>writ</th></tr></thead><tbody><tr><td>磁盘的读总数（KB或者MB）</td><td>磁盘的写总数（KB或者MB）</td></tr></tbody></table><h3 id="3-net-total："><a href="#3-net-total：" class="headerlink" title="3. net&#x2F;total："></a>3. net&#x2F;total：</h3><table><thead><tr><th>recv</th><th>send</th></tr></thead><tbody><tr><td>网络设备接收的数据总数（KB或者MB）</td><td>网络设备发送的数据总数（KB或者MB）</td></tr></tbody></table><h3 id="4-paging-系统的分页活动"><a href="#4-paging-系统的分页活动" class="headerlink" title="4. paging(系统的分页活动):"></a>4. paging(系统的分页活动):</h3><table><thead><tr><th>in</th><th>out</th></tr></thead><tbody><tr><td>换入次数</td><td>换出次数</td></tr></tbody></table><h3 id="5-system（系统统计）："><a href="#5-system（系统统计）：" class="headerlink" title="5. system（系统统计）："></a>5. system（系统统计）：</h3><table><thead><tr><th>int</th><th>csw</th></tr></thead><tbody><tr><td>终端次数</td><td>上下文切换次数</td></tr></tbody></table><h2 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">1. 最常见的用法： --more预设并每 15 秒输出一次数据。可用预设为--defaults、--more、 或--all。如果没有指定延迟，Dool将默认每秒输出一次</span><br><span class="line">dool --more 15       # 深色模式</span><br><span class="line">dool --more --bw 15  # 灯光模式</span><br><span class="line"></span><br><span class="line">2. 查看插件列表</span><br><span class="line">dool --version</span><br><span class="line"></span><br><span class="line">3. 显示 CPU 使用率和每个网络接口的使用情况</span><br><span class="line">dool --cpu --net --time --full </span><br><span class="line"></span><br><span class="line">4. 显示磁盘 IO 总量、/dev/vda 和 /dev/sdd</span><br><span class="line">dool --disk -D total,vda,sdd </span><br><span class="line"></span><br><span class="line">5. 显示 eth0, eth1 和 flannel.1, cni0, ens18的网络流量</span><br><span class="line">dool --net -N eth0,eth1,ens18,flannel.1,cni0     </span><br></pre></td></tr></table></figure><h1 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h1><h3 id="1-CPU性能分析"><a href="#1-CPU性能分析" class="headerlink" title="1. CPU性能分析"></a>1. CPU性能分析</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">实时输出各个进程的CPU占用情况，并以一个实时的“top”列表形式展示,可以快速发现CPU占用率最高的进程，以便进行后续的优化和改进。</span></span><br><span class="line">dool --cpu --top-cpu</span><br></pre></td></tr></table></figure><h3 id="2-磁盘IO性能分析"><a href="#2-磁盘IO性能分析" class="headerlink" title="2. 磁盘IO性能分析"></a>2. 磁盘IO性能分析</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">实时输出各个分区的磁盘IO数据，并以一个实时的“top”列表形式展示,可以快速发现磁盘I/O占用率最高的分区，以便进行后续的优化和改进。</span></span><br><span class="line">dool --disk --top-bio</span><br></pre></td></tr></table></figure><h3 id="3-网络性能分析"><a href="#3-网络性能分析" class="headerlink" title="3. 网络性能分析"></a>3. 网络性能分析</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">实时输出TCP和UDP连接情况、网络流量数据等，以帮助我们分析系统中的网络性能问题，并采取相应的措施。</span></span><br><span class="line">dool --net --tcp --udp</span><br></pre></td></tr></table></figure><h3 id="4-查看时间、CPU、磁盘读写、IO、负载、内存、网络、最高的CPU占用和最高的内存占用"><a href="#4-查看时间、CPU、磁盘读写、IO、负载、内存、网络、最高的CPU占用和最高的内存占用" class="headerlink" title="4. 查看时间、CPU、磁盘读写、IO、负载、内存、网络、最高的CPU占用和最高的内存占用"></a>4. 查看时间、CPU、磁盘读写、IO、负载、内存、网络、最高的CPU占用和最高的内存占用</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dool -tcdrlmn --top-cpu --top-mem</span><br></pre></td></tr></table></figure><h3 id="5-查看8颗核心，每颗核心的使用情况和CPU使用情况"><a href="#5-查看8颗核心，每颗核心的使用情况和CPU使用情况" class="headerlink" title="5. 查看8颗核心，每颗核心的使用情况和CPU使用情况"></a>5. 查看8颗核心，每颗核心的使用情况和CPU使用情况</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dool  -cl  -C  0,1,2,3,4,5,6,7   --top-cpu</span><br></pre></td></tr></table></figure><h1 id="iostat"><a href="#iostat" class="headerlink" title="iostat"></a>iostat</h1><h2 id="1-安装方式"><a href="#1-安装方式" class="headerlink" title="1. 安装方式"></a>1. 安装方式</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install sysstat</span><br></pre></td></tr></table></figure><h2 id="2-常用命令格式"><a href="#2-常用命令格式" class="headerlink" title="2. 常用命令格式"></a>2. 常用命令格式</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Iostat [参数] [时间] [次数]</span><br><span class="line">参数说明：</span><br><span class="line">-c 显示CPU使用情况</span><br><span class="line">-d 显示磁盘使用情况</span><br><span class="line">-k 以K为单位显示</span><br><span class="line">-m 以M为单位显示</span><br><span class="line">-n 显示NFS使用情况</span><br><span class="line">-N 显示磁盘阵列（LVM）信息</span><br><span class="line">-P 可以报告出每块磁盘的每个分区的使用情况</span><br><span class="line">-t 显示每秒向终端读取和写入的字符数和CPU的信息</span><br><span class="line">-X 显示详细信息</span><br></pre></td></tr></table></figure><h2 id="3-cpu说明"><a href="#3-cpu说明" class="headerlink" title="3. cpu说明"></a>3. cpu说明</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">iostat -c</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">user：CPU处在用户模式下的时间百分比。</span></span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash"><span class="built_in">nice</span>:CPU 处在带NICE值的用户模式下的时间百分比</span></span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">system:CPU处在系统模式下的时间百分比</span></span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">iowait:CPU等待输入输出完成时间的百分比</span></span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">steal：管理程序维护另一个虚拟处理器时，虚拟CPU的无意识等待时间百分比。</span></span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">idle：CPU空闲时间百分比</span></span><br></pre></td></tr></table></figure><h2 id="4-Device说明"><a href="#4-Device说明" class="headerlink" title="4. Device说明"></a>4. Device说明</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">iostat -d</span></span><br><span class="line"></span><br><span class="line">tps：设备每秒的传输次数,也就是每秒I/O次数（IOPS,磁盘连续读和连续写之和）</span><br><span class="line">kB_read/s：每秒从设备读出的数据量（kB/s）</span><br><span class="line">kB_wrtn/s：每秒向设备写入的数据量（kB/s）</span><br><span class="line">kB_read： 读出数据 的总量（kB）</span><br><span class="line">kB_wrtn：写入数据 的总量（kB</span><br></pre></td></tr></table></figure><h2 id="5-Device详细说明"><a href="#5-Device详细说明" class="headerlink" title="5. Device详细说明"></a>5. Device详细说明</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">iostat -x</span></span><br><span class="line"></span><br><span class="line">rrqm/s：每秒合并到设备的读取请求数</span><br><span class="line">wrqm/s：每秒合并到设备的写请求数</span><br><span class="line">r/s：每秒向磁盘发起的读操作数</span><br><span class="line">w/s：每秒向磁盘发起的写操作数</span><br><span class="line">rkB/s：每秒读多少个K字节</span><br><span class="line">wkB/s: 每秒写多少个K字节</span><br><span class="line">avgrq-sz：平均每次设备I/O操作的数据大小</span><br><span class="line">avgqu-sz：平均I/O队列长度</span><br><span class="line">await：平均每次设备I/O操作的等待时间(ms)，一般，系统I/O响应时间应该低于5ms。若大于10ms就是较大了</span><br><span class="line">r_await：每个读操作平均所需的时间。（包括硬盘设备读操作的时间，在kernel队列中等待的时间）</span><br><span class="line">w_await：每个写操作平均所需的时间。（包括硬盘设备写操作的时间，在kernel队列中等待的时间）</span><br><span class="line">svctm：平均每次设备I/O操作的服务时间 (ms）</span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">util：一秒中有百分之多少的时间用于I/O操作（被IO消耗的CPU百分比），一般地，如果是100%表示设备已经接近满负荷运行</span></span><br></pre></td></tr></table></figure><h2 id="6-主要分析说明"><a href="#6-主要分析说明" class="headerlink" title="6. 主要分析说明"></a>6. 主要分析说明</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">%</span><span class="language-bash">iowait过高的话，则表示硬盘存在I/O瓶颈。</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">idle很高但是系统响应很慢，可能是CPU等待分配内存导致的。应加大内存容量。</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">-%</span><span class="language-bash">idle如果持续低于10，则表明CPU处理能力相对较低，也就是说CPU是系统中的瓶颈了。</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">util差不多到100%，说明产生的I/O请求过多，I/O系统接近满负荷</span></span><br><span class="line"></span><br><span class="line">avgqu-sz：如果I/O请求压力持续超出磁盘处理能力，该值将增加，因为会造成拥塞。</span><br><span class="line"></span><br><span class="line">如果单块磁盘的队列长度持续超过2，一般认为该磁盘存在I/O性能问题。</span><br><span class="line"></span><br><span class="line">对于顺序读写频繁的，需要传输大块数据的任务，需要关注磁盘的吞吐量（ kB_read/s ，kB_wrtn/s）。</span><br><span class="line"></span><br><span class="line">对于磁盘随机读写频繁的任务，需要关注（tps</span><br></pre></td></tr></table></figure><h1 id="vmstat"><a href="#vmstat" class="headerlink" title="vmstat"></a>vmstat</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">获得有关进程、虚存、页面交换空间及CPU活动信息</span><br><span class="line">可以看到整个系统的负载情况，而不是单独看某个进程的负载情况</span><br></pre></td></tr></table></figure><h2 id="vmstat-说明"><a href="#vmstat-说明" class="headerlink" title="vmstat 说明"></a>vmstat 说明</h2><table><thead><tr><th>r</th><th>b</th><th>swpd</th><th>free</th><th>buff</th><th>cache</th><th>si</th><th>so</th><th>bi</th><th>bo</th><th>in</th><th>cs</th><th>us</th><th>sy</th><th>id</th><th>wa</th><th>st</th></tr></thead><tbody><tr><td>运行队列(多少个进程真的分配到CPU)</td><td>阻塞的进程数量</td><td>虚拟机已使用的大小</td><td>空闲的物理内存的大小</td><td>已用buff大小，对块设备的读写进行缓存</td><td>已用的cache大小，文件系统的cache</td><td>每秒从磁盘读入虚拟内存的大小</td><td>每秒虚拟内存写入磁盘的大小</td><td>（读磁盘）系统从块设备那里每秒接收的块数量</td><td>（写磁盘）每秒发送给块设备的块数量</td><td>每秒上下文切换数</td><td>每秒CPU的中断次数，包括时间中断</td><td>用户CPU时间(用户态使用的cpu时间比)</td><td>系统CPU时间(系统态使用的cpu时间比)</td><td>空闲CPU时间(空闲CPU时间占比)</td><td>等待IO的CPU时间(cpu等待磁盘写入完成时间)</td><td>虚拟机偷取时间</td></tr></tbody></table><h2 id="2-主要分析说明"><a href="#2-主要分析说明" class="headerlink" title="2. 主要分析说明"></a>2. 主要分析说明</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id + us + sy = 100,id是空闲CPU使用率，us是用户CPU使用率，sy是系统CPU使用率</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> dool iostat vmstat </tag>
            
            <tag> 系统分析工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python实现mysql主从监控脚本</title>
      <link href="/posts/725244789.html"/>
      <url>/posts/725244789.html</url>
      
        <content type="html"><![CDATA[<h1 id="Python实现mysql主从监控脚本"><a href="#Python实现mysql主从监控脚本" class="headerlink" title="Python实现mysql主从监控脚本"></a>Python实现mysql主从监控脚本</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment">#-*- coding:utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> MySQLdb</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> mail163</span><br><span class="line"></span><br><span class="line">now=time.strftime(<span class="string">&quot;%Y/%m/%d-%H:%M:%S&quot;</span>,time.localtime())</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Mydb</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span> (self,host,user,port,passwd,sock):</span><br><span class="line">        self.host=host</span><br><span class="line">        self.user=user</span><br><span class="line">        self.port=port</span><br><span class="line">        self.passwd=passwd</span><br><span class="line">        self.sock=sock</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            self.db=MySQLdb.connect(host=self.host,user=self.user,port=self.port,passwd=self.passwd,unix_socket=self.sock)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="built_in">print</span> <span class="string">&quot;cann&#x27;t connect to mysql server %s %s &quot;</span>%(self.host,self.port)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.cursor=self.db.cursor()</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_slave</span>(<span class="params">self</span>):</span><br><span class="line">        self.cursor.execute(<span class="string">&#x27; show slave status ;&#x27;</span>)</span><br><span class="line">        slave=self.cursor.fetchall()</span><br><span class="line">        <span class="keyword">return</span> slave</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">check_status</span> (self):</span><br><span class="line">        slave=self.get_slave()</span><br><span class="line">        <span class="keyword">if</span> (slave[<span class="number">0</span>])[<span class="number">10</span>]!=<span class="string">&#x27;Yes&#x27;</span> <span class="keyword">or</span> (slave[<span class="number">0</span>])[<span class="number">11</span>]!=<span class="string">&#x27;Yes&#x27;</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;stop&#x27;</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;running&#x27;</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">close</span>(<span class="params">self</span>):</span><br><span class="line">        self.cursor.close()</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span> ():</span><br><span class="line">    db=Mydb(<span class="string">&#x27;localhost&#x27;</span>,<span class="string">&#x27;root&#x27;</span>,<span class="number">3306</span>,<span class="string">&#x27;JD#mysql87##&#x27;</span>,<span class="string">&#x27;/var/lib/mysql/mysql.sock&#x27;</span>)</span><br><span class="line">    status=db.check_status()</span><br><span class="line">    <span class="built_in">print</span> status</span><br><span class="line">    <span class="keyword">if</span> status==<span class="string">&#x27;stop&#x27;</span>:</span><br><span class="line">        mail163.mail(<span class="string">&#x27;64.88 slave down at %s&#x27;</span>%(now))</span><br><span class="line">    db.close()</span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 脚本 </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mysql slave state </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python同步目录下文件脚本</title>
      <link href="/posts/1052778464.html"/>
      <url>/posts/1052778464.html</url>
      
        <content type="html"><![CDATA[<h1 id="同步目录下文件脚本"><a href="#同步目录下文件脚本" class="headerlink" title="同步目录下文件脚本"></a>同步目录下文件脚本</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#运行：rsync_img.py today | yesterday</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line">s_dirs=[<span class="string">&#x27;/zz_data/www/Krptos-cms-php/public/uploads&#x27;</span>,<span class="string">&#x27;/opt/tomcat/webapps/uploads&#x27;</span>]</span><br><span class="line">t_dir=<span class="string">&#x27;/zz_data/www/img/uploads&#x27;</span></span><br><span class="line"></span><br><span class="line">today=time.strftime(<span class="string">&#x27;/%Y/%m/%d&#x27;</span>,time.localtime(time.time()))</span><br><span class="line">yesterday=time.strftime(<span class="string">&#x27;/%Y/%m/%d&#x27;</span>,time.localtime(time.time() - <span class="number">24</span>*<span class="number">60</span>*<span class="number">60</span>) )</span><br><span class="line">d=&#123;<span class="string">&#x27;today&#x27;</span>:today,<span class="string">&#x27;yesterday&#x27;</span>:yesterday&#125;</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">rsync</span>(<span class="params">s_dir,t_dir,_day</span>):</span><br><span class="line">    sd=<span class="string">&#x27;%s%s&#x27;</span>%(s_dir,_day)</span><br><span class="line">    td=<span class="string">&#x27;%s%s&#x27;</span>%(t_dir,_day)</span><br><span class="line">    now=time.strftime(<span class="string">&quot;%Y-%m-%d %X&quot;</span>,time.localtime())</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(sd) <span class="keyword">or</span> <span class="keyword">not</span> os.listdir(sd):</span><br><span class="line">        sys.exit()</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(td):</span><br><span class="line">        os.makedirs(td)</span><br><span class="line">    _cmd=<span class="string">&#x27;/usr/bin/rsync -avz %s/* %s&#x27;</span>%(sd,td)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        os.system(_cmd)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        out=<span class="built_in">open</span>(<span class="string">&#x27;/zz_data/logs/rsync.err&#x27;</span>,<span class="string">&#x27;a&#x27;</span>)</span><br><span class="line">        out.write(<span class="string">&#x27;rsync failed at %s\n&#x27;</span>%now)</span><br><span class="line">        out.close()</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(sys.argv)&lt;<span class="number">2</span>:</span><br><span class="line">        <span class="built_in">print</span> <span class="string">&#x27;need args today or yesterday\n&#x27;</span></span><br><span class="line">        sys.exit()</span><br><span class="line">    <span class="keyword">if</span> sys.argv[<span class="number">1</span>] <span class="keyword">not</span> <span class="keyword">in</span> [<span class="string">&#x27;today&#x27;</span>,<span class="string">&#x27;yesterday&#x27;</span>]:</span><br><span class="line">        <span class="built_in">print</span> <span class="string">&#x27;args must be today or yesterday\n&#x27;</span></span><br><span class="line">        sys.exit()</span><br><span class="line">    <span class="keyword">for</span> s_dir <span class="keyword">in</span> s_dirs:</span><br><span class="line">        rsync(s_dir,t_dir,d.get(sys.argv[<span class="number">1</span>]))</span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 脚本 </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>快速排查Java的CPU性能问题(top us值过高)</title>
      <link href="/posts/581842835.html"/>
      <url>/posts/581842835.html</url>
      
        <content type="html"><![CDATA[<h1 id="快速排查Java的CPU性能问题-top-us值过高"><a href="#快速排查Java的CPU性能问题-top-us值过高" class="headerlink" title="快速排查Java的CPU性能问题(top us值过高)"></a>快速排查Java的CPU性能问题(top us值过高)</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">用于快速排查Java的CPU性能问题(top us值过高)，自动查出运行的Java进程中消耗CPU多的线程，并打印出其线程栈，从而确定导致性能问题的方法调用。</span><br><span class="line">目前只支持Linux</span><br><span class="line"></span><br><span class="line">脚本摘录于：https://github.com/oldratlee/useful-scripts/blob/master/docs/java.md</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">show-busy-java-threads.sh</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">@Function</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Find out the highest cpu consumed threads of java processes, and <span class="built_in">print</span> the stack of these threads.</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"><span class="comment"># @Usage</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">  $ ./show-busy-java-threads</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"><span class="comment"># @online-doc https://github.com/oldratlee/useful-scripts/blob/master/docs/java.md#-show-busy-java-threads</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">@author Jerry Lee (oldratlee at gmail dot com)</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">@author superhj1987 (superhj1987 at 126 dot com)</span></span><br><span class="line"></span><br><span class="line">readonly PROG=&quot;`basename $0`&quot;</span><br><span class="line">readonly -a COMMAND_LINE=(&quot;$0&quot; &quot;$@&quot;)</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Get current user name via <span class="built_in">whoami</span> <span class="built_in">command</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">  See https://www.lifewire.com/current-linux-user-whoami-command-3867579</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Because <span class="keyword">if</span> run <span class="built_in">command</span> by `sudo -u`, <span class="built_in">env</span> var <span class="variable">$USER</span> is not rewritten/correct, just inherited from outside!</span></span><br><span class="line">readonly USER=&quot;`whoami`&quot;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">###############################################################################</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">util <span class="built_in">functions</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">###############################################################################</span></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">NOTE: $<span class="string">&#x27;foo&#x27;</span> is the escape sequence syntax of bash</span></span><br><span class="line">readonly ec=$&#x27;\033&#x27; # escape char</span><br><span class="line">readonly eend=$&#x27;\033[0m&#x27; # escape end</span><br><span class="line"></span><br><span class="line">colorEcho() &#123;</span><br><span class="line">    local color=$1</span><br><span class="line">    shift</span><br><span class="line"></span><br><span class="line">    # if stdout is console, turn on color output.</span><br><span class="line">    [ -t 1 ] &amp;&amp; echo &quot;$ec[1;$&#123;color&#125;m$@$eend&quot; || echo &quot;$@&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">colorPrint() &#123;</span><br><span class="line">    local color=$1</span><br><span class="line">    shift</span><br><span class="line"></span><br><span class="line">    colorEcho &quot;$color&quot; &quot;$@&quot;</span><br><span class="line">    [ -n &quot;$append_file&quot; -a -w &quot;$append_file&quot; ] &amp;&amp; echo &quot;$@&quot; &gt;&gt; &quot;$append_file&quot;</span><br><span class="line">    [ -n &quot;$store_dir&quot; -a -w &quot;$store_dir&quot; ] &amp;&amp; echo &quot;$@&quot; &gt;&gt; &quot;$&#123;store_file_prefix&#125;$PROG&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">normalPrint() &#123;</span><br><span class="line">    echo &quot;$@&quot;</span><br><span class="line">    [ -n &quot;$append_file&quot; -a -w &quot;$append_file&quot; ] &amp;&amp; echo &quot;$@&quot; &gt;&gt; &quot;$append_file&quot;</span><br><span class="line">    [ -n &quot;$store_dir&quot; -a -w &quot;$store_dir&quot; ] &amp;&amp; echo &quot;$@&quot; &gt;&gt; &quot;$&#123;store_file_prefix&#125;$PROG&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">redPrint() &#123;</span><br><span class="line">    colorPrint 31 &quot;$@&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">greenPrint() &#123;</span><br><span class="line">    colorPrint 32 &quot;$@&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">yellowPrint() &#123;</span><br><span class="line">    colorPrint 33 &quot;$@&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">bluePrint() &#123;</span><br><span class="line">    colorPrint 36 &quot;$@&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">die() &#123;</span><br><span class="line">    redPrint &quot;Error: $@&quot; 1&gt;&amp;2</span><br><span class="line">    exit 1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">logAndRun() &#123;</span><br><span class="line">    echo &quot;$@&quot;</span><br><span class="line">    echo</span><br><span class="line">    &quot;$@&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">logAndCat() &#123;</span><br><span class="line">    echo &quot;$@&quot;</span><br><span class="line">    echo</span><br><span class="line">    cat</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">usage() &#123;</span><br><span class="line">    local -r exit_code=&quot;$1&quot;</span><br><span class="line">    shift</span><br><span class="line">    [ -n &quot;$exit_code&quot; -a &quot;$exit_code&quot; != 0 ] &amp;&amp; local -r out=/dev/stderr || local -r out=/dev/stdout</span><br><span class="line"></span><br><span class="line">    (( $# &gt; 0 )) &amp;&amp; &#123; echo &quot;$@&quot;; echo; &#125; &gt; $out</span><br><span class="line"></span><br><span class="line">    &gt; $out cat &lt;&lt;EOF</span><br><span class="line">Usage: $&#123;PROG&#125; [OPTION]... [delay [count]]</span><br><span class="line">Find out the highest cpu consumed threads of java processes,</span><br><span class="line">and print the stack of these threads.</span><br><span class="line">Example:</span><br><span class="line"><span class="meta prompt_">  $</span><span class="language-bash">&#123;PROG&#125;       <span class="comment"># show busy java threads info</span></span></span><br><span class="line"><span class="meta prompt_">  $</span><span class="language-bash">&#123;PROG&#125; 1     <span class="comment"># update every 1 second, (stop by eg: CTRL+C)</span></span></span><br><span class="line"><span class="meta prompt_">  $</span><span class="language-bash">&#123;PROG&#125; 3 10  <span class="comment"># update every 3 seconds, update 10 times</span></span></span><br><span class="line">Output control:</span><br><span class="line">  -p, --pid &lt;java pid&gt;      find out the highest cpu consumed threads from</span><br><span class="line">                            the specified java process.</span><br><span class="line">                            default from all java process.</span><br><span class="line">  -c, --count &lt;num&gt;         set the thread count to show, default is 5.</span><br><span class="line">  -a, --append-file &lt;file&gt;  specifies the file to append output as log.</span><br><span class="line">  -S, --store-dir &lt;dir&gt;     specifies the directory for storing</span><br><span class="line">                            the intermediate files, and keep files.</span><br><span class="line">                            default store intermediate files at tmp dir,</span><br><span class="line">                            and auto remove after run. use this option to keep</span><br><span class="line">                            files so as to review jstack/top/ps output later.</span><br><span class="line">  delay                     the delay between updates in seconds.</span><br><span class="line">  count                     the number of updates.</span><br><span class="line">                            delay/count arguments imitates the style of</span><br><span class="line">                            vmstat command.</span><br><span class="line">jstack control:</span><br><span class="line">  -s, --jstack-path &lt;path&gt;  specifies the path of jstack command.</span><br><span class="line">  -F, --force               set jstack to force a thread dump. use when jstack</span><br><span class="line">                            does not respond (process is hung).</span><br><span class="line">  -m, --mix-native-frames   set jstack to print both java and native frames</span><br><span class="line">                            (mixed mode).</span><br><span class="line">  -l, --lock-info           set jstack with long listing.</span><br><span class="line">                            prints additional information about locks.</span><br><span class="line">CPU usage calculation control:</span><br><span class="line">  -d, --top-delay           specifies the delay between top samples.</span><br><span class="line">                            default is 0.5 (second). get thread cpu percentage</span><br><span class="line">                            during this delay interval.</span><br><span class="line">                            more info see top -d option. eg: -d 1 (1 second).</span><br><span class="line">  -P, --use-ps              use ps command to find busy thread(cpu usage)</span><br><span class="line">                            instead of top command.</span><br><span class="line">                            default use top command, because cpu usage of</span><br><span class="line">                            ps command is expressed as the percentage of</span><br><span class="line">                            time spent running during the *entire lifetime*</span><br><span class="line">                            of a process, this is not ideal in general.</span><br><span class="line">Miscellaneous:</span><br><span class="line">  -h, --help                display this help and exit.</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">    exit $exit_code</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">###############################################################################</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Check os support</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">###############################################################################</span></span></span><br><span class="line"></span><br><span class="line">uname | grep &#x27;^Linux&#x27; -q || die &quot;$PROG only support Linux, not support `uname` yet!&quot;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">###############################################################################</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">parse options</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">###############################################################################</span></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">NOTE: ARGS can not be declared as <span class="built_in">readonly</span>!!</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">readonly</span> declaration make <span class="built_in">exit</span> code of assignment to be always 0, aka. the <span class="built_in">exit</span> code of `getopt` <span class="keyword">in</span> subshell is discarded.</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">  tested on bash 4.2.46</span></span><br><span class="line">ARGS=`getopt -n &quot;$PROG&quot; -a -o p:c:a:s:S:Pd:Fmlh -l count:,pid:,append-file:,jstack-path:,store-dir:,use-ps,top-delay:,force,mix-native-frames,lock-info,help -- &quot;$@&quot;`</span><br><span class="line">[ $? -ne 0 ] &amp;&amp; &#123; echo; usage 1; &#125;</span><br><span class="line">eval set -- &quot;$&#123;ARGS&#125;&quot;</span><br><span class="line"></span><br><span class="line">while true; do</span><br><span class="line">    case &quot;$1&quot; in</span><br><span class="line">    -c|--count)</span><br><span class="line">        count=&quot;$2&quot;</span><br><span class="line">        shift 2</span><br><span class="line">        ;;</span><br><span class="line">    -p|--pid)</span><br><span class="line">        pid=&quot;$2&quot;</span><br><span class="line">        shift 2</span><br><span class="line">        ;;</span><br><span class="line">    -a|--append-file)</span><br><span class="line">        append_file=&quot;$2&quot;</span><br><span class="line">        shift 2</span><br><span class="line">        ;;</span><br><span class="line">    -s|--jstack-path)</span><br><span class="line">        jstack_path=&quot;$2&quot;</span><br><span class="line">        shift 2</span><br><span class="line">        ;;</span><br><span class="line">    -S|--store-dir)</span><br><span class="line">        store_dir=&quot;$2&quot;</span><br><span class="line">        shift 2</span><br><span class="line">        ;;</span><br><span class="line">    -P|--use-ps)</span><br><span class="line">        use_ps=true</span><br><span class="line">        shift</span><br><span class="line">        ;;</span><br><span class="line">    -d|--top-delay)</span><br><span class="line">        top_delay=&quot;$2&quot;</span><br><span class="line">        shift 2</span><br><span class="line">        ;;</span><br><span class="line">    -F|--force)</span><br><span class="line">        force=-F</span><br><span class="line">        shift</span><br><span class="line">        ;;</span><br><span class="line">    -m|--mix-native-frames)</span><br><span class="line">        mix_native_frames=-m</span><br><span class="line">        shift</span><br><span class="line">        ;;</span><br><span class="line">    -l|--lock-info)</span><br><span class="line">        more_lock_info=-l</span><br><span class="line">        shift</span><br><span class="line">        ;;</span><br><span class="line">    -h|--help)</span><br><span class="line">        usage</span><br><span class="line">        ;;</span><br><span class="line">    --)</span><br><span class="line">        shift</span><br><span class="line">        break</span><br><span class="line">        ;;</span><br><span class="line">    esac</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">count=$&#123;count:-5&#125;</span><br><span class="line"></span><br><span class="line">update_delay=$&#123;1:-0&#125;</span><br><span class="line">[ -z &quot;$1&quot; ] &amp;&amp; update_count=1 || update_count=$&#123;2:-0&#125;</span><br><span class="line">(( update_count &lt; 0 )) &amp;&amp; update_count=0</span><br><span class="line"></span><br><span class="line">top_delay=$&#123;top_delay:-0.5&#125;</span><br><span class="line">use_ps=$&#123;use_ps:-false&#125;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">check the directory of append-file(-a) mode, create <span class="keyword">if</span> not exsit.</span></span><br><span class="line">if [ -n &quot;$append_file&quot; ]; then</span><br><span class="line">    if [ -e &quot;$append_file&quot; ]; then</span><br><span class="line">        [ -f &quot;$append_file&quot; ] || die &quot;$append_file(specified by option -a, for storing run output files) exists but is not a file!&quot;</span><br><span class="line">        [ -w &quot;$append_file&quot; ] || die &quot;file $append_file(specified by option -a, for storing run output files) exists but is not writable!&quot;</span><br><span class="line">    else</span><br><span class="line">        append_file_dir=&quot;$(dirname &quot;$append_file&quot;)&quot;</span><br><span class="line">        if [ -e &quot;$append_file_dir&quot; ]; then</span><br><span class="line">            [ -d &quot;$append_file_dir&quot; ] || die &quot;directory $append_file_dir(specified by option -a, for storing run output files) exists but is not a directory!&quot;</span><br><span class="line">            [ -w &quot;$append_file_dir&quot; ] || die &quot;directory $append_file_dir(specified by option -a, for storing run output files) exists but is not writable!&quot;</span><br><span class="line">        else</span><br><span class="line">            mkdir -p &quot;$append_file_dir&quot; || die &quot;fail to create directory $append_file_dir(specified by option -a, for storing run output files)!&quot;</span><br><span class="line">        fi</span><br><span class="line">    fi</span><br><span class="line">fi</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">check store directory(-S) mode, create directory <span class="keyword">if</span> not exsit.</span></span><br><span class="line">if [ -n &quot;$store_dir&quot; ]; then</span><br><span class="line">    if [ -e &quot;$store_dir&quot; ]; then</span><br><span class="line">        [ -d &quot;$store_dir&quot; ] || die &quot;$store_dir(specified by option -S, for storing output files) exists but is not a directory!&quot;</span><br><span class="line">        [ -w &quot;$store_dir&quot; ] || die &quot;directory $store_dir(specified by option -S, for storing output files) exists but is not writable!&quot;</span><br><span class="line">    else</span><br><span class="line">        mkdir -p &quot;$store_dir&quot; || die &quot;fail to create directory $store_dir(specified by option -S, for storing output files)!&quot;</span><br><span class="line">    fi</span><br><span class="line">fi</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">###############################################################################</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">check the existence of jstack <span class="built_in">command</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">###############################################################################</span></span></span><br><span class="line"></span><br><span class="line">if [ -n &quot;$jstack_path&quot; ]; then</span><br><span class="line">    [ -f &quot;$jstack_path&quot; ] || die &quot;$jstack_path is NOT found!&quot;</span><br><span class="line">    [ -x &quot;$jstack_path&quot; ] || die &quot;$jstack_path is NOT executalbe!&quot;</span><br><span class="line">elif which jstack &amp;&gt; /dev/null; then</span><br><span class="line">    jstack_path=&quot;`which jstack`&quot;</span><br><span class="line">else</span><br><span class="line">    [ -n &quot;$JAVA_HOME&quot; ] || die &quot;jstack not found on PATH and No JAVA_HOME setting! Use -s option set jstack path manually.&quot;</span><br><span class="line">    [ -f &quot;$JAVA_HOME/bin/jstack&quot; ] || die &quot;jstack not found on PATH and \$JAVA_HOME/bin/jstack($JAVA_HOME/bin/jstack) file does NOT exists! Use -s option set jstack path manually.&quot;</span><br><span class="line">    [ -x &quot;$JAVA_HOME/bin/jstack&quot; ] || die &quot;jstack not found on PATH and \$JAVA_HOME/bin/jstack($JAVA_HOME/bin/jstack) is NOT executalbe! Use -s option set jstack path manually.&quot;</span><br><span class="line">    jstack_path=&quot;$JAVA_HOME/bin/jstack&quot;</span><br><span class="line">fi</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">###############################################################################</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">biz logic</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">###############################################################################</span></span></span><br><span class="line"></span><br><span class="line">readonly run_timestamp=&quot;`date &quot;+%Y-%m-%d_%H:%M:%S.%N&quot;`&quot;</span><br><span class="line">readonly uuid=&quot;$&#123;PROG&#125;_$&#123;run_timestamp&#125;_$&#123;RANDOM&#125;_$$&quot;</span><br><span class="line"></span><br><span class="line">readonly tmp_store_dir=&quot;/tmp/$&#123;uuid&#125;&quot;</span><br><span class="line">if [ -n &quot;$store_dir&quot; ]; then</span><br><span class="line">    readonly store_file_prefix=&quot;$store_dir/$&#123;run_timestamp&#125;_&quot;</span><br><span class="line">else</span><br><span class="line">    readonly store_file_prefix=&quot;$tmp_store_dir/$&#123;run_timestamp&#125;_&quot;</span><br><span class="line">fi</span><br><span class="line">mkdir -p &quot;$tmp_store_dir&quot;</span><br><span class="line"></span><br><span class="line">cleanupWhenExit() &#123;</span><br><span class="line">    rm -rf &quot;$tmp_store_dir&quot; &amp;&gt; /dev/null</span><br><span class="line">&#125;</span><br><span class="line">trap &quot;cleanupWhenExit&quot; EXIT</span><br><span class="line"></span><br><span class="line">headInfo() &#123;</span><br><span class="line">    colorEcho &quot;0;34;42&quot; ================================================================================</span><br><span class="line">    echo &quot;$(date &quot;+%Y-%m-%d %H:%M:%S.%N&quot;) [$(( i + 1 ))/$update_count]: $&#123;COMMAND_LINE[@]&#125;&quot;</span><br><span class="line">    colorEcho &quot;0;34;42&quot; ================================================================================</span><br><span class="line">    echo</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if [ -n &quot;$&#123;pid&#125;&quot; ]; then</span><br><span class="line">    readonly ps_process_select_options=&quot;-p $pid&quot;</span><br><span class="line">else</span><br><span class="line">    readonly ps_process_select_options=&quot;-C java -C jsvc&quot;</span><br><span class="line">fi</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">output field: pid, thread <span class="built_in">id</span>(lwp), pcpu, user</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">  order by pcpu(percentage of cpu usage)</span></span><br><span class="line">findBusyJavaThreadsByPs() &#123;</span><br><span class="line">    # 1. sort by %cpu by ps option `--sort -pcpu`</span><br><span class="line">    # 2. use wide output(unlimited width) by ps option `-ww`</span><br><span class="line">    #    avoid trunk user column to username_fo+ or $uid alike</span><br><span class="line">    local -a ps_cmd_line=(ps $ps_process_select_options -wwLo pid,lwp,pcpu,user --sort -pcpu --no-headers)</span><br><span class="line">    local -r ps_out=&quot;$(&quot;$&#123;ps_cmd_line[@]&#125;&quot;)&quot;</span><br><span class="line">    if [ -n &quot;$store_dir&quot; ]; then</span><br><span class="line">        echo &quot;$ps_out&quot; | logAndCat &quot;$&#123;ps_cmd_line[@]&#125;&quot; &gt; &quot;$&#123;store_file_prefix&#125;$(( i + 1 ))_ps&quot;</span><br><span class="line">    fi</span><br><span class="line"></span><br><span class="line">    echo &quot;$ps_out&quot; | head -n &quot;$&#123;count&#125;&quot;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">top with output field: thread <span class="built_in">id</span>, %cpu</span></span><br><span class="line">__top_threadId_cpu() &#123;</span><br><span class="line">    # 1. sort by %cpu by top option `-o %CPU`</span><br><span class="line">    #    unfortunately, top version 3.2 does not support -o option(supports from top version 3.3+),</span><br><span class="line">    #    use</span><br><span class="line">    #       HOME=&quot;$tmp_store_dir&quot; top -H -b -n 1</span><br><span class="line">    #    combined</span><br><span class="line">    #       sort</span><br><span class="line">    #    instead of</span><br><span class="line">    #       HOME=&quot;$tmp_store_dir&quot; top -H -b -n 1 -o &#x27;%CPU&#x27;</span><br><span class="line">    # 2. change HOME env var when run top,</span><br><span class="line">    #    so as to prevent top command output format being change by .toprc user config file unexpectedly</span><br><span class="line">    # 3. use option `-d 0.5`(update interval 0.5 second) and `-n 2`(update 2 times),</span><br><span class="line">    #    and use second time update data to get cpu percentage of thread in 0.5 second interval</span><br><span class="line">    # 4. top v3.3, there is 1 black line between 2 update;</span><br><span class="line">    #    but top v3.2, there is 2 blank lines between 2 update!</span><br><span class="line">    local -a top_cmd_line=(top -H -b -d $top_delay -n 2)</span><br><span class="line">    local -r top_out=$(HOME=&quot;$tmp_store_dir&quot; &quot;$&#123;top_cmd_line[@]&#125;&quot;)</span><br><span class="line">    if [ -n &quot;$store_dir&quot; ]; then</span><br><span class="line">        echo &quot;$top_out&quot; | logAndCat &quot;$&#123;top_cmd_line[@]&#125;&quot; &gt; &quot;$&#123;store_file_prefix&#125;$(( i + 1 ))_top&quot;</span><br><span class="line">    fi</span><br><span class="line"></span><br><span class="line">    echo &quot;$top_out&quot; |</span><br><span class="line">        awk &#x27;BEGIN &#123; blockIndex = 0; currentLineHasText = 0; prevLineHasText = 0; &#125; &#123;</span><br><span class="line">            currentLineHasText = ($0 != &quot;&quot;)</span><br><span class="line">            if (prevLineHasText &amp;&amp; !currentLineHasText)</span><br><span class="line">                blockIndex++    # from text line to empty line, increase block index</span><br><span class="line">            if (blockIndex == 3 &amp;&amp; ($NF == &quot;java&quot; || $NF == &quot;jsvc&quot;))   # $NF(last field) is command field</span><br><span class="line">                # only print 4th text block(blockIndex == 3), aka. process info of second top update</span><br><span class="line">                print $1 &quot; &quot; $9     # $1 is thread id field, $9 is %cpu field</span><br><span class="line">            prevLineHasText = currentLineHasText    # update prevLineHasText</span><br><span class="line">        &#125;&#x27; | sort -k2,2nr</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">__complete_pid_user_by_ps() &#123;</span><br><span class="line">    # ps output field: pid, thread id(lwp), user</span><br><span class="line">    local -a ps_cmd_line=(ps $ps_process_select_options -wwLo pid,lwp,user --no-headers)</span><br><span class="line">    local -r ps_out=&quot;$(&quot;$&#123;ps_cmd_line[@]&#125;&quot;)&quot;</span><br><span class="line">    if [ -n &quot;$store_dir&quot; ]; then</span><br><span class="line">        echo &quot;$ps_out&quot; | logAndCat &quot;$&#123;ps_cmd_line[@]&#125;&quot; &gt; &quot;$&#123;store_file_prefix&#125;$(( i + 1 ))_ps&quot;</span><br><span class="line">    fi</span><br><span class="line"></span><br><span class="line">    local idx=0</span><br><span class="line">    local -a line</span><br><span class="line">    while IFS=&quot; &quot; read -a line ; do</span><br><span class="line">        (( idx &lt; count )) || break</span><br><span class="line"></span><br><span class="line">        local threadId=&quot;$&#123;line[0]&#125;&quot;</span><br><span class="line">        local pcpu=&quot;$&#123;line[1]&#125;&quot;</span><br><span class="line"></span><br><span class="line">        # output field: pid, threadId, pcpu, user</span><br><span class="line">        local output_fields=&quot;$( echo &quot;$ps_out&quot; |</span><br><span class="line">            awk -v &quot;threadId=$threadId&quot; -v &quot;pcpu=$pcpu&quot; &#x27;$2==threadId &#123;</span><br><span class="line">                printf &quot;%s %s %s %s\n&quot;, $1, threadId, pcpu, $3; exit</span><br><span class="line">            &#125;&#x27; )&quot;</span><br><span class="line">        if [ -n &quot;$output_fields&quot; ]; then</span><br><span class="line">            (( idx++ ))</span><br><span class="line">            echo &quot;$output_fields&quot;</span><br><span class="line">        fi</span><br><span class="line">    done</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">output format is same as <span class="keyword">function</span> findBusyJavaThreadsByPs</span></span><br><span class="line">findBusyJavaThreadsByTop() &#123;</span><br><span class="line">    __top_threadId_cpu | __complete_pid_user_by_ps</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">printStackOfThreads() &#123;</span><br><span class="line">    local -a line</span><br><span class="line">    local idx=0</span><br><span class="line">    while IFS=&quot; &quot; read -a line ; do</span><br><span class="line">        local pid=&quot;$&#123;line[0]&#125;&quot;</span><br><span class="line">        local threadId=&quot;$&#123;line[1]&#125;&quot;</span><br><span class="line">        local threadId0x=&quot;0x`printf %x $&#123;threadId&#125;`&quot;</span><br><span class="line">        local pcpu=&quot;$&#123;line[2]&#125;&quot;</span><br><span class="line">        local user=&quot;$&#123;line[3]&#125;&quot;</span><br><span class="line"></span><br><span class="line">        (( idx++ ))</span><br><span class="line">        local jstackFile=&quot;$&#123;store_file_prefix&#125;$(( i + 1 ))_jstack_$&#123;pid&#125;&quot;</span><br><span class="line">        [ -f &quot;$&#123;jstackFile&#125;&quot; ] || &#123;</span><br><span class="line">            local -a jstack_cmd_line=( &quot;$jstack_path&quot; $&#123;force&#125; $mix_native_frames $more_lock_info $&#123;pid&#125; )</span><br><span class="line">            if [ &quot;$&#123;user&#125;&quot; == &quot;$&#123;USER&#125;&quot; ]; then</span><br><span class="line">                # run without sudo, when java process user is current user</span><br><span class="line">                logAndRun &quot;$&#123;jstack_cmd_line[@]&#125;&quot; &gt; $&#123;jstackFile&#125;</span><br><span class="line">            elif [ $UID == 0 ]; then</span><br><span class="line">                # if java process user is not current user, must run jstack with sudo</span><br><span class="line">                logAndRun sudo -u &quot;$&#123;user&#125;&quot; &quot;$&#123;jstack_cmd_line[@]&#125;&quot; &gt; $&#123;jstackFile&#125;</span><br><span class="line">            else</span><br><span class="line">                # current user is not root user, so can not run with sudo; print error message and rerun suggestion</span><br><span class="line">                redPrint &quot;[$idx] Fail to jstack busy($&#123;pcpu&#125;%) thread($&#123;threadId&#125;/$&#123;threadId0x&#125;) stack of java process($&#123;pid&#125;) under user($&#123;user&#125;).&quot;</span><br><span class="line">                redPrint &quot;User of java process($user) is not current user($USER), need sudo to rerun:&quot;</span><br><span class="line">                yellowPrint &quot;    sudo $&#123;COMMAND_LINE[@]&#125;&quot;</span><br><span class="line">                normalPrint</span><br><span class="line">                continue</span><br><span class="line">            fi || &#123;</span><br><span class="line">                redPrint &quot;[$idx] Fail to jstack busy($&#123;pcpu&#125;%) thread($&#123;threadId&#125;/$&#123;threadId0x&#125;) stack of java process($&#123;pid&#125;) under user($&#123;user&#125;).&quot;</span><br><span class="line">                normalPrint</span><br><span class="line">                rm &quot;$&#123;jstackFile&#125;&quot; &amp;&gt; /dev/null</span><br><span class="line">                continue</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        bluePrint &quot;[$idx] Busy($&#123;pcpu&#125;%) thread($&#123;threadId&#125;/$&#123;threadId0x&#125;) stack of java process($&#123;pid&#125;) under user($&#123;user&#125;):&quot;</span><br><span class="line"></span><br><span class="line">        if [ -n &quot;$mix_native_frames&quot; ]; then</span><br><span class="line">            local sed_script=&quot;/--------------- $threadId ---------------/,/^---------------/ &#123;</span><br><span class="line">                /--------------- $threadId ---------------/b # skip first separator line</span><br><span class="line">                /^---------------/d # delete second separator line</span><br><span class="line">                p</span><br><span class="line">            &#125;&quot;</span><br><span class="line">        elif [ -n &quot;$force&quot; ]; then</span><br><span class="line">            local sed_script=&quot;/^Thread $&#123;threadId&#125;:/,/^$/ &#123;</span><br><span class="line">                /^$/d; p # delete end separator line</span><br><span class="line">            &#125;&quot;</span><br><span class="line">        else</span><br><span class="line">            local sed_script=&quot;/ nid=$&#123;threadId0x&#125; /,/^$/ &#123;</span><br><span class="line">                /^$/d; p # delete end separator line</span><br><span class="line">            &#125;&quot;</span><br><span class="line">        fi</span><br><span class="line">        &#123;</span><br><span class="line">            sed &quot;$sed_script&quot; -n $&#123;jstackFile&#125;</span><br><span class="line">            echo</span><br><span class="line">        &#125; | tee $&#123;append_file:+-a &quot;$append_file&quot;&#125; $&#123;store_dir:+-a &quot;$&#123;store_file_prefix&#125;$PROG&quot;&#125;</span><br><span class="line">    done</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">###############################################################################</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Main</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">###############################################################################</span></span></span><br><span class="line"></span><br><span class="line">main() &#123;</span><br><span class="line">    local i</span><br><span class="line">    # if update_count &lt;= 0, infinite loop till user interrupted (eg: CTRL+C)</span><br><span class="line">    for (( i = 0; update_count &lt;= 0 || i &lt; update_count; ++i )); do</span><br><span class="line">        (( i &gt; 0 )) &amp;&amp; sleep &quot;$update_delay&quot;</span><br><span class="line"></span><br><span class="line">        [ -n &quot;$append_file&quot; -o -n &quot;$store_dir&quot; ] &amp;&amp; headInfo | tee $&#123;append_file:+-a &quot;$append_file&quot;&#125; $&#123;store_dir:+-a &quot;$&#123;store_file_prefix&#125;$PROG&quot;&#125; &gt; /dev/null</span><br><span class="line">        (( update_count != 1 )) &amp;&amp; headInfo</span><br><span class="line"></span><br><span class="line">        if $use_ps; then</span><br><span class="line">            findBusyJavaThreadsByPs</span><br><span class="line">        else</span><br><span class="line">            findBusyJavaThreadsByTop</span><br><span class="line">        fi | printStackOfThreads</span><br><span class="line">    done</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">main</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 脚本 </category>
          
          <category> Shell </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaTools </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql备份脚本二</title>
      <link href="/posts/906066073.html"/>
      <url>/posts/906066073.html</url>
      
        <content type="html"><![CDATA[<h1 id="1-mysqldump备份方式"><a href="#1-mysqldump备份方式" class="headerlink" title="1.mysqldump备份方式"></a>1.mysqldump备份方式</h1><h2 id="1-1-脚本全备到一个sql文件"><a href="#1-1-脚本全备到一个sql文件" class="headerlink" title="1.1 脚本全备到一个sql文件"></a>1.1 脚本全备到一个sql文件</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">mysql_k8s-prod_bak-all-databases.sh</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">#### by jwgod 2023</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">#### mysql_k8s-test  mysql全库/单库备份</span></span></span><br><span class="line"></span><br><span class="line">day=`date +&#x27;%Y-%m-%d&#x27;`</span><br><span class="line">anynowtime=&quot;date +&#x27;%Y-%m-%d %H:%M:%S&#x27;&quot;</span><br><span class="line">NOW=&quot;echo [\`$anynowtime\`][PID:$$]&quot;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">#### 可在脚本开始运行时调用，打印当时的时间戳及PID。</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="keyword">function</span> job_start</span></span><br><span class="line">job_start()</span><br><span class="line">&#123;</span><br><span class="line">   echo &quot;`eval $NOW` job_start&quot;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">#### 可在脚本执行成功的逻辑处调用，打印当时的时间戳及PID。</span></span></span><br><span class="line">job_success()</span><br><span class="line">&#123;</span><br><span class="line">    MSG=&quot;$*&quot;</span><br><span class="line">    echo &quot;`eval $NOW` job_success:[$MSG]&quot;</span><br><span class="line">    exit 0</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">#### 可在脚本执行失败的逻辑分支处调用，打印当时的时间戳及PID。</span></span></span><br><span class="line">job_fail()</span><br><span class="line">&#123;</span><br><span class="line">    MSG=&quot;$*&quot;</span><br><span class="line">    echo &quot;`eval $NOW` job_fail:[$MSG]&quot;</span><br><span class="line">    exit 1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">job_start</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">#### 可在此处开始编写您的脚本逻辑代码</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">设置mysql的登录用户名和密码(根据实际情况填写)</span></span><br><span class="line">mysql_user=&quot;root&quot;</span><br><span class="line">mysql_password=&quot;xxxx&quot;</span><br><span class="line">mysql_host=&quot;192.168.1.xx&quot;</span><br><span class="line">mysql_port=&quot;3306&quot;</span><br><span class="line">mysql_charset=&quot;utf8mb4&quot;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">备份文件存放地址(根据实际情况填写)</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">backup_location=/home/sql_bak/`<span class="built_in">date</span> +%Y%m%d%H`</span></span><br><span class="line">backup_location=/nfs_mysql_back/mysql_back/`date +%Y%m%d%H`</span><br><span class="line"></span><br><span class="line">test -d &quot;$backup_location&quot; || mkdir -p $backup_location</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">是否删除过期数据</span></span><br><span class="line">expire_backup_delete=&quot;ON&quot;</span><br><span class="line">expire_days=30</span><br><span class="line">backup_time=`date +%Y%m%d%H%M`</span><br><span class="line">backup_dir=$backup_location</span><br><span class="line">welcome_msg=&quot;Welcome to use MySQL backup tools!&quot;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">判断mysql实例是否正常运行</span></span><br><span class="line">mysql_ps=`ps -ef |grep mysql |wc -l`</span><br><span class="line">mysql_listen=`netstat -an |grep LISTEN |grep $mysql_port|wc -l`</span><br><span class="line">if [ [$mysql_ps == 0] -o [$mysql_listen == 0] ]; then</span><br><span class="line">        echo &quot;ERROR:MySQL is not running! backup stop!&quot;</span><br><span class="line">        exit</span><br><span class="line">else</span><br><span class="line">        echo $welcome_msg</span><br><span class="line">fi</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">#### 删除30天之前备份</span></span></span><br><span class="line">del_bak()</span><br><span class="line">&#123;</span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash">删除过期数据</span></span><br><span class="line">  if [ &quot;$expire_backup_delete&quot; == &quot;ON&quot; -a  &quot;$backup_location&quot; != &quot;&quot; ];then</span><br><span class="line">    `find $backup_location -type f -mtime +$expire_days | xargs rm -rf`</span><br><span class="line">    if [ $? -eq 0 ] ; then</span><br><span class="line">      echo &quot;Expired backup data delete complete!&quot;</span><br><span class="line">      job_success &quot;$*&quot;</span><br><span class="line">    else</span><br><span class="line">      job_fail &quot;$*&quot;</span><br><span class="line">    fi  </span><br><span class="line">  fi</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">#### 全库备份</span></span></span><br><span class="line">all_bak()</span><br><span class="line">&#123;</span><br><span class="line">  mysqldump -h$mysql_host -P$mysql_port -u$mysql_user -p$mysql_password  --all-databases --single-transaction --quick --master-data &gt; $backup_dir/mysql_all-databases_backup-$backup_time.sql</span><br><span class="line">  flag=`echo $?`</span><br><span class="line">  if [ $flag == &quot;0&quot; ];then</span><br><span class="line">    # tar -zcPpf $backup_dir/mysql_$1_backup-$backup_time.zip --warning=no-file-changed --directory /   $backup_dir</span><br><span class="line">    zip -jr $backup_dir/mysql_$1_backup-$backup_time.zip $backup_dir/ --exclude &quot;*.zip&quot;</span><br><span class="line">    #打包成功后删除sql文件</span><br><span class="line">    if [ $? = 0 ]; then</span><br><span class="line">      echo &quot;rm -rf $backup_dir/mysql_all-databases_backup-$backup_time.sql&quot;</span><br><span class="line">      rm -rf $backup_dir/mysql_all-databases_backup-$backup_time.sql</span><br><span class="line">    fi</span><br><span class="line">    echo &quot;database mysql_backup success backup to $backup_dir/mysql_all-databases-backup-$backup_time.sql&quot;</span><br><span class="line">    job_success &quot;$*&quot;</span><br><span class="line">  else</span><br><span class="line">    echo &quot;database mysql_backup backup fail!&quot;</span><br><span class="line">    job_fail &quot;$*&quot;</span><br><span class="line">  fi</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">#### 单库备份</span></span></span><br><span class="line">one_bak()</span><br><span class="line">&#123;</span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash">备份指定数据库中数据(此处假设数据库是<span class="built_in">test</span>)</span></span><br><span class="line">  mysqldump -h$mysql_host -P$mysql_port -u$mysql_user -p$mysql_password $1 --master-data &gt; $backup_dir/mysql_$1_backup-$backup_time.sql</span><br><span class="line">  flag=`echo $?`</span><br><span class="line">  if [ $flag == &quot;0&quot; ];then</span><br><span class="line">    zip -jr $backup_dir/mysql_$1_backup-$backup_time.zip $backup_dir/ --exclude &quot;*.zip&quot;</span><br><span class="line">    #打包成功后删除sql文件</span><br><span class="line">    if [ $? = 0 ]; then</span><br><span class="line">      echo &quot;rm -rf $backup_dir/mysql_$1_backup-$backup_time.sql&quot;</span><br><span class="line">      rm -rf $backup_dir/mysql_$1_backup-$backup_time.sql</span><br><span class="line">    fi</span><br><span class="line">    echo &quot;database mysql_backup success backup to $backup_dir/mysql_backup-$backup_time.sql&quot;</span><br><span class="line">    job_success &quot;$*&quot;</span><br><span class="line">  else</span><br><span class="line">    echo &quot;database mysql_backup backup fail!&quot;</span><br><span class="line">    job_fail &quot;$*&quot;</span><br><span class="line">  fi</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">job_shell()</span><br><span class="line">&#123;</span><br><span class="line">case &quot;$1&quot; in</span><br><span class="line">  0)</span><br><span class="line">    del_bak</span><br><span class="line">    ;;</span><br><span class="line">  1)</span><br><span class="line">    all_bak</span><br><span class="line">    ;;   </span><br><span class="line">  test)</span><br><span class="line">    one_bak $1</span><br><span class="line">    ;; </span><br><span class="line">  nacos_test)</span><br><span class="line">    one_bak $1</span><br><span class="line">    ;; </span><br><span class="line">  xxl_job_test)</span><br><span class="line">    one_bak $1</span><br><span class="line">    ;; </span><br><span class="line">  *)</span><br><span class="line">    echo &quot;Usage: $0 &#123;0[删除30天之前备份]|1[全备]|单库名[ test | nacos_test | xxl_job_test]&#125;&quot;</span><br><span class="line">    exit 1</span><br><span class="line"></span><br><span class="line">esac</span><br><span class="line">exit 0    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">all_bak</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">one_bak</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">#### 作业平台中执行脚本成功和失败的标准只取决于脚本最后一条执行语句的返回值</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">#### 如果返回值为0，则认为此脚本执行成功，如果非0，则认为脚本执行失败</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="built_in">read</span> -r -p <span class="string">&quot;请选择全库/单库备份：｛0[删除30天之前备份]|1[全备]|单库名[ test | nacos_test | xxl_job_test]｝&quot;</span> bak_sh</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">job_shell <span class="string">&quot;<span class="variable">$bak_sh</span>&quot;</span></span></span><br></pre></td></tr></table></figure><h2 id="1-2-脚本全备到每个库一个sql文件（定时任务）"><a href="#1-2-脚本全备到每个库一个sql文件（定时任务）" class="headerlink" title="1.2 脚本全备到每个库一个sql文件（定时任务）"></a>1.2 脚本全备到每个库一个sql文件（定时任务）</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">mysql_k8s-prod_bak-all.sh</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">#### by jwgod 2023</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">#### mysql_k8s-test  mysql全库/单库备份</span></span></span><br><span class="line"></span><br><span class="line">day=`date +&#x27;%Y-%m-%d&#x27;`</span><br><span class="line">anynowtime=&quot;date +&#x27;%Y-%m-%d %H:%M:%S&#x27;&quot;</span><br><span class="line">NOW=&quot;echo [\`$anynowtime\`][PID:$$]&quot;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">#### 可在脚本开始运行时调用，打印当时的时间戳及PID。</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="keyword">function</span> job_start</span></span><br><span class="line">job_start()</span><br><span class="line">&#123;</span><br><span class="line">   echo &quot;`eval $NOW` job_start&quot;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">#### 可在脚本执行成功的逻辑处调用，打印当时的时间戳及PID。</span></span></span><br><span class="line">job_success()</span><br><span class="line">&#123;</span><br><span class="line">    MSG=&quot;$*&quot;</span><br><span class="line">    echo &quot;`eval $NOW` job_success:[$MSG]&quot;</span><br><span class="line">    exit 0</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">#### 可在脚本执行失败的逻辑分支处调用，打印当时的时间戳及PID。</span></span></span><br><span class="line">job_fail()</span><br><span class="line">&#123;</span><br><span class="line">    MSG=&quot;$*&quot;</span><br><span class="line">    echo &quot;`eval $NOW` job_fail:[$MSG]&quot;</span><br><span class="line">    exit 1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">job_start</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">#### 可在此处开始编写您的脚本逻辑代码</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">设置mysql的登录用户名和密码(根据实际情况填写)</span></span><br><span class="line">mysql_user=&quot;root&quot;</span><br><span class="line">mysql_password=&quot;xxxxxx&quot;</span><br><span class="line">mysql_host=&quot;192.168.1.xx&quot;</span><br><span class="line">mysql_port=&quot;3306&quot;</span><br><span class="line">mysql_charset=&quot;utf8mb4&quot;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">备份文件存放地址(根据实际情况填写)</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">backup_location=/home/sql_bak/`<span class="built_in">date</span> +%Y%m%d%H`</span></span><br><span class="line">backup_location=/nfs_mysql_back/mysql_back/`date +%Y%m%d%H`</span><br><span class="line"></span><br><span class="line">test -d &quot;$backup_location&quot; || mkdir -p $backup_location</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">是否删除过期数据</span></span><br><span class="line">expire_backup_delete=&quot;ON&quot;</span><br><span class="line">expire_days=30</span><br><span class="line">backup_time=`date +%Y%m%d%H%M`</span><br><span class="line">backup_dir=$backup_location</span><br><span class="line">welcome_msg=&quot;Welcome to use MySQL backup tools!&quot;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">判断mysql实例是否正常运行</span></span><br><span class="line">mysql_ps=`ps -ef |grep mysql |wc -l`</span><br><span class="line">mysql_listen=`netstat -an |grep LISTEN |grep $mysql_port|wc -l`</span><br><span class="line">if [ [$mysql_ps == 0] -o [$mysql_listen == 0] ]; then</span><br><span class="line">        echo &quot;ERROR:MySQL is not running! backup stop!&quot;</span><br><span class="line">        exit</span><br><span class="line">else</span><br><span class="line">        echo $welcome_msg</span><br><span class="line">fi</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">#### 删除30天之前备份</span></span></span><br><span class="line">del_bak()</span><br><span class="line">&#123;</span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash">删除过期数据</span></span><br><span class="line">  if [ &quot;$expire_backup_delete&quot; == &quot;ON&quot; -a  &quot;$backup_location&quot; != &quot;&quot; ];then</span><br><span class="line">    `find $backup_location -type f -mtime +$expire_days | xargs rm -rf`</span><br><span class="line">    if [ $? -eq 0 ] ; then</span><br><span class="line">      echo &quot;Expired backup data delete complete!&quot;</span><br><span class="line">      job_success &quot;$*&quot;</span><br><span class="line">    else</span><br><span class="line">      job_fail &quot;$*&quot;</span><br><span class="line">    fi  </span><br><span class="line">  fi</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">#### 全库备份</span></span></span><br><span class="line">all_bak()</span><br><span class="line">&#123;</span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash">备份的数据库数组</span></span><br><span class="line">  db_arr=$(echo &quot;show databases;&quot; | mysql -h$mysql_host -P$mysql_port -u$mysql_user -p$mysql_password |grep -v &quot;sys&quot;|grep -v &quot;Database&quot;|grep -v &quot;information_schema&quot; |grep -v &quot;performance_schema&quot;)</span><br><span class="line">  echo &quot;show databases： $db_arr&quot;</span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash">不需要备份的单例数据库</span></span><br><span class="line">  nodeldb=&quot;test&quot;</span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash">循环备份</span></span><br><span class="line">  for dbname in $&#123;db_arr&#125;</span><br><span class="line">  do</span><br><span class="line">   if [ $dbname != $nodeldb ]; then</span><br><span class="line">     echo &quot;mysqldump -h$mysql_host -P$mysql_port -u$mysql_user -p$mysql_password $dbname --master-data &gt; $backup_dir/mysql_$&#123;dbname&#125;_backup-$backup_time.sql&quot;</span><br><span class="line">     mysqldump -h$mysql_host -P$mysql_port -u$mysql_user -p$mysql_password $dbname --master-data &gt; $backup_dir/mysql_$&#123;dbname&#125;_backup-$backup_time.sql</span><br><span class="line">     flag=`echo $?`</span><br><span class="line">     if [ $flag == &quot;0&quot; ];then</span><br><span class="line">       # tar打包所有的sql文件</span><br><span class="line">       #tar -zcPpf  $backup_dir/mysql_$&#123;dbname&#125;_backup-$backup_time.zip --warning=no-file-changed --directory /   $backup_dir</span><br><span class="line">       zip -jr $backup_dir/mysql_$&#123;dbname&#125;_backup-$backup_time.zip $backup_dir/ --exclude &quot;*.zip&quot;</span><br><span class="line">       #打包成功后删除sql文件</span><br><span class="line">       if [ $? = 0 ]; then</span><br><span class="line">         rm -rf $backup_dir/mysql_$&#123;dbname&#125;_backup-$backup_time.sql</span><br><span class="line">       fi</span><br><span class="line">       echo &quot;database mysql_backup success backup to $backup_dir/mysql_$&#123;dbname&#125;_backup-$backup_time.sql&quot;</span><br><span class="line">       MSG=&quot;$*&quot;</span><br><span class="line">       echo &quot;`eval $NOW` job_success:[$MSG]&quot;</span><br><span class="line">     else</span><br><span class="line">       echo &quot;database mysql_backup backup fail!&quot;</span><br><span class="line">       job_fail &quot;$*&quot;</span><br><span class="line">     fi</span><br><span class="line">   fi</span><br><span class="line">  done</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">#### 单库备份</span></span></span><br><span class="line">one_bak()</span><br><span class="line">&#123;</span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash">备份指定数据库中数据(此处假设数据库是<span class="built_in">test</span>)</span></span><br><span class="line">  mysqldump -h$mysql_host -P$mysql_port -u$mysql_user -p$mysql_password $1 --master-data &gt; $backup_dir/mysql_$1_backup-$backup_time.sql</span><br><span class="line">  flag=`echo $?`</span><br><span class="line">  if [ $flag == &quot;0&quot; ];then</span><br><span class="line">    zip -jr $backup_dir/mysql_$1_backup-$backup_time.zip $backup_dir/ --exclude &quot;*.zip&quot;</span><br><span class="line">    #打包成功后删除sql文件</span><br><span class="line">    if [ $? = 0 ]; then</span><br><span class="line">      echo &quot;rm -rf $backup_dir/mysql_$1_backup-$backup_time.sql&quot;</span><br><span class="line">      rm -rf $backup_dir/mysql_$1_backup-$backup_time.sql</span><br><span class="line">    fi</span><br><span class="line">    echo &quot;database mysql_backup success backup to $backup_dir/mysql_backup-$backup_time.sql&quot;</span><br><span class="line">    job_success &quot;$*&quot;</span><br><span class="line">  else</span><br><span class="line">    echo &quot;database mysql_backup backup fail!&quot;</span><br><span class="line">    job_fail &quot;$*&quot;</span><br><span class="line">  fi</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">job_shell()</span><br><span class="line">&#123;</span><br><span class="line">case &quot;$1&quot; in</span><br><span class="line">  0)</span><br><span class="line">    del_bak</span><br><span class="line">    ;;</span><br><span class="line">  1)</span><br><span class="line">    all_bak</span><br><span class="line">    ;;   </span><br><span class="line">  test)</span><br><span class="line">    one_bak $1</span><br><span class="line">    ;; </span><br><span class="line">  nacos_test)</span><br><span class="line">    one_bak $1</span><br><span class="line">    ;; </span><br><span class="line">  xxl_job_test)</span><br><span class="line">    one_bak $1</span><br><span class="line">    ;; </span><br><span class="line">  *)</span><br><span class="line">    echo &quot;Usage: $0 &#123;0[删除30天之前备份]|1[全备]|单库名[ test | nacos_test | xxl_job_test]&#125;&quot;</span><br><span class="line">    exit 1</span><br><span class="line"></span><br><span class="line">esac</span><br><span class="line">exit 0    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">all_bak</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">one_bak</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">#### 作业平台中执行脚本成功和失败的标准只取决于脚本最后一条执行语句的返回值</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">#### 如果返回值为0，则认为此脚本执行成功，如果非0，则认为脚本执行失败</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="built_in">read</span> -r -p <span class="string">&quot;请选择全库/单库备份：｛0[删除30天之前备份]|1[全备]|单库名[ test | nacos_test | xxl_job_test]｝&quot;</span> bak_sh</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">job_shell <span class="string">&quot;<span class="variable">$bak_sh</span>&quot;</span></span></span><br></pre></td></tr></table></figure><h1 id="2-strabackup方式"><a href="#2-strabackup方式" class="headerlink" title="2.strabackup方式"></a>2.strabackup方式</h1><h2 id="2-1-strabackup-db备份库"><a href="#2-1-strabackup-db备份库" class="headerlink" title="2.1 strabackup_db备份库"></a>2.1 strabackup_db备份库</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">strabackup_db.sh</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line">DB_NAME=erpp</span><br><span class="line">DB_USER=root</span><br><span class="line">DB_PASSWD=xxxxx</span><br><span class="line">DB_BAK_DIR=/data/db_strabackup/</span><br><span class="line">DB_BAK_DATE=`date +%Y%m%d`</span><br><span class="line">DB_cnf=/etc/my.cnf.d/server.cnf</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">DB_DATABASES=<span class="string">&quot;tongxun&quot;</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">DB_DATABASES=<span class="string">&quot;test1&quot;</span></span></span><br><span class="line"></span><br><span class="line">FULL_DB_BAK=full-db-$&#123;DB_BAK_DATE&#125;</span><br><span class="line">FULL_OLD_BAK=full-db-` date +%Y%m%d -d &#x27;-10 day&#x27;`</span><br><span class="line">FULL_DB_TAR=full-db-$&#123;DB_BAK_DATE&#125;.tar.gz</span><br><span class="line"></span><br><span class="line">LOG=$(cd &quot;$(dirname &quot;$&#123;BASH_SOURCE[0]&#125;&quot;)&quot;; pwd)/&quot;$(basename $&#123;BASH_SOURCE[0]&#125;)&quot;.log</span><br><span class="line">ulimit -n 65535</span><br><span class="line"></span><br><span class="line">function mysql_bak()&#123;</span><br><span class="line">        echo &quot;------------`date +%y%m%d.%H%M%S` $0 begin ... &quot;&gt;&gt;$&#123;LOG&#125;</span><br><span class="line">        echo &quot;.............&quot; &gt;&gt;$&#123;LOG&#125;</span><br><span class="line">        </span><br><span class="line">        rm -rf $&#123;DB_BAK_DIR&#125;$&#123;FULL_OLD_BAK&#125;</span><br><span class="line"></span><br><span class="line">        /usr/bin/innobackupex --defaults-file=$&#123;DB_cnf&#125; --user=$&#123;DB_USER&#125; --password=$&#123;DB_PASSWD&#125; --no-timestamp $&#123;DB_BAK_DIR&#125;$&#123;FULL_DB_BAK&#125;</span><br><span class="line">        #/usr/bin/innobackupex --defaults-file=$&#123;DB_cnf&#125; --stream=tar --user=$&#123;DB_USER&#125; --password=$&#123;DB_PASSWD&#125; --databases=&quot;tongxun&quot; --no-timestamp $&#123;DB_BAK_DIR&#125;$&#123;FULL_DB_BAK&#125; |gzip &gt; $&#123;DB_BAK_DIR&#125;$&#123;FULL_DB_TAR&#125;</span><br><span class="line"></span><br><span class="line">        echo &quot;------------`date +%y%m%d.%H%M%S` $0 end ... &quot;&gt;&gt;$&#123;LOG&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">mysql_bak</span><br></pre></td></tr></table></figure><h2 id="2-2-strabackup-db-recovery-恢复"><a href="#2-2-strabackup-db-recovery-恢复" class="headerlink" title="2.2 strabackup_db_recovery 恢复"></a>2.2 strabackup_db_recovery 恢复</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">strabackup_db_recovery.sh</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line">DB_NAME=erpp</span><br><span class="line">DB_USER=root</span><br><span class="line">DB_PASSWD=xxxx</span><br><span class="line">DB_BAK_DIR=/home/db_strabackup/</span><br><span class="line">SCP_DB_BAK_DIR=/data/db_strabackup/</span><br><span class="line">DB_BAK_DATE=`date +%Y%m%d`</span><br><span class="line">DB_cnf=/etc/my.cnf.d/server.cnf</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">DB_DATABASES=<span class="string">&quot;erpp group supply tongxun&quot;</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">DB_DATABASES=<span class="string">&quot;test1&quot;</span></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">FULL_DB_BAK=full-db-20210526</span></span><br><span class="line">FULL_DB_BAK=full-db-$&#123;DB_BAK_DATE&#125;</span><br><span class="line">FULL_OLD_BAK=full-db-` date +%Y%m%d -d &#x27;-1 day&#x27;`</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">FULL_OLD_BAK=full-db-` <span class="built_in">date</span> +%Y%m%d -d <span class="string">&#x27;-3 day&#x27;</span>`.tar.gz</span></span><br><span class="line">FULL_DB_TAR=full-db-$&#123;DB_BAK_DATE&#125;.tar.gz</span><br><span class="line"></span><br><span class="line">LOG=$(cd &quot;$(dirname &quot;$&#123;BASH_SOURCE[0]&#125;&quot;)&quot;; pwd)/&quot;$(basename $&#123;BASH_SOURCE[0]&#125;)&quot;.log</span><br><span class="line">ulimit -n 65535</span><br><span class="line"></span><br><span class="line">function mysql_recovery()&#123;</span><br><span class="line">    echo &quot;------------`date +%y%m%d.%H%M%S` $0 begin ... &quot;&gt;&gt;$&#123;LOG&#125;</span><br><span class="line">    echo &quot;............&quot; &gt;&gt;$&#123;LOG&#125; </span><br><span class="line">    </span><br><span class="line">    #rm -rf $&#123;DB_BAK_DIR&#125;$&#123;FULL_OLD_BAK&#125;    </span><br><span class="line">    rm -rf $&#123;DB_BAK_DIR&#125;full-db-* </span><br><span class="line"></span><br><span class="line">    scp -r -P22 192.168.2.12:$&#123;SCP_DB_BAK_DIR&#125;$&#123;FULL_DB_BAK&#125;/ $&#123;DB_BAK_DIR&#125;</span><br><span class="line">    if [ $? == 0 ]; then</span><br><span class="line">      ## tar xzf $&#123;DB_BAK_DIR&#125;$&#123;FULL_DB_TAR&#125; -C $&#123;DB_BAK_DIR&#125;</span><br><span class="line"></span><br><span class="line">      systemctl stop mariadb</span><br><span class="line"></span><br><span class="line">      rm -rf /maxec/mysql_data/*</span><br><span class="line">      innobackupex --apply-log $&#123;DB_BAK_DIR&#125;$&#123;FULL_DB_BAK&#125;</span><br><span class="line">      innobackupex --defaults-file=$&#123;DB_cnf&#125; --copy-back  $&#123;DB_BAK_DIR&#125;$&#123;FULL_DB_BAK&#125;</span><br><span class="line">      chown -R mysql.mysql /maxec/mysql_data/</span><br><span class="line">    </span><br><span class="line">      systemctl restart mariadb    </span><br><span class="line"></span><br><span class="line">      ## find  $&#123;DB_BAK_DIR&#125; -type d -name &quot;$&#123;FULL_DB_BAK&#125;&quot; |grep -v &quot;tar.gz&quot; |xargs rm -rf &#123;&#125; \;</span><br><span class="line">      ## rm -rf $&#123;DB_BAK_DIR&#125;$&#123;FULL_OLD_BAK&#125;</span><br><span class="line"></span><br><span class="line">      echo &quot;------------`date +%y%m%d.%H%M%S` $0 end ... &quot;&gt;&gt;$&#123;LOG&#125;</span><br><span class="line">    fi   </span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">mysql_recovery</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="3-表数据同步"><a href="#3-表数据同步" class="headerlink" title="3. 表数据同步"></a>3. 表数据同步</h1><h2 id="3-1-同步A库查询到的sql导入到B库price-tag"><a href="#3-1-同步A库查询到的sql导入到B库price-tag" class="headerlink" title="3.1 同步A库查询到的sql导入到B库price_tag"></a>3.1 同步A库查询到的sql导入到B库price_tag</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line">DB_NAME=erp</span><br><span class="line">DB_USER=erp</span><br><span class="line">DB_PASSWD=erpxxxxx</span><br><span class="line">DB_SOURCE_HOST=192.168.2.12</span><br><span class="line">DB_SOURCE_PORT=3306</span><br><span class="line">QUERY_SQL=source_query_old.sql</span><br><span class="line">QUERY_RESULT=&quot;source_result.sql&quot;</span><br><span class="line"></span><br><span class="line">DB_USER_44=food</span><br><span class="line">DB_PASSWD_44=foodxxxx</span><br><span class="line">DB_TARGET_HOST=192.168.2.44</span><br><span class="line">DB_TARGET_PORT=3306</span><br><span class="line">TABLE=price_tag</span><br><span class="line">INSERT_SQL=&quot;truncate table $&#123;TABLE&#125;; load data infile &#x27;/data/source_result.sql&#x27; into table $&#123;TABLE&#125; character set utf8;&quot;</span><br><span class="line"></span><br><span class="line">cd /data</span><br><span class="line">echo &quot;------------`date +%y%m%d.%H%M%S` $0 begin ... &quot;&gt;&gt; sync_log.log</span><br><span class="line"></span><br><span class="line">mysql --user=$&#123;DB_USER&#125; --password=$&#123;DB_PASSWD&#125; --host=$&#123;DB_SOURCE_HOST&#125; --port=$&#123;DB_SOURCE_PORT&#125; &lt;$&#123;QUERY_SQL&#125; -N &gt;$&#123;QUERY_RESULT&#125;</span><br><span class="line"></span><br><span class="line">scp $&#123;QUERY_RESULT&#125; $&#123;DB_TARGET_HOST&#125;&#x27;:/data/&#x27;$&#123;QUERY_RESULT&#125;</span><br><span class="line"></span><br><span class="line">mysql --user=$&#123;DB_USER_44&#125; --password=$&#123;DB_PASSWD_44&#125; --host=$&#123;DB_TARGET_HOST&#125; --port=$&#123;DB_TARGET_PORT&#125;  --local-infile=1 $&#123;DB_NAME&#125; -e &quot;$&#123;INSERT_SQL&#125;&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">echo &quot;------------`date +%y%m%d.%H%M%S` $0 end ... &quot;&gt;&gt; sync_log.log</span><br></pre></td></tr></table></figure><h2 id="3-2-同步A库sys-job导入到B库sys-job"><a href="#3-2-同步A库sys-job导入到B库sys-job" class="headerlink" title="3.2 同步A库sys_job导入到B库sys_job"></a>3.2 同步A库sys_job导入到B库sys_job</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">DB_NAME=sys_job</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">A库</span></span><br><span class="line">A_DB_USER=root</span><br><span class="line">A_DB_PASSWD=xxxxx</span><br><span class="line">A_DB_HOST=192.168.2.12</span><br><span class="line">A_DB_PORT=3306</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">B库</span></span><br><span class="line">B_DB_NAME=sys_job</span><br><span class="line">B_DB_USER=root</span><br><span class="line">B_DB_PASSWD=xxxxx</span><br><span class="line">B_DB_HOST=192.168.2.44</span><br><span class="line">B_DB_PORT=3306</span><br><span class="line"> </span><br><span class="line">echo &quot;------------`date +%y%m%d.%H%M%S` $0 begin ... &quot;&gt;&gt;/tmp/sync_sys_job_tables-v1</span><br><span class="line">mysqldump --user=$&#123;A_DB_USER&#125; --password=$&#123;A_DB_PASSWD&#125; --host=$&#123;A_DB_HOST&#125; --port=$&#123;A_DB_PORT&#125; $&#123;DB_NAME&#125; |mysql --user=$&#123;B_DB_USER&#125; --password=$&#123;B_DB_PASSWD&#125; --host=$&#123;B_DB_HOST&#125; --port=$&#123;B_DB_PORT&#125; $&#123;DB_NAME&#125;</span><br><span class="line">echo &quot;------------`date +%y%m%d.%H%M%S` $0 end ... &quot;&gt;&gt;/tmp/sync_sys_job_tables-v1 </span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">echo &quot;################################## &quot;&gt;&gt;/tmp/sync_sys_job_tables-v1</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 脚本 </category>
          
          <category> Shell </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Shell </tag>
            
            <tag> mysql 备份 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql日常维护</title>
      <link href="/posts/1669513934.html"/>
      <url>/posts/1669513934.html</url>
      
        <content type="html"><![CDATA[<h1 id="数据库日常维护"><a href="#数据库日常维护" class="headerlink" title="数据库日常维护"></a>数据库日常维护</h1><h2 id="1-修改连接数"><a href="#1-修改连接数" class="headerlink" title="1. 修改连接数"></a>1. 修改连接数</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">set global max_connections=500;</span><br><span class="line">mysql  -h 192.168.64.33 -P 6002 -uroot -p -e  &quot;select @@hostname&quot;</span><br><span class="line">mysql  -h 192.168.64.33 -P 3306 -uroot -p -e  &quot;set global max_connections=500;&quot;</span><br></pre></td></tr></table></figure><h2 id="2-mysql备份"><a href="#2-mysql备份" class="headerlink" title="2. mysql备份"></a>2. mysql备份</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 脚本全备到一个sql文件</span></span></span><br><span class="line">sh /home/script/mysql_k8s-prod_bak-all-databases.sh</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 脚本全备到每个库一个sql文件（定时任务）</span></span></span><br><span class="line">sh /home/script/mysql_k8s-prod_bak-all.sh</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 脚本可选择单库备份</span></span></span><br><span class="line">sh /home/script/mysql_k8s-prod_bak.sh</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">备份全库</span></span><br><span class="line">mysqldump -h 192.168.64.33 -P 6002 -uroot -pxxxx --all-databases --single-transaction --quick &gt;all_databases-$(date +%Y%m%d-%H%M%S).sql</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">导出一个表</span></span><br><span class="line">mysqldump -u 用户名 -p 数据库名 表名&gt; 导出的文件名</span><br><span class="line">mkdir -p /mysql_back/tables_bak/`date +%Y%m%d%H`/数据库名</span><br><span class="line">mysqldump -h 192.168.64.33 -P 6001 -u root -p 数据库名 表名 &gt; /mysql_back/tables_bak/`date +%Y%m%d%H`/数据库名/表名-$(date +%Y%m%d-%H%M%S).sql</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">导出一个表为csv格式</span></span><br><span class="line">SELECT * FROM 表名 INTO OUTFILE &#x27;/var/lib/mysql-files/表名.csv&#x27; CHARACTER SET utf8mb4  FIELDS TERMINATED BY &#x27;,&#x27; ENCLOSED BY &#x27;&quot;&#x27; LINES TERMINATED BY &#x27;\n&#x27;;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">导出一个数据库结构</span></span><br><span class="line">mysqldump -u root -p -d --add-drop-table 表名 &gt; 表名.sql</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">导入一个表数据</span> </span><br><span class="line">mysql -h 192.168.64.33 -P 6002 -u root -p 数据库名 表名 &lt; /home/sql_init/库名/test-202311172019-1.sql</span><br></pre></td></tr></table></figure><h2 id="3-sql常用语句"><a href="#3-sql常用语句" class="headerlink" title="3. sql常用语句"></a>3. sql常用语句</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">清空表</span></span><br><span class="line">TRUNCATE 表名;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">从一个表中复制所有的列插入到另一个已存在的表中：</span></span><br><span class="line">INSERT INTO table2 SELECT * FROM table1;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看表字段字符</span></span><br><span class="line">SHOW FULL COLUMNS FROM your_table_name;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看变量</span></span><br><span class="line">SHOW GLOBAL VARIABLES like &quot;group_concat_max_len&quot;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">设置密码过期</span></span><br><span class="line">ALTER USER &#x27;user&#x27;@&#x27;host&#x27; PASSWORD EXPIRE INTERVAL N DAY;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查询过期设置</span></span><br><span class="line">select User,password_last_changed,password_lifetime,password_expired from mysql.user;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"> 查询</span></span><br><span class="line">SELECT * FROM 表名 WHERE id = &#x27;10000000002&#x27;;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">删除ord_id为空的</span></span><br><span class="line">DELETE FROM 表名 WHERE ord_id is NULL;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查询用户授权</span></span><br><span class="line">select user,host,PLUGIN from mysql.user</span><br></pre></td></tr></table></figure><h2 id="4-修改授权"><a href="#4-修改授权" class="headerlink" title="4. 修改授权"></a>4. 修改授权</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">修改授权</span></span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">show grants <span class="keyword">for</span> <span class="string">&#x27;god&#x27;</span>@<span class="string">&#x27;192.168.64.%&#x27;</span>\G    <span class="comment"># 查看权限</span></span></span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">REVOKE ALL PRIVILEGES ON *.* FROM god@<span class="string">&#x27;192.168.64.%&#x27;</span>;  <span class="comment"># 收回权限</span></span></span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">REVOKE ALL PRIVILEGES ON 库名.*  FROM god@<span class="string">&#x27;192.168.64.%&#x27;</span>;  <span class="comment"># 收回权限</span></span></span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">flush privileges;</span></span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">drop user <span class="string">&#x27;god&#x27;</span>@<span class="string">&#x27;192.168.64.%&#x27;</span>;  <span class="comment"># 删除用户</span></span></span><br></pre></td></tr></table></figure><h2 id="5-查看连接数"><a href="#5-查看连接数" class="headerlink" title="5. 查看连接数"></a>5. 查看连接数</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看当前的连接数</span></span><br><span class="line">show GLOBAL STATUS like &#x27;Threads_connected&#x27;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看最大连接数</span></span><br><span class="line">show variables like &#x27;max_connections&#x27;;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查询当前用户连接数和最大连接数</span></span><br><span class="line">SELECT @@max_connections AS &#x27;最大连接数&#x27;,</span><br><span class="line">       (SELECT COUNT(*) FROM information_schema.processlist WHERE db IS NOT NULL) AS &#x27;当前连接数&#x27;;</span><br><span class="line">      </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查询每个不同ip的连接数</span>      </span><br><span class="line">SELECT host, COUNT(*) AS &#x27;连接数&#x27; FROM information_schema.`PROCESSLIST` WHERE command != &#x27;sleep&#x27; AND user != &#x27;system user&#x27; GROUP BY HOST;       </span><br></pre></td></tr></table></figure><h2 id="6-设置pool-size"><a href="#6-设置pool-size" class="headerlink" title="6. 设置pool_size"></a>6. 设置pool_size</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">show  variables  like &#x27;%innodb_buffer_pool_size%&#x27;;</span><br><span class="line">SET GLOBAL innodb_buffer_pool_size=134217728;  #128M -- 单位kb 16777216=16M  8388608=8M</span><br></pre></td></tr></table></figure><h2 id="7-清理内存"><a href="#7-清理内存" class="headerlink" title="7. 清理内存"></a>7. 清理内存</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sync &amp;&amp; echo 1 &gt; /proc/sys/vm/drop_caches</span><br></pre></td></tr></table></figure><h2 id="8-事务大执行不了"><a href="#8-事务大执行不了" class="headerlink" title="8. 事务大执行不了"></a>8. 事务大执行不了</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">show global variables like &#x27;%group_replication_transaction_size_limit%&#x27;;</span><br><span class="line">+------------------------------------------+-----------+</span><br><span class="line">| Variable_name                            | Value     |</span><br><span class="line">+------------------------------------------+-----------+</span><br><span class="line">| group_replication_transaction_size_limit | 600000000 |</span><br><span class="line">+------------------------------------------+-----------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">set global group_replication_transaction_size_limit=6000000000;</span><br><span class="line">Query OK, 0 rows affected, 1 warning (0.00 sec)</span><br><span class="line"></span><br><span class="line">show global variables like &#x27;%group_replication_transaction_size_limit%&#x27;;  --2G</span><br><span class="line">+------------------------------------------+------------+</span><br><span class="line">| Variable_name                            | Value      |</span><br><span class="line">+------------------------------------------+------------+</span><br><span class="line">| group_replication_transaction_size_limit | 2147483647 |</span><br><span class="line">+------------------------------------------+------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><h2 id="9-mysql-kill-id"><a href="#9-mysql-kill-id" class="headerlink" title="9. mysql kill id"></a>9. mysql kill id</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql  -h 192.168.64.33 -P 6001 -uroot -pxxxx -e  &quot;show processlist&quot; |grep &quot;executing&quot; |awk &#x27;&#123;print $1&#125;&#x27; |xargs -i mysql  -h 192.168.64.33 -P 6001 -uroot -pxxxx -e &quot;kill &#123;&#125;&quot;</span><br></pre></td></tr></table></figure><h2 id="10-大事务造成延迟"><a href="#10-大事务造成延迟" class="headerlink" title="10. 大事务造成延迟"></a>10. 大事务造成延迟</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">当Primary上有大事务产生时，很容易造成Secondary在应用大事务过程中存在延迟。</span><br><span class="line">因此，要尽量避免执行大事务。可以将大事务拆分成多个小事务，例如当执行load data导入大批数据时，就可以将导入文件切分成多个小文件。</span><br><span class="line">此外，还可以适当调低</span><br><span class="line">group_replication_transaction_size_limit 阈值，限制事务大小。</span><br><span class="line"> </span><br><span class="line">还可以通过监控事务状态，防止有个别事务运行时间过久：</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">活跃时间最长的事务</span></span><br><span class="line">SELECT * FROM information_schema.innodb_trx ORDER BY trx_started ASC LIMIT 10;</span><br><span class="line"><span class="meta prompt_"> </span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">等待时间最长的事务</span></span><br><span class="line">SELECT * FROM sys.innodb_lock_waits ORDER BY wait_age_secs DESC LIMIT 10;</span><br><span class="line"><span class="meta prompt_"> </span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">要特别关注的大事务</span></span><br><span class="line">-- 超过5把锁</span><br><span class="line">-- 超过100行被锁</span><br><span class="line">-- 超过100行被修改</span><br><span class="line">SELECT * FROM information_schema.innodb_trx WEHRE</span><br><span class="line">  trx_lock_structs &gt;= 5 OR</span><br><span class="line">  trx_rows_locked &gt;= 100 OR</span><br><span class="line">  trx_rows_modified &gt;= 100 OR</span><br><span class="line">  TIME_TO_SEC(TIMEDIFF(NOW(),trx_started)) &gt; 100; </span><br></pre></td></tr></table></figure><h2 id="11-优化参数"><a href="#11-优化参数" class="headerlink" title="11 优化参数"></a>11 优化参数</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">如果单个事务太大，以至于在5秒钟内无法通过网络在组成员之间复制消息，则可能会怀疑成员失败，然后被移出组。由于内存分配问题，大型事务也可能导致系统速度变慢。要避免这些问题，使用以下缓解措施：</span></span><br><span class="line">1. 尽可能尝试限制事务规模。例如，将与LOAD DATA一起使用的文件拆分为较小的块。</span><br><span class="line">2. 使用系统变量group_replication_transaction_size_limit指定组接收的最大事务大小。超过此大小的事务将回滚，不会发送到组。在MySQL 8.0中，此系统变量缺省值为150000000字节（大约143 MB）。</span><br><span class="line">3. 从MySQL 8.0.13开始，可以使用系统变量group_replication_member_expel_timeout来允许在怀疑失败的成员在被移出之前有更多的时间。可以在最初的5秒检测期后最多延长一个小时。</span><br><span class="line">4. 从MySQL 8.0.16开始，大型消息会自动分段，这意味着大型消息不会触发引发怀疑的5秒检测周期，除非此时存在其它网络问题。为了使复制组使用分段，所有组成员必须处于MySQL 8.0.16或更高版本，并且组使用的组复制通信协议版本必须允许分段。如果MySQL版本不支持消息分段，可以使用系统变量group_replication_communication_max_message_size来调整最大消息大小，缺省值为10485760字节（10 MB），或通过指定零值来关闭分段</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">组接收的最大事务大小 已修改为：1G    600000000字节=572M  2147483648=2G  1073741824=1G</span></span><br><span class="line">show global variables like &#x27;%group_replication_transaction_size_limit%&#x27;;</span><br><span class="line">STOP GROUP_REPLICATION;</span><br><span class="line">set global group_replication_transaction_size_limit=1073741824;    # 设置为1G</span><br><span class="line">START GROUP_REPLICATION;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">允许在怀疑失败的成员在被移出之前有更多的时间,默认5s</span></span><br><span class="line">show global variables like &#x27;%group_replication_member_expel_timeout%&#x27;;</span><br><span class="line">STOP GROUP_REPLICATION;</span><br><span class="line">set global group_replication_member_expel_timeout=5;</span><br><span class="line">START GROUP_REPLICATION;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">调整最大消息大小，缺省值为10485760字节（10 MB）</span></span><br><span class="line">show global variables like &#x27;%group_replication_communication_max_message_size%&#x27;;</span><br><span class="line">STOP GROUP_REPLICATION;</span><br><span class="line">set global group_replication_communication_max_message_size=10485760;</span><br><span class="line">START GROUP_REPLICATION;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">故障节点尝试自动加入集群的次数，默认是3次</span></span><br><span class="line">show global variables like &#x27;%group_replication_autorejoin_tries%&#x27;;</span><br><span class="line">STOP GROUP_REPLICATION;</span><br><span class="line">set global group_replication_autorejoin_tries=3;</span><br><span class="line">START GROUP_REPLICATION;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">预估 XCom Cache, 5s检测时间段内的预期消息量,目前是1G</span></span><br><span class="line">show global variables like &#x27;%group_replication_message_cache_size%&#x27;;</span><br><span class="line">STOP GROUP_REPLICATION;</span><br><span class="line">set global group_replication_message_cache_size=1073741824;</span><br><span class="line">START GROUP_REPLICATION;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">未研究通其功能,目前是OFF</span></span><br><span class="line">show global variables like &#x27;%group_replication_paxos_single_leader%&#x27;;</span><br><span class="line">set global group_replication_paxos_single_leader=ON;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">使用单主模式,目前是ON</span></span><br><span class="line">show global variables like &#x27;%group_replication_single_primary_mode%&#x27;;</span><br><span class="line">set global group_replication_single_primary_mode=ON;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">流控制</span></span><br><span class="line">show global variables like &#x27;%group_replication_flow_control_mode%&#x27;;</span><br><span class="line">group_replication_flow_control_mode = QUOTA </span><br><span class="line"><span class="meta prompt_"> </span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">键缓存的大小,默认8M=8388608</span></span><br><span class="line">show global variables like &#x27;%key_buffer_size%&#x27;;</span><br><span class="line">set global key_buffer_size=16777216;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">连接缓冲区的大小，默认256kb=262144</span></span><br><span class="line">show global variables like &#x27;%join_buffer_size%&#x27;;</span><br><span class="line">set global join_buffer_size=524288;</span><br></pre></td></tr></table></figure><h2 id="12-mysql内存使用率高且不释放问题排查"><a href="#12-mysql内存使用率高且不释放问题排查" class="headerlink" title="12. mysql内存使用率高且不释放问题排查"></a>12. mysql内存使用率高且不释放问题排查</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">SHOW VARIABLES LIKE &#x27;innodb_buffer_pool_size&#x27;;  -- 128M</span><br><span class="line"></span><br><span class="line">SHOW VARIABLES LIKE &#x27;query_cache_size&#x27;;  -- NULL</span><br><span class="line"></span><br><span class="line">SHOW VARIABLES LIKE &#x27;tmp_table_size&#x27;;  -- 16M</span><br><span class="line"></span><br><span class="line">SHOW VARIABLES LIKE &#x27;key_buffer_size&#x27;;  -- 8M</span><br><span class="line"></span><br><span class="line">SHOW VARIABLES LIKE &#x27;table_cache&#x27;;  -- NULL</span><br><span class="line"></span><br><span class="line">SHOW VARIABLES LIKE &#x27;innodb_additional_mem_pool_size&#x27;; -- NULL</span><br><span class="line"></span><br><span class="line">SHOW VARIABLES LIKE &#x27;innodb_flush_log_at_trx_commit&#x27;; -- 等到innodb_log_buffer_size列队满后再统一储存,默认为1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">SHOW VARIABLES LIKE &#x27;innodb_log_buffer_size&#x27;;   -- 16M</span><br><span class="line"></span><br><span class="line">show global status like &#x27;%tmp%&#x27;</span><br><span class="line"></span><br><span class="line">show global variables like &#x27;%tmp_table%&#x27;; -- 16M -- 发现数据库创建了大量的临时表，并且仍在频繁的创建</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">gdb --batch --pid ‘pidof mysqld’ --ex <span class="string">&#x27;call malloc_trim(0)&#x27;</span>； -- gdb回收内存碎片，生产环境慎用</span></span><br><span class="line">pidof mysqld</span><br><span class="line">gdb --batch --ex &#x27;file /usr/sbin/mysqld&#x27; --pid 3803632 --ex &#x27;call (void)malloc_trim(0)&#x27;</span><br><span class="line"></span><br><span class="line">-- MySQL进程配置jemalloc内存管理模块</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">测试环境内存告警</span></span><br><span class="line">1. 减少innodb_buffer_pool_size大小</span><br><span class="line">SET GLOBAL innodb_buffer_pool_size= 16777216; -- 单位kb =16M  8388608=8M</span><br><span class="line">2. 设置了连接等待时间</span><br><span class="line">-- 服务器关闭交互式连接前等待活动的秒数</span><br><span class="line">set global interactive_timeout=1200;</span><br><span class="line">-- 服务器关闭非交互连接之前等待活动的秒数</span><br><span class="line">SET GLOBAL wait_timeout=1200;    -- 20分钟</span><br><span class="line"></span><br><span class="line">mysql  -h 192.168.64.33 -P 6001 -uroot -pxxxxxx -e  &quot;SET GLOBAL tmp_table_size=8388608;&quot;</span><br><span class="line">mysql  -h 192.168.64.33 -P 6001 -uroot -pxxxxxx -e  &quot;SET GLOBAL innodb_buffer_pool_size=8388608;&quot;</span><br></pre></td></tr></table></figure><h2 id="13-binlog恢复数据"><a href="#13-binlog恢复数据" class="headerlink" title="13 binlog恢复数据"></a>13 binlog恢复数据</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">1. 找到binlog日志目录及文件</span></span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">show binlog events;   <span class="comment">#只查看第一个binlog文件的内容</span></span></span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">show binlog events <span class="keyword">in</span> <span class="string">&#x27;mysqlbinlog.000002&#x27;</span>;<span class="comment">#查看指定binlog文件的内容</span></span></span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">show binary logs;  <span class="comment">#获取binlog文件列表</span></span></span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">show master status; <span class="comment">#查看当前正在写入的binlog文件</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">2. 查看这个binlog的内容</span></span><br><span class="line">show binlog events in &#x27;mysqlbinlog.000004&#x27;;</span><br><span class="line">- 清空表数据的记录行，Event_type是Delete_rows；</span><br><span class="line">- 新增数据的Event_type是Write_rows；</span><br><span class="line">- 分析这个binlog，比如还原刚才被删除的数据，因此找到create table语句后的第一个Event_type是Query的行，它的Pos为460；再找到Event_type是Delete_rows上面最接近的、Info中是COMMIT的行，它的Event_type是Xid，End_log_pos是1199</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">3. 还原数据</span></span><br><span class="line">mysqlbinlog --no-defaults --start-position=460 --stop-position=1199 &quot;/var/lib/mysql/mysqlbinlog.000004&quot; -d test | mysql -uroot -proot test</span><br><span class="line">或者，把binlog日志中，指定范围内的日志导出，然后自己执行source命令还原数据</span><br><span class="line">mysqlbinlog &quot;/var/lib/mysql/mysqlbinlog.000004&quot; -d test  --skip-gtids  --start-position=460 --stop-position=1199 &gt; test.sql</span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">use <span class="built_in">test</span>;</span> </span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash"><span class="built_in">source</span> test.sql;</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">获取binlog文件列表</span> </span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">show binary logs;</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">对一个二进制文件的事务做过滤查询</span></span><br><span class="line">SHOW BINLOG EVENTS IN &#x27;mysql-binlog.000015&#x27; FROM 194 LIMIT 2;</span><br><span class="line">show binlog events in &#x27;mysql-binlog.000015&#x27; from 666 limit 1, 2;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">过滤一天的某表的日志</span></span><br><span class="line">mysqlbinlog --start-datetime=&quot;2024-01-17 00:00:00&quot; --stop-datetime=&quot;2024-01-17 23:59:59&quot; /home/mysql/data1/binlog_data/mysql-binlog.000015 -vv |grep -A 10 userapp</span><br><span class="line">mysqlbinlog --start-datetime=&quot;2024-01-17 00:00:00&quot; --stop-datetime=&quot;2024-01-17 23:59:59&quot; /home/mysql/data1/binlog_data/mysql-binlog.000015 -vv |grep -w &#x27;### INSERT INTO `store`.`userapp`&#x27; |wc -l</span><br><span class="line">/usr/bin/mysqlbinlog --start-datetime=&quot;2024-01-17 00:00:00&quot; --stop-datetime=&quot;2024-01-17 23:59:59&quot; /var/lib/mysql/binlog.000001 -vv |grep -w &#x27;### INSERT INTO&#x27; |wc -l</span><br><span class="line">mysqlbinlog --start-datetime=&quot;2024-01-17 00:00:00&quot; --stop-datetime=&quot;2024-01-17 23:59:59&quot; /home/mysql/data1/binlog_data/mysql-binlog.000015 -vv |grep -A 10 -w &#x27;### INSERT INTO `store`.`userapp`&#x27; |grep -w &#x27;server id&#x27; |awk &#x27;&#123;print $1&#125;&#x27; |sed &#x27;s/#//g&#x27;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql集群部署</title>
      <link href="/posts/587507026.html"/>
      <url>/posts/587507026.html</url>
      
        <content type="html"><![CDATA[<h1 id="mysql集群部署-8-0-33"><a href="#mysql集群部署-8-0-33" class="headerlink" title="mysql集群部署(8.0.33)"></a>mysql集群部署(8.0.33)</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">caching_sha2_password作为8.0默认的密码认证插件，其安全性强于mysql_native_password，性能优于sha256_password；但由于客户端和驱动的兼容性问题，建议还是采用mysql_native_password作为默认的密码认证插件</span><br></pre></td></tr></table></figure><h2 id="1-修改hosts"><a href="#1-修改hosts" class="headerlink" title="1 修改hosts"></a>1 修改hosts</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">三台都操作</span></span><br><span class="line"></span><br><span class="line">192.168.64.31 server-1</span><br><span class="line">192.168.64.32 server-2</span><br><span class="line">192.168.64.30 server-3</span><br><span class="line"></span><br><span class="line">192.168.64.30 V002012011-mysql-01-30</span><br><span class="line">192.168.64.30 V002012012-mysql-02-31</span><br><span class="line">192.168.64.30 V002012013-mysql-03-32</span><br></pre></td></tr></table></figure><h2 id="2-安装MYSQL"><a href="#2-安装MYSQL" class="headerlink" title="2  安装MYSQL"></a>2  安装MYSQL</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">三台都操作</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">yum install -y perl-Module-Install.noarch net-tools perl-Module-Install.noarch</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">rpm -ivh mysql-community-common-8.0.33-1.el8.x86_64.rpm</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">rpm -ivh mysql-community-client-plugins-8.0.33-1.el8.x86_64.rpm</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">rpm -ivh mysql-community-libs-8.0.33-1.el8.x86_64.rpm</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">rpm -ivh mysql-community-client-8.0.33-1.el8.x86_64.rpm</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">rpm -ivh mysql-community-devel-8.0.33-1.el8.x86_64.rpm</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">rpm -ivh mysql-community-server-8.0.33-1.el8.x86_64.rpm  --force --nodeps</span></span><br></pre></td></tr></table></figure><h3 id="2-1-配置文件"><a href="#2-1-配置文件" class="headerlink" title="2.1  配置文件"></a>2.1  配置文件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cat</span> /etc/my.cnf</span></span><br><span class="line">[mysql]</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">CLIENT <span class="comment">#</span></span></span><br><span class="line">port=3306</span><br><span class="line">socket=/var/lib/mysql/mysql.sock</span><br><span class="line">prompt=&quot;\\u@god_DBA_Watching_You! \\d_\\R:\\m:\\s&gt; &quot;</span><br><span class="line">default-character-set=utf8mb4</span><br><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">GENERAL <span class="comment">#</span></span></span><br><span class="line">user=mysql</span><br><span class="line">character-set-server=utf8mb4</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">innodb=ON</span></span><br><span class="line">socket=/var/lib/mysql/mysql.sock</span><br><span class="line">pid-file=/var/run/mysqld/mysql.pid</span><br><span class="line">port=3306</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">SAFETY <span class="comment">#</span></span></span><br><span class="line">max_allowed_packet=32M</span><br><span class="line">max_connect_errors=1000000    </span><br><span class="line">skip_name_resolve</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">解决group by语句的校验问题</span></span><br><span class="line">sql_mode=&quot;STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION&quot;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">拼接长度</span></span><br><span class="line">group_concat_max_len=1024000</span><br><span class="line">sysdate_is_now=1</span><br><span class="line">explicit_defaults_for_timestamp=1</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">DATA STORAGE <span class="comment">#</span></span></span><br><span class="line">datadir=/var/lib/mysql/</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">LOGGING <span class="comment">#</span></span></span><br><span class="line">log_error=/home/mysql/errlog_data/mysql-error.log</span><br><span class="line">log_queries_not_using_indexes=0</span><br><span class="line"></span><br><span class="line">sync_relay_log=1  </span><br><span class="line">sync_relay_log_info=1 </span><br><span class="line">sync_binlog=1</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">binlog的失效日期单位秒,15天</span></span><br><span class="line">binlog_expire_logs_seconds=1296000</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">默认参数为0 不开启并行复制 开启会导致xtrabackup备份 无法使用slave-info参数</span></span><br><span class="line">replica_parallel_workers=4</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">CACHES AND LIMITS <span class="comment">#</span></span></span><br><span class="line">tmp_table_size=16M</span><br><span class="line">max_heap_table_size=16M</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">query_cache_type=0</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">query_cache_size=0</span></span><br><span class="line">max_connections=200</span><br><span class="line">thread_cache_size=20</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">open_files_limit=2560</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">table_definition_cache=4096</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">table_open_cache=10240</span></span><br><span class="line">performance_schema_max_table_instances=200</span><br><span class="line">table_definition_cache=400</span><br><span class="line">table_open_cache=256</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">交互连接活动等待时长和非交互连接等待时长</span></span><br><span class="line">interactive_timeout=7200</span><br><span class="line">wait_timeout=7200</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">O_SYNC/O_DSYNC/O_DIRECT O_DIRECT表示数据文件直接从MySQL INNODB BUFFER写入到磁盘 不过OS BUFFER</span></span><br><span class="line">innodb_flush_method=O_DIRECT</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">redo <span class="built_in">log</span>文件组中日志文件的数量 默认至少为2</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">innodb_log_files_in_group=2</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">innodb改变数据的时候 会把改动记录先写入到日志缓冲区 取值范围16MB-64MB</span></span><br><span class="line">innodb_log_buffer_size=16M</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">redo <span class="built_in">log</span>日志的大小</span></span><br><span class="line">innodb_redo_log_capacity=512M</span><br><span class="line">innodb_flush_log_at_trx_commit=1</span><br><span class="line">innodb_buffer_pool_size=16M</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">innodb同时可以打开的.ibd文件个数</span></span><br><span class="line">innodb_open_files=65535</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">System TableSpace</span></span><br><span class="line">innodb_data_file_path=ibdata1:1G:autoextend</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Independent TableSpace</span></span><br><span class="line">innodb_file_per_table=ON</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Innodb内核最大并发线程数 0表示不受限制 建议为逻辑CPU核心数的2倍</span></span><br><span class="line">innodb_thread_concurrency=0</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">快速加载热点数据到内存中</span></span><br><span class="line">innodb_buffer_pool_load_at_startup=ON</span><br><span class="line">innodb_buffer_pool_dump_at_shutdown=ON</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">解决日志时间和系统时间不一致的问题</span></span><br><span class="line">log_timestamps=SYSTEM</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">log_error_verbosity Value</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Error messages 1</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Error and warning messages 2</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Error, warning, and note messages 3</span></span><br><span class="line">log_error_verbosity            = 2          </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">bind</span> address 解决3306绑定tcp6的问题</span></span><br><span class="line">bind-address=0.0.0.0</span><br><span class="line"><span class="meta prompt_"> #</span><span class="language-bash">大小写敏感设置 0区分 1不区分</span></span><br><span class="line">lower_case_table_names = 1</span><br></pre></td></tr></table></figure><h3 id="2-2-启动"><a href="#2-2-启动" class="headerlink" title="2.2  启动"></a>2.2  启动</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /home/mysql/mysql_data </span><br><span class="line">mkdir -p /home/mysql/errlog_data</span><br><span class="line">mkdir -p /home/mysql/slowlog_data</span><br><span class="line">mkdir -p /home/mysql/binlog_data/mgr-bin</span><br><span class="line">mkdir -p /home/mysql/relaylog_data/mgr-relay</span><br><span class="line"></span><br><span class="line">chown -R mysql.mysql /home/mysql</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl start mysqld</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl status mysqld</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">tail</span> -f /var/log/mysqld.log</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">找到root初始密码</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">grep <span class="string">&#x27;temporary password&#x27;</span> /var/log/mysqld.log</span>    </span><br></pre></td></tr></table></figure><h3 id="2-3-首次设置密码"><a href="#2-3-首次设置密码" class="headerlink" title="2.3 首次设置密码"></a>2.3 首次设置密码</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line">--- root用户</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">mysql -uroot -p<span class="string">&#x27;):voUV2k9-r1&#x27;</span></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">修改root密码</span></span><br><span class="line">ALTER USER USER() IDENTIFIED BY &#x27;T@Testxxxxx!&#x27;;</span><br><span class="line">flush privileges;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">创建账户密码授权：</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">root</span></span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">create user <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;192.168.64.%&#x27;</span> identified by <span class="string">&#x27;T@Testxxxxx!&#x27;</span>;</span></span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">grant all privileges on *.* to <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;192.168.64.%&#x27;</span>;</span></span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">flush privileges;</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">root密码永不过期的</span></span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">ALTER USER <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED BY <span class="string">&#x27;T@Testxxxxx!&#x27;</span> PASSWORD EXPIRE NEVER;</span></span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">ALTER USER <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;192.168.64.%&#x27;</span> IDENTIFIED BY <span class="string">&#x27;T@Testxxxxx!&#x27;</span> PASSWORD EXPIRE NEVER;</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看user表</span></span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash"><span class="keyword">select</span> user,host from mysql.user;</span></span><br><span class="line">+------------------+---------------+</span><br><span class="line">| user             | host          |</span><br><span class="line">+------------------+---------------+</span><br><span class="line">| root             | 192.168.64.% |</span><br><span class="line">| mysql.infoschema | localhost     |</span><br><span class="line">| mysql.session    | localhost     |</span><br><span class="line">| mysql.sys        | localhost     |</span><br><span class="line">| root             | localhost     |</span><br><span class="line">+------------------+---------------+</span><br><span class="line"></span><br><span class="line">--- 其它用户</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">god</span></span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">create user <span class="string">&#x27;god&#x27;</span>@<span class="string">&#x27;192.168.64.%&#x27;</span> identified by <span class="string">&#x27;god@xxxx!&#x27;</span>;</span></span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">grant all privileges on hseysh.* to <span class="string">&#x27;god&#x27;</span>@<span class="string">&#x27;192.168.64.%&#x27;</span> with grant option;</span></span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">ALTER USER <span class="string">&#x27;god&#x27;</span>@<span class="string">&#x27;192.168.64.%&#x27;</span> IDENTIFIED WITH mysql_native_password BY <span class="string">&#x27;god@xxxx!&#x27;</span> ;</span></span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">flush privileges;</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">修改授权</span></span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">show grants <span class="keyword">for</span> <span class="string">&#x27;god&#x27;</span>@<span class="string">&#x27;192.168.64.%&#x27;</span>\G    <span class="comment"># 查看权限</span></span></span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">REVOKE ALL PRIVILEGES ON *.* FROM god@<span class="string">&#x27;192.168.64.%&#x27;</span>;  <span class="comment"># 收回权限</span></span></span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">revoke all on *.* from god@<span class="string">&#x27;192.168.64.%&#x27;</span>;</span></span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">drop user <span class="string">&#x27;god&#x27;</span>@<span class="string">&#x27;192.168.64.8&#x27;</span>;  <span class="comment"># 删除用户</span></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">创建库</span></span><br><span class="line">mysql -ugod -pgod@2023!</span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">create database god default character <span class="built_in">set</span> utf8mb4 collate utf8mb4_general_ci;</span></span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">create database god_test default character <span class="built_in">set</span> utf8mb4 collate utf8mb4_0900_ai_ci;</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">god密码永不过期的</span></span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">ALTER USER <span class="string">&#x27;god&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED BY <span class="string">&#x27;god@xxxx!&#x27;</span> PASSWORD EXPIRE NEVER;</span></span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">ALTER USER <span class="string">&#x27;god&#x27;</span>@<span class="string">&#x27;192.168.64.%&#x27;</span> IDENTIFIED BY <span class="string">&#x27;god@xxxx!&#x27;</span> PASSWORD EXPIRE NEVER;</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">密码有限期的</span></span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">ALTER USER <span class="string">&#x27;god&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED BY <span class="string">&#x27;新密码&#x27;</span> PASSWORD EXPIRE;</span></span><br><span class="line"></span><br><span class="line">select user,host from mysql.user;</span><br><span class="line">+------------------+---------------+</span><br><span class="line">| user             | host          |</span><br><span class="line">+------------------+---------------+</span><br><span class="line">| god              | 192.168.64.% |</span><br><span class="line">| root             | 192.168.64.% |</span><br><span class="line">| mysql.infoschema | localhost     |</span><br><span class="line">| mysql.session    | localhost     |</span><br><span class="line">| mysql.sys        | localhost     |</span><br><span class="line">| root             | localhost     |</span><br><span class="line">+------------------+---------------+</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">授权远程客户端：</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">god</span></span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">grant all privileges on *.* to <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;192.168.1.11&#x27;</span>;</span></span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">flush privileges;</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">create user <span class="string">&#x27;god&#x27;</span>@<span class="string">&#x27;192.168.1.%&#x27;</span> identified by <span class="string">&#x27;god@xxxx!&#x27;</span>;</span></span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">grant all privileges on god_test.* to <span class="string">&#x27;god&#x27;</span>@<span class="string">&#x27;192.168.1.%&#x27;</span> with grant option;</span></span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">grant all privileges on god.* to <span class="string">&#x27;god&#x27;</span>@<span class="string">&#x27;192.168.1.%&#x27;</span> with grant option;</span></span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">flush privileges;</span></span><br></pre></td></tr></table></figure><h2 id="3-安装MGR插件"><a href="#3-安装MGR插件" class="headerlink" title="3 安装MGR插件"></a>3 安装MGR插件</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">- 登录mysql</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">mysql -uroot -p</span> </span><br><span class="line">- 安装插件</span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">install PLUGIN group_replication SONAME <span class="string">&#x27;group_replication.so&#x27;</span>;</span></span><br><span class="line">- 查看group replication插件</span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">show plugins;</span></span><br></pre></td></tr></table></figure><h2 id="4-配置复制环境"><a href="#4-配置复制环境" class="headerlink" title="4 配置复制环境"></a>4 配置复制环境</h2><h3 id="4-1-配置server-1"><a href="#4-1-配置server-1" class="headerlink" title="4.1 配置server-1"></a>4.1 配置server-1</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cat</span> /etc/my.cnf  <span class="comment"># 加入以下配置</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Group Replication</span></span><br><span class="line">server-id=30</span><br><span class="line">slow_query_log=1</span><br><span class="line">long_query_time=1</span><br><span class="line">log_queries_not_using_indexes=1</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">slow_query_log_file=/var/log/mysql/slow-query.log</span></span><br><span class="line">slow_query_log_file=/home/mysql/slowlog_data/slow-query.log</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">如果SQL语句没有使用索引 该SQL会记录到慢查询日志</span></span><br><span class="line">log_queries_not_using_indexes=on</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">log-bin=/var/log/mysql/mgr-bin</span></span><br><span class="line">log-bin=/home/mysql/binlog_data/mgr-bin</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">relay-log=/var/log/mysql/mgr-relay</span></span><br><span class="line">relay-log=/home/mysql/relaylog_data/mgr-relay</span><br><span class="line">character_set_server=utf8mb4  </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">MGR使用乐观锁，所以官网建议隔离级别是RC，减少锁粒度</span></span><br><span class="line">transaction_isolation=READ-COMMITTED</span><br><span class="line">gtid_mode=on</span><br><span class="line">enforce_gtid_consistency=1    </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">强制GTID一致性</span></span><br><span class="line">binlog_format=row    </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">因为集群会在故障恢复时互相检查binlog的数据,所以需要记录下集群内其他服务器发过来已经执行过的binlog,按GTID来区分是否执行过.</span></span><br><span class="line">log-slave-updates=1   </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">binlog校验规则，5.6之后的高版本是CRC32，低版本都是NONE，但是MGR要求使用NONE</span></span><br><span class="line">binlog_checksum=NONE    </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">基于安全的考虑，MGR集群要求复制模式要改成slave记录记录到表中，不然就报错</span></span><br><span class="line">master_info_repository=TABLE</span><br><span class="line">relay_log_info_repository=TABLE</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">记录事务的算法,官网建议设置该参数使用 XXHASH64 算法</span></span><br><span class="line">transaction_write_set_extraction = XXHASH64</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">加载group_replication插件</span></span><br><span class="line">plugin_load_add=&#x27;group_replication.so&#x27;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">相当于此GROUP的名字，是UUID值，可以使用<span class="keyword">select</span> uuid()生成</span></span><br><span class="line">group_replication_group_name = &#x27;c44b3d6a-14a4-11ee-b2b8-fa163ea16a76&#x27;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">是否随服务器启动而自动启动组复制，不建议直接启动，怕故障恢复时有扰乱数据准确性的特殊情况</span></span><br><span class="line">group_replication_start_on_boot = OFF</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">本地MGR的IP地址和端口，host:port,是MGR的端口,不是数据库的端口</span></span><br><span class="line">group_replication_local_address = &#x27;server-1:33061&#x27;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">需要接受本MGR实例控制的服务器IP地址和端口，是MGR的端口，不是数据库的端口</span></span><br><span class="line">group_replication_group_seeds = &#x27;server-1:33061,server-2:33061,server-3:33061&#x27;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">开启引导模式，添加组成员，用于第一次搭建MGR或重建MGR的时候使用，只需要在集群内的其中一台开启</span></span><br><span class="line">group_replication_bootstrap_group = OFF</span><br><span class="line">group_replication_ip_allowlist=&quot;192.168.64.0/24&quot;</span><br><span class="line"></span><br><span class="line">- 重启mysql</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl restart mysqld</span></span><br><span class="line"></span><br><span class="line">- 建立复制账号并启动group replication</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">登录mysql</span></span><br><span class="line">mysql -uroot -p&#x27;T@Testxxxxx!&#x27;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">reset master;</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">关闭日志记录</span></span><br><span class="line">set SQL_LOG_BIN=0;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">创建用户（网段192.168.64的可以访问）</span></span><br><span class="line">CREATE USER &#x27;mgr_repl&#x27;@&#x27;192.168.64.%&#x27; IDENTIFIED WITH sha256_password BY &#x27;Mgr_repl@123456&#x27;;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">授权</span></span><br><span class="line">GRANT REPLICATION SLAVE ON *.* TO &#x27;mgr_repl&#x27;@&#x27;192.168.64.%&#x27;;</span><br><span class="line">GRANT BACKUP_ADMIN ON *.* TO &#x27;mgr_repl&#x27;@&#x27;192.168.64.%&#x27;;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">刷新权限</span></span><br><span class="line">flush privileges;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">开启日志</span></span><br><span class="line">set SQL_LOG_BIN=1;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">构建group replication集群</span></span><br><span class="line">change master to master_user=&#x27;mgr_repl&#x27;,master_password=&#x27;Mgr_repl@123456&#x27; for channel &#x27;group_replication_recovery&#x27;;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">设置group_replication_bootstrap_group为ON是为了标示以后加入集群的服务器以这台服务器为基准，以后加入的就不需要设置</span></span><br><span class="line">set global group_replication_bootstrap_group=ON;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">作为首个节点启动MGR集群</span></span><br><span class="line">start group_replication;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">关闭group_replication_bootstrap_group</span></span><br><span class="line">set global group_replication_bootstrap_group=OFF;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看mgr的状态，查询表performance_schema.replication_group_members</span></span><br><span class="line">select * from performance_schema.replication_group_members;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">group相关参数查看</span></span><br><span class="line">show variables like &#x27;group%&#x27;;</span><br></pre></td></tr></table></figure><h3 id="8-4-2-配置server-2"><a href="#8-4-2-配置server-2" class="headerlink" title="8.4.2 配置server-2"></a>8.4.2 配置server-2</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">复制server-1的配置文件/etc/my.cnf，修改server_id，group_replication_local_address</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cat</span> /etc/my.cnf  <span class="comment"># 加入以下配置</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Group Replication</span></span><br><span class="line">server-id=31</span><br><span class="line">slow_query_log=1</span><br><span class="line">long_query_time=1</span><br><span class="line">log_queries_not_using_indexes=1</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">slow_query_log_file=/var/log/mysql/slow-query.log</span></span><br><span class="line">slow_query_log_file=/home/mysql/slowlog_data/slow-query.log</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">如果SQL语句没有使用索引 该SQL会记录到慢查询日志</span></span><br><span class="line">log_queries_not_using_indexes=on</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">log-bin=/var/log/mysql/mgr-bin</span></span><br><span class="line">log-bin=/home/mysql/binlog_data/mgr-bin</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">relay-log=/var/log/mysql/mgr-relay</span></span><br><span class="line">relay-log=/home/mysql/relaylog_data/mgr-relay</span><br><span class="line">character_set_server=utf8mb4  </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">MGR使用乐观锁，所以官网建议隔离级别是RC，减少锁粒度</span></span><br><span class="line">transaction_isolation=READ-COMMITTED</span><br><span class="line">gtid_mode=on</span><br><span class="line">enforce_gtid_consistency=1    </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">强制GTID一致性</span></span><br><span class="line">binlog_format=row    </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">因为集群会在故障恢复时互相检查binlog的数据,所以需要记录下集群内其他服务器发过来已经执行过的binlog,按GTID来区分是否执行过.</span></span><br><span class="line">log-slave-updates=1   </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">binlog校验规则，5.6之后的高版本是CRC32，低版本都是NONE，但是MGR要求使用NONE</span></span><br><span class="line">binlog_checksum=NONE    </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">基于安全的考虑，MGR集群要求复制模式要改成slave记录记录到表中，不然就报错</span></span><br><span class="line">master_info_repository=TABLE</span><br><span class="line">relay_log_info_repository=TABLE</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">记录事务的算法,官网建议设置该参数使用 XXHASH64 算法</span></span><br><span class="line">transaction_write_set_extraction = XXHASH64</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">加载group_replication插件</span></span><br><span class="line">plugin_load_add=&#x27;group_replication.so&#x27;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">相当于此GROUP的名字，是UUID值，可以使用<span class="keyword">select</span> uuid();生成</span></span><br><span class="line">group_replication_group_name = &#x27;a172aae2-14a8-11ee-8c87-fa163e417d57&#x27;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">是否随服务器启动而自动启动组复制，不建议直接启动，怕故障恢复时有扰乱数据准确性的特殊情况</span></span><br><span class="line">group_replication_start_on_boot = OFF</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">本地MGR的IP地址和端口，host:port,是MGR的端口,不是数据库的端口</span></span><br><span class="line">group_replication_local_address = &#x27;server-2:33061&#x27;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">需要接受本MGR实例控制的服务器IP地址和端口，是MGR的端口，不是数据库的端口</span></span><br><span class="line">group_replication_group_seeds = &#x27;server-1:33061,server-2:33061,server-3:33061&#x27;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">开启引导模式，添加组成员，用于第一次搭建MGR或重建MGR的时候使用，只需要在集群内的其中一台开启</span></span><br><span class="line">group_replication_bootstrap_group = OFF</span><br><span class="line">group_replication_ip_allowlist=&quot;192.168.64.0/24&quot;</span><br><span class="line"></span><br><span class="line">- 重启mysql</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl restart mysqld</span></span><br><span class="line">set global super_read_only=OFF;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">登录mysql</span></span><br><span class="line">mysql -uroot -p</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">关闭日志记录</span></span><br><span class="line">set SQL_LOG_BIN=0;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">创建用户（网段192.168.64的可以访问）</span></span><br><span class="line">CREATE USER &#x27;mgr_repl&#x27;@&#x27;192.168.64.%&#x27; IDENTIFIED WITH sha256_password BY &#x27;Mgr_repl@123456&#x27;;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">alter USER <span class="string">&#x27;mgr_repl&#x27;</span>@<span class="string">&#x27;192.168.64.%&#x27;</span> IDENTIFIED WITH sha256_password BY <span class="string">&#x27;Mgr_repl@123456&#x27;</span>;  修改认证方式</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">授权</span></span><br><span class="line">GRANT REPLICATION SLAVE ON *.* TO &#x27;mgr_repl&#x27;@&#x27;192.168.64.%&#x27;;</span><br><span class="line">GRANT BACKUP_ADMIN ON *.* TO &#x27;mgr_repl&#x27;@&#x27;192.168.64.%&#x27;;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">刷新权限</span></span><br><span class="line">flush privileges;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">开启日志</span></span><br><span class="line">set SQL_LOG_BIN=1;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">构建group replication集群</span></span><br><span class="line">CHANGE REPLICATION SOURCE TO SOURCE_USER=&#x27;mgr_repl&#x27;, SOURCE_PASSWORD=&#x27;Mgr_repl@123456&#x27; FOR CHANNEL &#x27;group_replication_recovery&#x27;;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">加入MGR集群</span></span><br><span class="line">start group_replication;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看mgr的状态，查询表performance_schema.replication_group_members，发现已加入MGR群</span></span><br><span class="line">select * from performance_schema.replication_group_members;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="4-3-配置server-3"><a href="#4-3-配置server-3" class="headerlink" title="4.3 配置server-3"></a>4.3 配置server-3</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">复制server-1的配置文件/etc/my.cnf，修改server_id，group_replication_local_address</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cat</span> /etc/my.cnf  <span class="comment"># 加入以下配置</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Group Replication</span></span><br><span class="line">server-id=32</span><br><span class="line">slow_query_log=1</span><br><span class="line">long_query_time=1</span><br><span class="line">log_queries_not_using_indexes=1</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">slow_query_log_file=/var/log/mysql/slow-query.log</span></span><br><span class="line">slow_query_log_file=/home/mysql/slowlog_data/slow-query.log</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">如果SQL语句没有使用索引 该SQL会记录到慢查询日志</span></span><br><span class="line">log_queries_not_using_indexes=on</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">log-bin=/var/log/mysql/mgr-bin</span></span><br><span class="line">log-bin=/home/mysql/binlog_data/mgr-bin</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">relay-log=/var/log/mysql/mgr-relay</span></span><br><span class="line">relay-log=/home/mysql/relaylog_data/mgr-relay</span><br><span class="line">character_set_server=utf8mb4  </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">MGR使用乐观锁，所以官网建议隔离级别是RC，减少锁粒度</span></span><br><span class="line">transaction_isolation=READ-COMMITTED</span><br><span class="line">gtid_mode=on</span><br><span class="line">enforce_gtid_consistency=1    </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">强制GTID一致性</span></span><br><span class="line">binlog_format=row    </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">因为集群会在故障恢复时互相检查binlog的数据,所以需要记录下集群内其他服务器发过来已经执行过的binlog,按GTID来区分是否执行过.</span></span><br><span class="line">log-slave-updates=1   </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">binlog校验规则，5.6之后的高版本是CRC32，低版本都是NONE，但是MGR要求使用NONE</span></span><br><span class="line">binlog_checksum=NONE    </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">基于安全的考虑，MGR集群要求复制模式要改成slave记录记录到表中，不然就报错</span></span><br><span class="line">master_info_repository=TABLE</span><br><span class="line">relay_log_info_repository=TABLE</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">记录事务的算法,官网建议设置该参数使用 XXHASH64 算法</span></span><br><span class="line">transaction_write_set_extraction = XXHASH64</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">加载group_replication插件</span></span><br><span class="line">plugin_load_add=&#x27;group_replication.so&#x27;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">相当于此GROUP的名字，是UUID值，可以使用<span class="keyword">select</span> uuid();生成</span></span><br><span class="line">group_replication_group_name = &#x27;c44b3d6a-14a4-11ee-b2b8-fa163ea16a76&#x27;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">是否随服务器启动而自动启动组复制，不建议直接启动，怕故障恢复时有扰乱数据准确性的特殊情况</span></span><br><span class="line">group_replication_start_on_boot = OFF</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">本地MGR的IP地址和端口，host:port,是MGR的端口,不是数据库的端口</span></span><br><span class="line">group_replication_local_address = &#x27;server-3:33061&#x27;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">需要接受本MGR实例控制的服务器IP地址和端口，是MGR的端口，不是数据库的端口</span></span><br><span class="line">group_replication_group_seeds = &#x27;server-1:33061,server-2:33061,server-3:33061&#x27;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">开启引导模式，添加组成员，用于第一次搭建MGR或重建MGR的时候使用，只需要在集群内的其中一台开启</span></span><br><span class="line">group_replication_bootstrap_group = OFF</span><br><span class="line">group_replication_ip_allowlist=&quot;192.168.64.0/24&quot;</span><br><span class="line"></span><br><span class="line">- 重启mysql</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl restart mysqld</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">登录mysql</span></span><br><span class="line">mysql -uroot -p</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">关闭日志记录</span></span><br><span class="line">set SQL_LOG_BIN=0;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">创建用户（网段192.168.64的可以访问）</span></span><br><span class="line">CREATE USER &#x27;mgr_repl&#x27;@&#x27;192.168.64.%&#x27; IDENTIFIED WITH sha256_password BY &#x27;Mgr_repl@123456&#x27;;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">授权</span></span><br><span class="line">GRANT REPLICATION SLAVE ON *.* TO &#x27;mgr_repl&#x27;@&#x27;192.168.64.%&#x27;;</span><br><span class="line">GRANT BACKUP_ADMIN ON *.* TO &#x27;mgr_repl&#x27;@&#x27;192.168.64.%&#x27;;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">刷新权限</span></span><br><span class="line">flush privileges;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">开启日志</span></span><br><span class="line">set SQL_LOG_BIN=1;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">构建group replication集群</span></span><br><span class="line">change master to master_user=&#x27;mgr_repl&#x27;,master_password=&#x27;Mgr_repl@123456&#x27; for channel &#x27;group_replication_recovery&#x27;;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">加入MGR集群</span></span><br><span class="line">start group_replication;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看mgr的状态，查询表performance_schema.replication_group_members，发现已加入MGR群</span></span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash"><span class="keyword">select</span> * from performance_schema.replication_group_members;</span></span><br><span class="line">| group_replication_applier | 9bb8e998-14b7-11ee-xxxx | V002012011-mysql-01-32 |       3306 | ONLINE       | SECONDARY   | </span><br><span class="line">| group_replication_applier | d0751a15-14a7-11ee-xxxx | V002012011-mysql-01-31 |       3306 | ONLINE       | SECONDARY   | </span><br><span class="line">| group_replication_applier | f34eaaff-14a2-11ee-xxxx | V002012011-mysql-01-30 |       3306 | ONLINE       | PRIMARY     | </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql组复制集群之节点被逐出情况</title>
      <link href="/posts/4227980569.html"/>
      <url>/posts/4227980569.html</url>
      
        <content type="html"><![CDATA[<h1 id="mysql组复制集群之节点被逐出情况分析"><a href="#mysql组复制集群之节点被逐出情况分析" class="headerlink" title="mysql组复制集群之节点被逐出情况分析"></a>mysql组复制集群之节点被逐出情况分析</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql组复制集群之节点被逐出情况,可能是网络抖动导致，Mysql 8.0.13版本引入 集群网络延迟容错参数group_replication_member_expel_timeout 8.0.21版本默认为5,意味着在5秒钟的检测时间后如果该节点还是不正常，那会在等5秒钏，如果可疑成员还是不正常，超过这个时间将被驱逐。（在产生怀疑之前的最初5秒检测时间不计入该时间）。</span><br></pre></td></tr></table></figure><h1 id="恢复可疑成员的方法"><a href="#恢复可疑成员的方法" class="headerlink" title="恢复可疑成员的方法"></a>恢复可疑成员的方法</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">1. 备份数据库文件</span></span><br><span class="line">mysqldump -h 192.168.1.xx -P 3306 -uroot -pxxxx2023!  --single-transaction --master-data=2 --flush-logs --flush-privileges --events --routines --all-databases &gt; all_backup.sql</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">2.在可疑成员库上停止加入MGR集群</span></span><br><span class="line">stop group_replication;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">3. 备库重置gtid_executed</span></span><br><span class="line">reset master;</span><br><span class="line">show global variables like &#x27;%gtid%&#x27;;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">4. 设置可读写</span></span><br><span class="line">set global super_read_only=OFF;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">5. 恢复数据</span></span><br><span class="line">mysql  -h 192.168.1.xx -P 3306 -uroot -pxxxx2023!  &lt;/home/sql_bak/all_databases-202312212350.sql</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">6. 加入MGR集群</span></span><br><span class="line">start group_replication;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">7. 设置只读</span></span><br><span class="line">show global variables like &#x27;super%&#x27;;</span><br><span class="line">set global super_read_only=ON;  #加入MGR集群后为只读状态</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">8. 查看集群状态</span></span><br><span class="line">SELECT * FROM performance_schema.replication_group_members;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>efk收集nginx日志</title>
      <link href="/posts/989019294.html"/>
      <url>/posts/989019294.html</url>
      
        <content type="html"><![CDATA[<h1 id="1-收集nginx日志"><a href="#1-收集nginx日志" class="headerlink" title="1 收集nginx日志"></a>1 收集nginx日志</h1><h2 id="1-1-配置logstash"><a href="#1-1-配置logstash" class="headerlink" title="1.1 配置logstash"></a>1.1 配置logstash</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">cat logstash.conf </span><br><span class="line">input &#123;</span><br><span class="line">  beats &#123;</span><br><span class="line">    port =&gt; 5044</span><br><span class="line">    codec =&gt; json</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">filter &#123;</span><br><span class="line">  geoip &#123;</span><br><span class="line">    target =&gt; &quot;geoip&quot;</span><br><span class="line">    source =&gt; &quot;realip&quot;</span><br><span class="line">    add_field =&gt; [ &quot;[geoip][coordinates]&quot;, &quot;%&#123;[geoip][longitude]&#125;&quot; ]</span><br><span class="line">    add_field =&gt; [ &quot;[geoip][coordinates]&quot;, &quot;%&#123;[geoip][latitude]&#125;&quot; ]</span><br><span class="line">  &#125;</span><br><span class="line">  mutate &#123;</span><br><span class="line">    convert =&gt; [&quot;[geoip][coordinates]&quot;,&quot;float&quot;]</span><br><span class="line">    convert =&gt; [ &quot;visit_host&quot;,&quot;string&quot; ]</span><br><span class="line">    convert =&gt; [ &quot;status&quot;,&quot;integer&quot; ]</span><br><span class="line">    convert =&gt; [ &quot;size&quot;,&quot;integer&quot; ]</span><br><span class="line">    convert =&gt; [ &quot;upstreamtime&quot;,&quot;float&quot; ]</span><br><span class="line">    convert =&gt; [ &quot;req_time&quot;,&quot;float&quot; ]</span><br><span class="line">    remove_field =&gt; [ &quot;ecs&quot;,&quot;agent&quot;,&quot;host&quot;,&quot;cloud&quot;,&quot;@version&quot;,&quot;input&quot;,&quot;logs_type&quot; ]</span><br><span class="line">    # 去掉显示 geoip 显示的多余信息</span><br><span class="line">    remove_field =&gt; [&quot;[geoip][latitude]&quot;, &quot;[geoip][longitude]&quot;, &quot;[geoip][country_code]&quot;, &quot;[geoip][country_code2]&quot;, &quot;[geoip][country_code3]&quot;, &quot;[geoip][timezone]&quot;, &quot;[geoip][continent_code]&quot;, &quot;[geoip][region_code]</span><br><span class="line">&quot;]</span><br><span class="line">  &#125;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash">根据 http_user_agent来自动处理区分用户客户端系统与版本</span></span><br><span class="line">  useragent &#123;</span><br><span class="line">    source =&gt; &quot;user-agent&quot;</span><br><span class="line">    target =&gt; &quot;ua&quot;</span><br><span class="line">    # 过滤useragent没用的字段</span><br><span class="line">    remove_field =&gt; [ &quot;[ua][minor]&quot;,&quot;[ua][major]&quot;,&quot;[ua][build]&quot;,&quot;[ua][patch]&quot;,&quot;[ua][os_minor]&quot;,&quot;[ua][os_major]&quot; ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">output &#123;</span><br><span class="line">  elasticsearch &#123;</span><br><span class="line">    hosts =&gt; [&quot;http://192.168.1.37:30092&quot;]</span><br><span class="line">    index =&gt; &quot;logstash-nginx-log-domain-access-%&#123;+YYYY.MM&#125;&quot;</span><br><span class="line">    #user =&gt; &quot;elastic&quot;</span><br><span class="line">    #password =&gt; &quot;changeme&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim /usr/lib/systemd/system/logstash.service</span> </span><br><span class="line">[Unit] </span><br><span class="line">Description=logstash</span><br><span class="line"></span><br><span class="line">[Service] </span><br><span class="line">ExecStart=/usr/local/logstash-7.16.2/bin/logstash -f /usr/local/logstash-7.16.2/config/logstash.conf</span><br><span class="line">ExecReload=/bin/kill -HUP $MAINPID </span><br><span class="line">KillMode=process </span><br><span class="line">Restart=on-failure</span><br><span class="line"></span><br><span class="line">[Install] </span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line"></span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart logstash</span><br></pre></td></tr></table></figure><h2 id="18-2-配置filebeat"><a href="#18-2-配置filebeat" class="headerlink" title="18.2 配置filebeat"></a>18.2 配置filebeat</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">cat filebeat.yml  |grep -v &quot;^#&quot; |grep -v &quot;^$&quot; |grep -v &quot;^  #&quot; |grep -v &quot;^    #&quot;</span><br><span class="line">---</span><br><span class="line">filebeat.inputs:</span><br><span class="line">- type: log</span><br><span class="line">  enabled: true</span><br><span class="line">  paths:</span><br><span class="line">    - /var/log/nginx/domain/*.log</span><br><span class="line">  fields_under_root: true</span><br><span class="line">  tags: &quot;domain-access&quot;</span><br><span class="line"></span><br><span class="line">processors:</span><br><span class="line">  - add_host_metadata:</span><br><span class="line">      when.not.contains.tags: forwarded</span><br><span class="line">  - decode_json_fields:</span><br><span class="line">      fields: [&#x27;message&#x27;]</span><br><span class="line">      target: &quot;&quot; </span><br><span class="line">      overwrite_keys: false </span><br><span class="line">      process_array: false </span><br><span class="line">      max_depth: 1</span><br><span class="line">  - drop_fields:</span><br><span class="line">      #删除的多余字段</span><br><span class="line">      fields: [&quot;host&quot;, &quot;ecs&quot;, &quot;log&quot;, &quot;prospector&quot;, &quot;agent&quot;, &quot;input&quot;, &quot;beat&quot;, &quot;offset&quot;]</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">setup.template.settings:</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"> index.number_of_shards: 3</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"> index.number_of_replicas: 0</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">如果es索引模板已经存在，我们要修改 主副分片数 必须覆盖原来的模块</span></span><br><span class="line">setup.template.overwrite: true</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">设置自定义索引模块</span></span><br><span class="line">setup.template.name: &quot;nginx-log&quot;</span><br><span class="line">setup.template.pattern: &quot;nginx-log-*&quot;</span><br><span class="line"></span><br><span class="line">output.logstash:</span><br><span class="line">  hosts: [&quot;192.168.1.37:5044&quot;]</span><br><span class="line">---</span><br><span class="line">  </span><br><span class="line">/mnt/filebeat-7.16.2-linux-x86_64/filebeat -e -d /mnt/filebeat-7.16.2-linux-x86_64/filebeat.yml </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim /usr/lib/systemd/system/filebeat.service</span> </span><br><span class="line">[Unit] </span><br><span class="line">Description=filebeat</span><br><span class="line"></span><br><span class="line">[Service] </span><br><span class="line">ExecStart=/usr/local/filebeat-7.16.2/filebeat -e -c /usr/local/filebeat-7.16.2/filebeat.yml</span><br><span class="line">ExecReload=/bin/kill -HUP $MAINPID </span><br><span class="line">KillMode=process </span><br><span class="line">Restart=on-failure</span><br><span class="line"></span><br><span class="line">[Install] </span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line"></span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl start filebeat</span><br><span class="line">systemctl restart filebeat</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> efk </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 收集nginx日志 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Rocketmq集群ymal部署</title>
      <link href="/posts/251575927.html"/>
      <url>/posts/251575927.html</url>
      
        <content type="html"><![CDATA[<h1 id="1-Rocketmq集群部署"><a href="#1-Rocketmq集群部署" class="headerlink" title="1. Rocketmq集群部署"></a>1. Rocketmq集群部署</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RocketMQ 5.0 提出了自主切换架构。自主切换架构新增了一个 Controller 模块，负责选主。当某个 Broker Master 故障，会选择合适的 Broker Slave 提升为 Master，无需人工介入</span><br></pre></td></tr></table></figure><h3 id="1-1-CRDS部署"><a href="#1-1-CRDS部署" class="headerlink" title="1.1 CRDS部署"></a>1.1 CRDS部署</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cd</span> /rocketmq/operator</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl apply -f  crds/.</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl get crd</span></span><br></pre></td></tr></table></figure><h3 id="1-2-RocketMQ-Operator-部署"><a href="#1-2-RocketMQ-Operator-部署" class="headerlink" title="1.2 RocketMQ Operator 部署"></a>1.2 RocketMQ Operator 部署</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">/rocketmq/operator</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl apply -f .</span></span><br></pre></td></tr></table></figure><h3 id="1-3-配置-Name-Service-CR–不执行"><a href="#1-3-配置-Name-Service-CR–不执行" class="headerlink" title="1.3 配置 Name Service CR–不执行"></a>1.3 配置 Name Service CR–不执行</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">配置 Name Service CR。Name Service CR 配置较为重要的字段有两个，其一为 size，即需要部署了多少个 NameServer 节点，其二为 hostNetwork ，默认 false ，此时客户端只能在 Kubernetes 集群内与 NameServer 进行通讯。如果Kubernetes 集群外的客户端需要访问到 RocketMQ 集群，需要将 hostNetwork 配为 true ，NameServer 的接入点需要配置为 NameServer 所在的 Node IP</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cd</span> /rocketmq</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl apply -f nameservices/rocketmq_nameservice_cr.yaml</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl get NameService -n jwgod-test</span></span><br></pre></td></tr></table></figure><h3 id="1-4-配置-Controller-CR–不执行"><a href="#1-4-配置-Controller-CR–不执行" class="headerlink" title="1.4 配置 Controller CR–不执行"></a>1.4 配置 Controller CR–不执行</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">配置 Controller CR。注意 size 需要配置为奇数。Controller 的数据需要持久化存储，可以利用云服务提供商提供的 StorageClass，无需自行维护存储。如果希望配置自己的存储</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cd</span> /rocketmq</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl apply -f controller/rocketmq_controller_cr.yaml</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl get Controller -n jwgod-test</span></span><br></pre></td></tr></table></figure><h3 id="1-5-配置-Broker-CR–不执行"><a href="#1-5-配置-Broker-CR–不执行" class="headerlink" title="1.5 配置 Broker CR–不执行"></a>1.5 配置 Broker CR–不执行</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">配置 Broker CR。示例中配置了两组 Broker，每组有一个备节点，同时将 clusterMode 设置为 Controller，启动自主切换架构集群</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cd</span> /rocketmq</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl apply -f  broker/rocketmq_broker_cr.yaml</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl get Broker -n jwgod-test</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">准备好以上三个模块的相关配置文件之后，执行 kubectl apply 命令提交给 Kubernetes 集群。其余的部署、运维等动作均交由 RocketMQ Operator 自动完成。</span><br><span class="line">成功部署后，可以通过 kubectl get po 命令查看部署的Pod。可以看到部署了4个Broker节点、Controller 和 NameSever 节点各3个。</span><br><span class="line">进入一个 Broker Pod，可以使用 clusterlist 命令查看集群状态，可以看到集群有两组 Broker，每一组各有一主（BID=0）一备</span><br></pre></td></tr></table></figure><h3 id="1-6-配置NS-Controller-Broker"><a href="#1-6-配置NS-Controller-Broker" class="headerlink" title="1.6 配置NS Controller Broker"></a>1.6 配置NS Controller Broker</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cd</span> /rocketmq</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl apply -f  cluster_rocketmq/rocketmq_v1alpha1_rocketmq_cluster.yaml</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl get NameService -n jwgod-test</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl get Controller -n jwgod-test</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl get Broker -n jwgod-test</span></span><br></pre></td></tr></table></figure><h3 id="1-7-rocketmq-dashboard"><a href="#1-7-rocketmq-dashboard" class="headerlink" title="1.7 rocketmq-dashboard"></a>1.7 rocketmq-dashboard</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cd</span> /rocketmq</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubectl apply -f  mqdashboard/rocketmq-dashboard.yaml</span></span><br></pre></td></tr></table></figure><h1 id="2-yaml文件下载地址"><a href="#2-yaml文件下载地址" class="headerlink" title="2. yaml文件下载地址"></a>2. yaml文件下载地址</h1><p><a href="https://download.csdn.net/download/qq_20339579/88800143">Rockermq yaml 部署文件下载</a></p>]]></content>
      
      
      <categories>
          
          <category> 容器 </category>
          
          <category> Rocketmq </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Rocketmq </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Redis集群部署</title>
      <link href="/posts/2223903158.html"/>
      <url>/posts/2223903158.html</url>
      
        <content type="html"><![CDATA[<h1 id="1-Redis集群部署-5-0-14"><a href="#1-Redis集群部署-5-0-14" class="headerlink" title="1. Redis集群部署 (5.0.14)"></a>1. Redis集群部署 (5.0.14)</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Redis 集群的优势:</span><br><span class="line">自动分割数据到不同的节点上.</span><br><span class="line">整个集群的部分节点失败或者不可达的情况下能够继续处理命令.</span><br><span class="line">Redis 集群的数据分片</span><br><span class="line">Redis 集群没有使用一致性hash, 而是引入了哈希槽的概念.</span><br><span class="line">Redis 集群有16384个哈希槽,每个key通过CRC16校验后对16384取模来决定放置哪个槽.</span><br><span class="line">集群的每个节点负责一部分hash槽,举个例子,比如当前集群有3个节点,那么:</span><br><span class="line">节点 A 包含 0 到 5500号哈希槽.</span><br><span class="line">节点 B 包含5501 到 11000 号哈希槽.</span><br><span class="line">节点 C 包含11001 到 16384号哈希槽.</span><br><span class="line">这种结构很容易添加或者删除节点. 比如如果我想新添加个节点D, 我需要从节点 A, B, C中得部分槽到D上.</span><br><span class="line">如果我想移除节点A,需要将A中得槽移到B和C节点上,然后将没有任何槽的A节点从集群中移除即可.</span><br><span class="line">由于从一个节点将哈希槽移动到另一个节点并不会停止服务,所以无论添加删除或者改变某个节点</span><br><span class="line">的哈希槽的数量都不会造成集群不可用的状态.</span><br></pre></td></tr></table></figure><h3 id="1-1-开启防火墙"><a href="#1-1-开启防火墙" class="headerlink" title="1.1 开启防火墙"></a>1.1 开启防火墙</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 开启防火墙</span></span></span><br><span class="line">systemctl status firewalld</span><br><span class="line">systemctl start firewalld</span><br><span class="line">firewall-cmd --reload</span><br><span class="line">firewall-cmd --list-all</span><br><span class="line">firewall-cmd --state</span><br><span class="line"></span><br><span class="line">firewall-cmd --zone=public --add-port=7000/tcp --permanent</span><br><span class="line">firewall-cmd --zone=public --add-port=7001/tcp --permanent</span><br><span class="line">firewall-cmd --zone=public --add-port=17000/tcp --permanent</span><br><span class="line">firewall-cmd --zone=public --add-port=17001/tcp --permanent</span><br></pre></td></tr></table></figure><h3 id="1-2-安装redis"><a href="#1-2-安装redis" class="headerlink" title="1.2 安装redis"></a>1.2 安装redis</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">- 安装路径：/usr/local/redis5-cluster</span><br><span class="line">- 配置文件：/usr/local/redis5-cluster/conf</span><br><span class="line"></span><br><span class="line">- 创建数据目录。</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">mkdir</span> -pv /usr/local/redis5-cluster/redis-data</span></span><br><span class="line">- 创建日志目录。</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">mkdir</span> -pv /usr/local/redis5-cluster/redis-logs</span></span><br><span class="line">- 创建配置目录。</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">mkdir</span> -pv /usr/local/redis5-cluster/conf</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">解压</span></span><br><span class="line">tar xzf redis-5.0.8.tar.gz</span><br><span class="line">make MALLOC=libc</span><br><span class="line">make install PREFIX=/usr/local/redis5</span><br><span class="line"></span><br><span class="line">cd /usr/local/redis5</span><br><span class="line">mkdir /usr/local/redis5/&#123;bin,logs,conf,redis_data&#125;</span><br><span class="line">cp redis-check-aof redis-benchmark redis-check-rdb redis-cli redis-sentinel redis-server redis-trib.rb /usr/local/redis5/bin/</span><br><span class="line">cp /home/software/redis-5.0.14/redis.conf  /usr/local/redis5/conf/</span><br></pre></td></tr></table></figure><h3 id="1-3-配置文件"><a href="#1-3-配置文件" class="headerlink" title="1.3 配置文件"></a>1.3 配置文件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">需要修改的redis的配置文件,配置文件示例</span></span><br><span class="line">---其内容为：</span><br><span class="line">bind 192.168.1.30</span><br><span class="line">requirepass 123456</span><br><span class="line">protected-mode no</span><br><span class="line">port 7000 #需要修改端口。</span><br><span class="line">tcp-backlog 511</span><br><span class="line">timeout 0</span><br><span class="line">tcp-keepalive 300</span><br><span class="line">daemonize yes</span><br><span class="line">supervised no</span><br><span class="line">pidfile /usr/local/redis5-cluster/bin/redis_7000.pid #需要修改端口</span><br><span class="line">loglevel notice </span><br><span class="line">logfile /usr/local/redis5-cluster/redis-logs/redis-7000.log #需要修改端口</span><br><span class="line">databases 26</span><br><span class="line">always-show-logo yes</span><br><span class="line">save 900 1</span><br><span class="line">save 300 10</span><br><span class="line">save 60 10000</span><br><span class="line">stop-writes-on-bgsave-error yes</span><br><span class="line">rdbcompression yes</span><br><span class="line">rdbchecksum yes</span><br><span class="line">dbfilename dump-7000.rdb #需要修改端口</span><br><span class="line">dir /usr/local/redis5-cluster/redis_data/</span><br><span class="line">replica-serve-stale-data yes</span><br><span class="line">replica-read-only yes</span><br><span class="line">repl-diskless-sync no</span><br><span class="line">repl-diskless-sync-delay 5</span><br><span class="line">repl-disable-tcp-nodelay no</span><br><span class="line">replica-priority 100</span><br><span class="line">lazyfree-lazy-eviction no</span><br><span class="line">lazyfree-lazy-expire no</span><br><span class="line">lazyfree-lazy-server-del no</span><br><span class="line">replica-lazy-flush no</span><br><span class="line">appendonly yes</span><br><span class="line">appendfilename &quot;appendonly-7000.aof&quot; #需要修改端口</span><br><span class="line">appendfsync everysec</span><br><span class="line">no-appendfsync-on-rewrite no</span><br><span class="line">auto-aof-rewrite-percentage 100</span><br><span class="line">auto-aof-rewrite-min-size 64mb</span><br><span class="line">aof-load-truncated yes</span><br><span class="line">aof-use-rdb-preamble yes</span><br><span class="line">lua-time-limit 5000</span><br><span class="line">cluster-enabled yes</span><br><span class="line">cluster-config-file redis-7000.conf #需要修改端口</span><br><span class="line">slowlog-log-slower-than 10000</span><br><span class="line">slowlog-max-len 128</span><br><span class="line">latency-monitor-threshold 0</span><br><span class="line">notify-keyspace-events &quot;&quot;</span><br><span class="line">hash-max-ziplist-entries 512</span><br><span class="line">hash-max-ziplist-value 64</span><br><span class="line">list-max-ziplist-size -2</span><br><span class="line">list-compress-depth 0</span><br><span class="line">set-max-intset-entries 512</span><br><span class="line">zset-max-ziplist-entries 128</span><br><span class="line">zset-max-ziplist-value 64</span><br><span class="line">hll-sparse-max-bytes 3000</span><br><span class="line">stream-node-max-bytes 4096</span><br><span class="line">stream-node-max-entries 100</span><br><span class="line">activerehashing yes</span><br><span class="line">client-output-buffer-limit normal 0 0 0</span><br><span class="line">client-output-buffer-limit replica 256mb 64mb 60</span><br><span class="line">client-output-buffer-limit pubsub 32mb 8mb 60</span><br><span class="line">hz 10</span><br><span class="line">dynamic-hz yes</span><br><span class="line">aof-rewrite-incremental-fsync yes</span><br><span class="line">rdb-save-incremental-fsync yes</span><br></pre></td></tr></table></figure><h3 id="1-4-部署过程"><a href="#1-4-部署过程" class="headerlink" title="1.4 部署过程"></a>1.4 部署过程</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">部署包</span></span><br><span class="line">/usr/local/redis5-cluster/redis-7000</span><br><span class="line">/usr/local/redis5-cluster/redis-7001</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">启动redis服务</span></span><br><span class="line">/usr/local/redis5-cluster/redis-7000/bin/redis-server /usr/local/redis5-cluster/redis-7000/conf/redis-7000.conf</span><br><span class="line">/usr/local/redis5-cluster/redis-7001/bin/redis-server /usr/local/redis5-cluster/redis-7001/conf/redis-7001.conf</span><br><span class="line"></span><br><span class="line">ps -ef |grep redis |grep redis5 |grep 7001 |awk &#x27;&#123;print $2&#125;&#x27;|xargs kill -9</span><br></pre></td></tr></table></figure><h3 id="1-5-创建集群"><a href="#1-5-创建集群" class="headerlink" title="1.5 创建集群"></a>1.5 创建集群</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">参数解释</span></span><br><span class="line">--replicas 1 表示我们希望为集群中的每个主节点创建一个从节点</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">创建集群</span></span><br><span class="line">echo yes| /usr/local/redis5-cluster/redis-7000/bin/redis-cli -h 192.168.1.30 -a 123456 -p 7000  --cluster create 192.168.1.30:7000 192.168.1.30:7001 192.168.1.31:7000 192.168.1.31:7001 192.168.1.32:7000 192.168.1.32:7001 --cluster-replicas 1 --cluster-yes</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">集群验证</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">/usr/local/redis5-cluster/redis-7000/bin/redis-cli -h 192.168.1.30  -p 7000</span></span><br><span class="line">192.168.1.30:7000&gt; auth 123456</span><br><span class="line">OK</span><br><span class="line">192.168.1.30:7000&gt; cluster nodes</span><br><span class="line">85eaca64000d30f45a67536c53d2dc66adfab08b 192.168.1.32:7000@17000 master - 0 1688714888000 5 connected 10923-16383</span><br><span class="line">7da8c524474d3ea7db335000c694c812afebd57c 192.168.1.32:7001@17001 slave 7bd394bfe5d692c5e8df93ed6721b8020fd17e5e 0 1688714889289 6 connected</span><br><span class="line">63d1e6e9eaa1cf89d08db90e75af6172743e15ff 192.168.1.31:7001@17001 slave 193a4ffd4e5bb2f541e925db3119f9c81b8fb21c 0 1688714888000 4 connected</span><br><span class="line">193a4ffd4e5bb2f541e925db3119f9c81b8fb21c 192.168.1.30:7000@17000 myself,master - 0 1688714888000 1 connected 0-5460</span><br><span class="line">7bd394bfe5d692c5e8df93ed6721b8020fd17e5e 192.168.1.31:7000@17000 master - 0 1688714890000 3 connected 5461-10922</span><br><span class="line">ce22d2cc1dbbe1874804fcfeb74bf14233276223 192.168.1.30:7001@17001 slave 85eaca64000d30f45a67536c53d2dc66adfab08b 0 1688714890292 5 connected</span><br></pre></td></tr></table></figure><h1 id="2-运维管理命令"><a href="#2-运维管理命令" class="headerlink" title="2. 运维管理命令"></a>2. 运维管理命令</h1><h4 id="2-1-命令"><a href="#2-1-命令" class="headerlink" title="2.1  命令"></a>2.1  命令</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">- 安全关闭</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">/usr/local/redis5-cluster/redis-7000/bin/redis-cli shutdown save</span></span><br><span class="line"></span><br><span class="line">- 不备份关闭</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">/usr/local/redis5-cluster/redis-7000/bin/redis-cli shutdown nosave</span></span><br><span class="line"></span><br><span class="line">- 后台运⾏备份不阻塞主进程/save异步保存到硬盘 堵塞主进程</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">127.0.0.1:6379[1]&gt; bgsave</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Background saving started</span></span><br><span class="line"></span><br><span class="line">- aof备份⽅式-异步执⾏⼀个aof⽂件重写操作</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">127.0.0.1:6379[1]&gt; BGREWRITEAOF</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Background append only file rewriting started</span></span><br><span class="line"></span><br><span class="line">- 查看客户端连接情况</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">127.0.0.1:6379&gt; client list</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">age: 客户端存活的秒数</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">idle: 客户端空闲的秒数</span></span><br><span class="line"></span><br><span class="line">- kill掉⽐较损耗资源的连接</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">redis 10.10.1.173:6379&gt; client <span class="built_in">kill</span> 10.10.0.46:31574</span></span><br><span class="line"></span><br><span class="line">- 设置客户端标识-标记当前链接名</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">127.0.0.1:6379&gt; client setname jesse</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">127.0.0.1:6379&gt; client list</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">id</span>=127236 addr=127.0.0.1:39330 fd=6 name=jesse .....</span></span><br><span class="line"></span><br><span class="line">- 清空当前的数据库flushdb/flushall清空所有的数据库</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">127.0.0.1:6379[2]&gt; flushdb</span></span><br><span class="line"></span><br><span class="line">- 查看当前的roles</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">127.0.0.1:6379[2]&gt; ROLE</span></span><br><span class="line"> 1) &quot;master&quot;</span><br><span class="line"> 2) (integer) 0</span><br><span class="line"> 3) (empty list or set)</span><br><span class="line"> </span><br><span class="line">- 查看配置信息</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">127.0.0.1:6379[2]&gt; config get <span class="built_in">timeout</span></span></span><br><span class="line"> 1) &quot;timeout&quot;</span><br><span class="line"> 2) &quot;300&quot;</span><br><span class="line"> 127.0.0.1:6379[2]&gt; config get dbfilename</span><br><span class="line"> 1) &quot;dbfilename&quot;</span><br><span class="line"> 2) &quot;6379.rdb&quot;</span><br><span class="line"> </span><br><span class="line">- 在线修改参数</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">127.0.0.1:6379[2]&gt; config <span class="built_in">set</span> <span class="built_in">timeout</span> 301</span></span><br></pre></td></tr></table></figure><h4 id="2-2-持久化运维"><a href="#2-2-持久化运维" class="headerlink" title="2.2  持久化运维"></a>2.2  持久化运维</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">rdb/aof</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">1.配置⽂件修改</span></span><br><span class="line"> save 900 1</span><br><span class="line"> save 300 10</span><br><span class="line"> save 60 10000</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">2.命令⾏执⾏保存</span></span><br><span class="line"> save 前台执⾏ 堵塞主线程其它读写操作</span><br><span class="line"> bgsave 后台执⾏ 不堵塞读写操作</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">3.⽇志⽂件追加持久化</span></span><br><span class="line"> appendonly yes</span><br><span class="line"> appendfilename &quot;appendonly.aof&quot;</span><br><span class="line"> appendfsync everysec</span><br><span class="line"> 执⾏命令：</span><br><span class="line"> bgrewriteaof</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">优点：每秒刷新⼀次磁盘 最多丢失1s数据</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">缺点：相同的数据集来说 AOF⽂件的体积通常要⼤于RDB⽂件的体积</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> Redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>红烧酱猪蹄</title>
      <link href="/posts/2127896466.html"/>
      <url>/posts/2127896466.html</url>
      
        <content type="html"><![CDATA[<div style="position: relative; padding-bottom: 56.25%; height: 0;">  <video src="https://jwgod-blog.oss-cn-beijing.aliyuncs.com/video/%E7%BE%8E%E9%A3%9F%E8%A7%86%E9%A2%91/%E7%BA%A2%E7%83%A7%E9%85%B1%E8%82%98%E5%AD%90_jwgod_x264.mp4" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%;" controls>    Your browser does not support the video tag.  </video></div>]]></content>
      
      
      <categories>
          
          <category> 视频 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Videos </tag>
            
            <tag> Movie </tag>
            
            <tag> Food </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx访问日志统计一周内的访问次数</title>
      <link href="/posts/3714048070.html"/>
      <url>/posts/3714048070.html</url>
      
        <content type="html"><![CDATA[<h2 id="nginx-access-wc"><a href="#nginx-access-wc" class="headerlink" title="nginx_access_wc"></a>nginx_access_wc</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/sh</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">获取当前日期</span></span><br><span class="line">beg_time=$(date -d &quot;-7 day&quot; +%d/%b/%Y)</span><br><span class="line">end_time=$(date +%d/%b/%Y)</span><br><span class="line">sum_cont=0</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">文件路径</span></span><br><span class="line">FILE=&quot;/home/script/nginx_access_wc.log&quot;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">读取文件的最后一行</span></span><br><span class="line">last_line=$(tail -n 1 &quot;$FILE&quot;)</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">提取最后一行中的数字</span></span><br><span class="line">number=$(echo &quot;$last_line&quot; |awk &#x27;&#123;print $2&#125;&#x27; | grep -oE &#x27;[0-9]+&#x27;)</span><br><span class="line"></span><br><span class="line">echo &quot;-----------------------------------------&quot;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">用户数据</span></span><br><span class="line">user_count=`/usr/bin/mysql -h 192.168.1.xx -uxxxx -pxxxx@xxxx! -e &quot;select * from store.usertbl;&quot; |wc -l`</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">本周新增用户</span></span><br><span class="line">start_time=$(date -d &quot;-7 day&quot; +&quot;%Y-%m-%d 00:00:00&quot;)</span><br><span class="line">stop_time=$(date -d &quot;-1 day&quot; +&quot;%Y-%m-%d 23:59:59&quot;)</span><br><span class="line">add_user_count=$(/usr/bin/mysqlbinlog --start-datetime=&quot;$&#123;start_time&#125;&quot; --stop-datetime=&quot;$&#123;stop_time&#125;&quot; /var/lib/mysql/binlog.000001 -vv | grep -w &quot;### INSERT INTO&quot; | wc -l)</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">新增用户的日期</span></span><br><span class="line">add_user_time=$(/usr/bin/mysqlbinlog --start-datetime=&quot;$&#123;start_time&#125;&quot; --stop-datetime=&quot;$&#123;stop_time&#125;&quot; /var/lib/mysql/binlog.000001 -vv |grep -w &quot;Write_rows&quot; |awk &#x27;&#123;print $1&#125;&#x27; |sed &#x27;s/#/20/g&#x27;)</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">循环输出一周内的日期</span></span><br><span class="line">for ((i=7; i&gt;0; i--))</span><br><span class="line">do</span><br><span class="line">  current_date=$(date -d &quot;-$i day&quot; +%d/%b/%Y)</span><br><span class="line">  day_count=$(grep -E &quot;GET / HTTP/1.1&quot; /usr/local/nginx-1.20.2/logs/access.log |grep $current_date |awk -F &quot;:&quot; &#x27;&#123;print $2&quot;:&quot;$3&quot;:&quot;$4&#125;&#x27;|awk &#x27;$1&gt;=&quot;00:00:00&quot; &amp;&amp; $1&lt;=&quot;23:59:59&quot;&#x27; |wc -l)</span><br><span class="line">  sum_cont=$(($sum_cont + $day_count))         </span><br><span class="line">done</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">总浏览量</span></span><br><span class="line">ALL_COUNT=$(($&#123;number&#125; + $&#123;sum_cont&#125;))</span><br><span class="line"></span><br><span class="line">printf &quot;本次统计开始时间: $(date -d &quot;-7 day&quot; +%Y-%m-%d) 00:00:00\n&quot;</span><br><span class="line">printf &quot;本次统计结束时间: $(date -d &quot;-1 day&quot; +%Y-%m-%d) 23:59:59\n&quot;</span><br><span class="line">printf &quot;本周新增用户信息数: $&#123;add_user_count&#125;\n&quot;</span><br><span class="line">printf &quot;本周新增用户日期: $&#123;add_user_time&#125;\n&quot;</span><br><span class="line">printf &quot;用户信息收集总数据: $(($&#123;user_count&#125;-3))\n&quot;</span><br><span class="line">printf &quot;当周浏览量（上周日[00:00:00]到本周六[23:59:59]): $&#123;sum_cont&#125;\n&quot;</span><br><span class="line">printf &quot;总浏览量(截止到本周六[23:59:59]): $&#123;ALL_COUNT&#125;\n&quot;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 脚本 </category>
          
          <category> Shell </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Shell </tag>
            
            <tag> nginx访问日志 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql备份脚本一</title>
      <link href="/posts/2346358873.html"/>
      <url>/posts/2346358873.html</url>
      
        <content type="html"><![CDATA[<h2 id="mysql备份脚本"><a href="#mysql备份脚本" class="headerlink" title="mysql备份脚本"></a>mysql备份脚本</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">#### by jwgod 20230928</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">#### mysql全库/单库备份</span></span></span><br><span class="line"></span><br><span class="line">day=`date +&#x27;%Y-%m-%d&#x27;`</span><br><span class="line">anynowtime=&quot;date +&#x27;%Y-%m-%d %H:%M:%S&#x27;&quot;</span><br><span class="line">NOW=&quot;echo [\`$anynowtime\`][PID:$$]&quot;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">#### 可在脚本开始运行时调用，打印当时的时间戳及PID。</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="keyword">function</span> job_start</span></span><br><span class="line">job_start()</span><br><span class="line">&#123;</span><br><span class="line">   echo &quot;`eval $NOW` job_start&quot;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">#### 可在脚本执行成功的逻辑处调用，打印当时的时间戳及PID。</span></span></span><br><span class="line">job_success()</span><br><span class="line">&#123;</span><br><span class="line">    MSG=&quot;$*&quot;</span><br><span class="line">    echo &quot;`eval $NOW` job_success:[$MSG]&quot;</span><br><span class="line">    exit 0</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">#### 可在脚本执行失败的逻辑分支处调用，打印当时的时间戳及PID。</span></span></span><br><span class="line">job_fail()</span><br><span class="line">&#123;</span><br><span class="line">    MSG=&quot;$*&quot;</span><br><span class="line">    echo &quot;`eval $NOW` job_fail:[$MSG]&quot;</span><br><span class="line">    exit 1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">job_start</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">#### 可在此处开始编写您的脚本逻辑代码</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">设置mysql的登录用户名和密码(根据实际情况填写)</span></span><br><span class="line">mysql_user=&quot;root&quot;</span><br><span class="line">mysql_password=&quot;xxxx@xxxx!&quot;</span><br><span class="line">mysql_host=&quot;192.168.1.xx&quot;</span><br><span class="line">mysql_port=&quot;3306&quot;</span><br><span class="line">mysql_charset=&quot;utf8mb4&quot;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">备份文件存放地址(根据实际情况填写)</span></span><br><span class="line">backup_location=/home/sql_bak/`date +%Y%m%d%H`</span><br><span class="line"></span><br><span class="line">test -d &quot;$backup_location&quot; || mkdir -p $backup_location</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">是否删除过期数据</span></span><br><span class="line">expire_backup_delete=&quot;ON&quot;</span><br><span class="line">expire_days=30</span><br><span class="line">backup_time=`date +%Y%m%d%H%M`</span><br><span class="line">backup_dir=$backup_location</span><br><span class="line">welcome_msg=&quot;Welcome to use MySQL backup tools!&quot;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">判断mysql实例是否正常运行</span></span><br><span class="line">mysql_ps=`ps -ef |grep mysql |wc -l`</span><br><span class="line">mysql_listen=`netstat -an |grep LISTEN |grep $mysql_port|wc -l`</span><br><span class="line">if [ [$mysql_ps == 0] -o [$mysql_listen == 0] ]; then</span><br><span class="line">        echo &quot;ERROR:MySQL is not running! backup stop!&quot;</span><br><span class="line">        exit</span><br><span class="line">else</span><br><span class="line">        echo $welcome_msg</span><br><span class="line">fi</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">#### 删除30天之前备份</span></span></span><br><span class="line">del_bak()</span><br><span class="line">&#123;</span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash">删除过期数据</span></span><br><span class="line">  if [ &quot;$expire_backup_delete&quot; == &quot;ON&quot; -a  &quot;$backup_location&quot; != &quot;&quot; ];then</span><br><span class="line">    `find $backup_location -type f -mtime +$expire_days | xargs rm -rf`</span><br><span class="line">    if [ $? -eq 0 ] ; then</span><br><span class="line">      echo &quot;Expired backup data delete complete!&quot;</span><br><span class="line">      job_success &quot;$*&quot;</span><br><span class="line">    else</span><br><span class="line">      job_fail &quot;$*&quot;</span><br><span class="line">    fi  </span><br><span class="line">  fi</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">#### 全库备份</span></span></span><br><span class="line">all_bak()</span><br><span class="line">&#123;</span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash"><span class="comment"># 备份指定数据库中数据(此处假设数据库是all)</span></span></span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash">mysqldump -h<span class="variable">$mysql_host</span> -P<span class="variable">$mysql_port</span> -u<span class="variable">$mysql_user</span> -p<span class="variable">$mysql_password</span>  --all-databases --triggers --routines--events &gt; <span class="variable">$backup_dir</span>/mysql_all_backup-<span class="variable">$backup_time</span>.sql</span></span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash">flag=`<span class="built_in">echo</span> $?`</span></span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash"><span class="keyword">if</span> [ <span class="variable">$flag</span> == <span class="string">&quot;0&quot;</span> ];<span class="keyword">then</span></span></span><br><span class="line">    # zip -jr $backup_dir/mysql_all_backup-$backup_time.zip $backup_dir/ --exclude &quot;*.zip&quot;</span><br><span class="line">    # #打包成功后删除sql文件</span><br><span class="line">    # if [ $? = 0 ]; then</span><br><span class="line">      # rm -rf $backup_dir/mysql_all_backup-$backup_time.sql</span><br><span class="line">    # fi</span><br><span class="line">    # echo &quot;database mysql_backup success backup to $backup_dir/mysql_backup-$backup_time.sql&quot;</span><br><span class="line">    # job_success &quot;$*&quot;</span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash"><span class="keyword">else</span></span></span><br><span class="line">    # echo &quot;database mysql_backup backup fail!&quot;</span><br><span class="line">    # job_fail &quot;$*&quot;</span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash"><span class="keyword">fi</span></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash">备份的数据库数组</span></span><br><span class="line">  db_arr=$(echo &quot;show databases;&quot; | mysql -h$mysql_host -P$mysql_port -u$mysql_user -p$mysql_password |grep -v &quot;sys&quot;|grep -v &quot;Database&quot;|grep -v &quot;information_schema&quot; |grep -v &quot;performance_schema&quot;)</span><br><span class="line">  echo &quot;show databases： $db_arr&quot;</span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash">不需要备份的单例数据库</span></span><br><span class="line">  nodeldb=&quot;test&quot;</span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash">循环备份</span></span><br><span class="line">  for dbname in $&#123;db_arr&#125;</span><br><span class="line">  do</span><br><span class="line">   if [ $dbname != $nodeldb ]; then</span><br><span class="line">     echo &quot;mysqldump -h$mysql_host -P$mysql_port -u$mysql_user -p$mysql_password $dbname --master-data &gt; $backup_dir/mysql_$&#123;dbname&#125;_backup-$backup_time.sql&quot;</span><br><span class="line">     mysqldump -h$mysql_host -P$mysql_port -u$mysql_user -p$mysql_password $dbname --master-data &gt; $backup_dir/mysql_$&#123;dbname&#125;_backup-$backup_time.sql</span><br><span class="line">     flag=`echo $?`</span><br><span class="line">     if [ $flag == &quot;0&quot; ];then</span><br><span class="line">       # tar打包所有的sql文件</span><br><span class="line">       #tar -zcPpf  $backup_dir/mysql_$&#123;dbname&#125;_backup-$backup_time.zip --warning=no-file-changed --directory /   $backup_dir</span><br><span class="line">       zip -jr $backup_dir/mysql_$&#123;dbname&#125;_backup-$backup_time.zip $backup_dir/ --exclude &quot;*.zip&quot;</span><br><span class="line">       #打包成功后删除sql文件</span><br><span class="line">       if [ $? = 0 ]; then</span><br><span class="line">         rm -rf $backup_dir/mysql_$&#123;dbname&#125;_backup-$backup_time.sql</span><br><span class="line">       fi</span><br><span class="line">       echo &quot;database mysql_backup success backup to $backup_dir/mysql_$&#123;dbname&#125;_backup-$backup_time.sql&quot;</span><br><span class="line">       MSG=&quot;$*&quot;</span><br><span class="line">       echo &quot;`eval $NOW` job_success:[$MSG]&quot;</span><br><span class="line">     else</span><br><span class="line">       echo &quot;database mysql_backup backup fail!&quot;</span><br><span class="line">       job_fail &quot;$*&quot;</span><br><span class="line">     fi</span><br><span class="line">   fi</span><br><span class="line">  done</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">#### 单库备份</span></span></span><br><span class="line">one_bak()</span><br><span class="line">&#123;</span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash">备份指定数据库中数据(此处假设数据库是hseysh)</span></span><br><span class="line">  mysqldump -h$mysql_host -P$mysql_port -u$mysql_user -p$mysql_password $1 --master-data &gt; $backup_dir/mysql_$1_backup-$backup_time.sql</span><br><span class="line"><span class="meta prompt_">  #</span><span class="language-bash"><span class="built_in">echo</span> <span class="string">&quot;mysqldump -h<span class="variable">$mysql_host</span> -P<span class="variable">$mysql_port</span> -u<span class="variable">$mysql_user</span> -p<span class="variable">$mysql_password</span> <span class="variable">$1</span> --master-data &gt; <span class="variable">$backup_dir</span>/mysql_<span class="variable">$1_backup</span>-<span class="variable">$backup_time</span>.sql&quot;</span></span></span><br><span class="line">  flag=`echo $?`</span><br><span class="line">  if [ $flag == &quot;0&quot; ];then</span><br><span class="line">    # tar打包所有的sql文件</span><br><span class="line">    # echo &quot;tar -zcPpf $backup_dir/mysql_$1_backup-$backup_time.zip --directory /   $backup_dir&quot;</span><br><span class="line">    # tar -zcPpf $backup_dir/mysql_$1_backup-$backup_time.zip --warning=no-file-changed --directory /   $backup_dir</span><br><span class="line">    zip -jr $backup_dir/mysql_$1_backup-$backup_time.zip $backup_dir/ --exclude &quot;*.zip&quot;</span><br><span class="line">    #打包成功后删除sql文件</span><br><span class="line">    if [ $? = 0 ]; then</span><br><span class="line">      echo &quot;rm -rf $backup_dir/mysql_$1_backup-$backup_time.sql&quot;</span><br><span class="line">      rm -rf $backup_dir/mysql_$1_backup-$backup_time.sql</span><br><span class="line">    fi</span><br><span class="line">    echo &quot;database mysql_backup success backup to $backup_dir/mysql_backup-$backup_time.sql&quot;</span><br><span class="line">    job_success &quot;$*&quot;</span><br><span class="line">  else</span><br><span class="line">    echo &quot;database mysql_backup backup fail!&quot;</span><br><span class="line">    job_fail &quot;$*&quot;</span><br><span class="line">  fi</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">job_shell()</span><br><span class="line">&#123;</span><br><span class="line">case &quot;$1&quot; in</span><br><span class="line">  0)</span><br><span class="line">    del_bak</span><br><span class="line">    ;;</span><br><span class="line">  1)</span><br><span class="line">    all_bak</span><br><span class="line">    ;;   </span><br><span class="line">  xxx_test)</span><br><span class="line">    one_bak $1</span><br><span class="line">    ;; </span><br><span class="line">  nacos)</span><br><span class="line">    one_bak $1</span><br><span class="line">    ;; </span><br><span class="line">  xxl_job)</span><br><span class="line">    one_bak $1</span><br><span class="line">  *)</span><br><span class="line">    echo &quot;Usage: $0 &#123;0[删除30天之前备份]|1[全备]|单库名[ xxxx_test | nacos | xxl_job ]&#125;&quot;</span><br><span class="line">    exit 1</span><br><span class="line"></span><br><span class="line">esac</span><br><span class="line">exit 0    </span><br><span class="line">&#125;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">#### 作业平台中执行脚本成功和失败的标准只取决于脚本最后一条执行语句的返回值</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">#### 如果返回值为0，则认为此脚本执行成功，如果非0，则认为脚本执行失败</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="built_in">read</span> -r -p <span class="string">&quot;请选择全库/单库备份：｛0[删除30天之前备份]|1[全备]|单库名[ xxxx_test | nacos | xxl_job]｝&quot;</span> bak_sh</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">job_shell <span class="string">&quot;<span class="variable">$bak_sh</span>&quot;</span></span></span><br><span class="line">all_bak</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="built_in">echo</span> <span class="string">&quot;mysql备份的第一个版本! &quot;</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="built_in">echo</span> <span class="string">&quot;version: 1.0.0&quot;</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 脚本 </category>
          
          <category> Shell </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Shell </tag>
            
            <tag> mysql 备份 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MongoDb</title>
      <link href="/posts/3049486006.html"/>
      <url>/posts/3049486006.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-安装"><a href="#1-安装" class="headerlink" title="1 安装"></a>1 安装</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">cd /home/software</span><br><span class="line">tar xzf mongodb-linux-x86_64-enterprise-rhel80-4.4.24.tgz</span><br><span class="line"></span><br><span class="line">mkdir -p /home/mongodb/mongodb1</span><br><span class="line">cp -r /home/software/mongodb-linux-x86_64-enterprise-rhel80-4.4.24/* /home/mongodb/mongodb1/</span><br><span class="line"></span><br><span class="line">cp -r /home/mongodb/mongodb1 /home/mongodb/mongodb2</span><br><span class="line">cp -r /home/mongodb/mongodb1 /home/mongodb/mongodb3</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="2-启动mongodb"><a href="#2-启动mongodb" class="headerlink" title="2 启动mongodb"></a>2 启动mongodb</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">配置示例</span></span><br><span class="line">cat mongodb_24017/conf/mongodb_24017.yml </span><br><span class="line">systemLog:</span><br><span class="line">  destination: file</span><br><span class="line">  logAppend: true</span><br><span class="line">  path: /home/mongodb/mongodb_24017/logs/mongodb.log</span><br><span class="line"></span><br><span class="line">replication:</span><br><span class="line">  replSetName: mgo</span><br><span class="line"></span><br><span class="line">storage:</span><br><span class="line">  journal:</span><br><span class="line">    enabled: true</span><br><span class="line">  dbPath: /home/mongodb/mongodb_24017/data</span><br><span class="line">  directoryPerDB: true</span><br><span class="line">  wiredTiger:</span><br><span class="line">    engineConfig:</span><br><span class="line">      cacheSizeGB: 1</span><br><span class="line">      directoryForIndexes: true</span><br><span class="line">    collectionConfig:</span><br><span class="line">      blockCompressor: zlib</span><br><span class="line">    indexConfig:</span><br><span class="line">      prefixCompression: true</span><br><span class="line"></span><br><span class="line">processManagement:</span><br><span class="line">  fork: true</span><br><span class="line">  pidFilePath: /home/mongodb/mongodb_24017/pid/mongod.pid</span><br><span class="line"></span><br><span class="line">net:</span><br><span class="line">  port: 24017</span><br><span class="line">  bindIp: 0.0.0.0</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">mongodb1</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim /usr/lib/systemd/system/mongodb1.service</span> </span><br><span class="line">[Unit] </span><br><span class="line">Description=mongodb1</span><br><span class="line">After=network.target remote-fs.target nss-lookup.target</span><br><span class="line"></span><br><span class="line">[Service] </span><br><span class="line">Type=forking</span><br><span class="line">User=root</span><br><span class="line">Group=root</span><br><span class="line">ExecStart=/home/mongodb/mongodb_24017/bin/mongod --config /home/mongodb/mongodb_24017/conf/mongodb_24017.yml</span><br><span class="line">ExecReload=/bin/kill -HUP $MAINPID </span><br><span class="line">ExecStop=/home/mongodb/mongodb_24017/bin/mongod --shutdown /home/mongodb/mongodb_24017/conf/mongodb_24017.yml</span><br><span class="line">PrivateTmp=true</span><br><span class="line">KillMode=process </span><br><span class="line">Restart=on-failure</span><br><span class="line"></span><br><span class="line">[Install] </span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">mongodb2</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim /usr/lib/systemd/system/mongodb2.service</span> </span><br><span class="line">[Unit] </span><br><span class="line">Description=mongodb2</span><br><span class="line">After=network.target remote-fs.target nss-lookup.target</span><br><span class="line"></span><br><span class="line">[Service] </span><br><span class="line">Type=forking</span><br><span class="line">User=root</span><br><span class="line">Group=root</span><br><span class="line">ExecStart=/home/mongodb/mongodb_26017/bin/mongod --config /home/mongodb/mongodb_26017/conf/mongodb_26017.yml</span><br><span class="line">ExecReload=/bin/kill -HUP $MAINPID </span><br><span class="line">ExecStop=/home/mongodb/mongodb_26017/bin/mongod --shutdown /home/mongodb/mongodb_26017/conf/mongodb_26017.yml</span><br><span class="line">PrivateTmp=true</span><br><span class="line">KillMode=process </span><br><span class="line">Restart=on-failure</span><br><span class="line"></span><br><span class="line">[Install] </span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">mongodb3</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim /usr/lib/systemd/system/mongodb3.service</span> </span><br><span class="line">[Unit] </span><br><span class="line">Description=mongodb3</span><br><span class="line">After=network.target remote-fs.target nss-lookup.target</span><br><span class="line"></span><br><span class="line">[Service] </span><br><span class="line">Type=forking</span><br><span class="line">User=root</span><br><span class="line">Group=root</span><br><span class="line">ExecStart=/home/mongodb/mongodb_25017/bin/mongod --config /home/mongodb/mongodb_25017/conf/mongodb_25017.yml</span><br><span class="line">ExecReload=/bin/kill -HUP $MAINPID </span><br><span class="line">ExecStop=/home/mongodb/mongodb_25017/bin/mongod --shutdown /home/mongodb/mongodb_25017/conf/mongodb_25017.yml</span><br><span class="line">PrivateTmp=true</span><br><span class="line">KillMode=process </span><br><span class="line">Restart=on-failure</span><br><span class="line"></span><br><span class="line">[Install] </span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart mongodb1  # 24017</span><br><span class="line">systemctl restart mongodb2  # 26017</span><br><span class="line">systemctl restart mongodb3  # 25017</span><br><span class="line"></span><br><span class="line">ps -ef |grep mongod</span><br></pre></td></tr></table></figure><h2 id="3-初始化复制集"><a href="#3-初始化复制集" class="headerlink" title="3 初始化复制集"></a>3 初始化复制集</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br></pre></td><td class="code"><pre><span class="line">vim /home/mongodb/mongo_init_replset</span><br><span class="line">cfg=&#123; _id:&quot;mgo&quot;,members:[ &#123;_id:0,host:&#x27;127.0.0.1:24017&#x27;&#125;,&#123;_id:1,host:&#x27;127.0.0.1:26017&#x27;&#125;,&#123;_id:2,host:&#x27;127.0.0.1:25017&#x27;&#125;] &#125;;</span><br><span class="line">rs.initiate(cfg);</span><br><span class="line">rs.status();</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">参数说明：</span></span><br><span class="line">_id：复制集名称（第一个_id） </span><br><span class="line">members：复制集服务器列表 </span><br><span class="line">_id：服务器的唯一ID（数组里_id） </span><br><span class="line">host：服务器主机</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">在其中一台机器上执行。</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">执行命令及返回：</span></span><br><span class="line">/home/mongodb/mongodb_24017/bin/mongo 127.0.0.1:24017 &lt; /home/mongodb/mongo_init_replset</span><br><span class="line">MongoDB shell version v4.0.4</span><br><span class="line">connecting to: mongodb://127.0.0.1:24017/test</span><br><span class="line">Implicit session: session &#123; &quot;id&quot; : UUID(&quot;c9d3449e-afd2-4d48-ac4d-19b9981667c8&quot;) &#125;</span><br><span class="line">MongoDB server version: 4.0.4</span><br><span class="line">&#123;</span><br><span class="line">&quot;_id&quot; : &quot;mgo&quot;,</span><br><span class="line">&quot;members&quot; : [</span><br><span class="line">&#123;</span><br><span class="line">&quot;_id&quot; : 0,</span><br><span class="line">&quot;host&quot; : &quot;127.0.0.1:24017&quot;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">&quot;_id&quot; : 1,</span><br><span class="line">&quot;host&quot; : &quot;127.0.0.1:26017&quot;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">&quot;_id&quot; : 2,</span><br><span class="line">&quot;host&quot; : &quot;127.0.0.1:25017&quot;</span><br><span class="line">&#125;</span><br><span class="line">]</span><br><span class="line">&#125;</span><br><span class="line">&#123;</span><br><span class="line">&quot;operationTime&quot; : Timestamp(1700884573, 1),</span><br><span class="line">&quot;ok&quot; : 0,</span><br><span class="line">&quot;errmsg&quot; : &quot;already initialized&quot;,</span><br><span class="line">&quot;code&quot; : 23,</span><br><span class="line">&quot;codeName&quot; : &quot;AlreadyInitialized&quot;,</span><br><span class="line">&quot;$clusterTime&quot; : &#123;</span><br><span class="line">&quot;clusterTime&quot; : Timestamp(1700884573, 1),</span><br><span class="line">&quot;signature&quot; : &#123;</span><br><span class="line">&quot;hash&quot; : BinData(0,&quot;AAAAAAAAAAAAAAAAAAAAAAAAAAA=&quot;),</span><br><span class="line">&quot;keyId&quot; : NumberLong(0)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#123;</span><br><span class="line">&quot;set&quot; : &quot;mgo&quot;,</span><br><span class="line">&quot;date&quot; : ISODate(&quot;2023-11-25T03:56:21.257Z&quot;),</span><br><span class="line">&quot;myState&quot; : 1,</span><br><span class="line">&quot;term&quot; : NumberLong(1),</span><br><span class="line">&quot;syncingTo&quot; : &quot;&quot;,</span><br><span class="line">&quot;syncSourceHost&quot; : &quot;&quot;,</span><br><span class="line">&quot;syncSourceId&quot; : -1,</span><br><span class="line">&quot;heartbeatIntervalMillis&quot; : NumberLong(2000),</span><br><span class="line">&quot;optimes&quot; : &#123;</span><br><span class="line">&quot;lastCommittedOpTime&quot; : &#123;</span><br><span class="line">&quot;ts&quot; : Timestamp(1700884573, 1),</span><br><span class="line">&quot;t&quot; : NumberLong(1)</span><br><span class="line">&#125;,</span><br><span class="line">&quot;readConcernMajorityOpTime&quot; : &#123;</span><br><span class="line">&quot;ts&quot; : Timestamp(1700884573, 1),</span><br><span class="line">&quot;t&quot; : NumberLong(1)</span><br><span class="line">&#125;,</span><br><span class="line">&quot;appliedOpTime&quot; : &#123;</span><br><span class="line">&quot;ts&quot; : Timestamp(1700884573, 1),</span><br><span class="line">&quot;t&quot; : NumberLong(1)</span><br><span class="line">&#125;,</span><br><span class="line">&quot;durableOpTime&quot; : &#123;</span><br><span class="line">&quot;ts&quot; : Timestamp(1700884573, 1),</span><br><span class="line">&quot;t&quot; : NumberLong(1)</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">&quot;lastStableCheckpointTimestamp&quot; : Timestamp(1700884533, 1),</span><br><span class="line">&quot;members&quot; : [</span><br><span class="line">&#123;</span><br><span class="line">&quot;_id&quot; : 0,</span><br><span class="line">&quot;name&quot; : &quot;127.0.0.1:24017&quot;,</span><br><span class="line">&quot;health&quot; : 1,</span><br><span class="line">&quot;state&quot; : 1,</span><br><span class="line">&quot;stateStr&quot; : &quot;PRIMARY&quot;,</span><br><span class="line">&quot;uptime&quot; : 923,</span><br><span class="line">&quot;optime&quot; : &#123;</span><br><span class="line">&quot;ts&quot; : Timestamp(1700884573, 1),</span><br><span class="line">&quot;t&quot; : NumberLong(1)</span><br><span class="line">&#125;,</span><br><span class="line">&quot;optimeDate&quot; : ISODate(&quot;2023-11-25T03:56:13Z&quot;),</span><br><span class="line">&quot;syncingTo&quot; : &quot;&quot;,</span><br><span class="line">&quot;syncSourceHost&quot; : &quot;&quot;,</span><br><span class="line">&quot;syncSourceId&quot; : -1,</span><br><span class="line">&quot;infoMessage&quot; : &quot;&quot;,</span><br><span class="line">&quot;electionTime&quot; : Timestamp(1700883811, 1),</span><br><span class="line">&quot;electionDate&quot; : ISODate(&quot;2023-11-25T03:43:31Z&quot;),</span><br><span class="line">&quot;configVersion&quot; : 1,</span><br><span class="line">&quot;self&quot; : true,</span><br><span class="line">&quot;lastHeartbeatMessage&quot; : &quot;&quot;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">&quot;_id&quot; : 1,</span><br><span class="line">&quot;name&quot; : &quot;127.0.0.1:26017&quot;,</span><br><span class="line">&quot;health&quot; : 1,</span><br><span class="line">&quot;state&quot; : 2,</span><br><span class="line">&quot;stateStr&quot; : &quot;SECONDARY&quot;,</span><br><span class="line">&quot;uptime&quot; : 780,</span><br><span class="line">&quot;optime&quot; : &#123;</span><br><span class="line">&quot;ts&quot; : Timestamp(1700884573, 1),</span><br><span class="line">&quot;t&quot; : NumberLong(1)</span><br><span class="line">&#125;,</span><br><span class="line">&quot;optimeDurable&quot; : &#123;</span><br><span class="line">&quot;ts&quot; : Timestamp(1700884573, 1),</span><br><span class="line">&quot;t&quot; : NumberLong(1)</span><br><span class="line">&#125;,</span><br><span class="line">&quot;optimeDate&quot; : ISODate(&quot;2023-11-25T03:56:13Z&quot;),</span><br><span class="line">&quot;optimeDurableDate&quot; : ISODate(&quot;2023-11-25T03:56:13Z&quot;),</span><br><span class="line">&quot;lastHeartbeat&quot; : ISODate(&quot;2023-11-25T03:56:19.301Z&quot;),</span><br><span class="line">&quot;lastHeartbeatRecv&quot; : ISODate(&quot;2023-11-25T03:56:20.154Z&quot;),</span><br><span class="line">&quot;pingMs&quot; : NumberLong(0),</span><br><span class="line">&quot;lastHeartbeatMessage&quot; : &quot;&quot;,</span><br><span class="line">&quot;syncingTo&quot; : &quot;127.0.0.1:24017&quot;,</span><br><span class="line">&quot;syncSourceHost&quot; : &quot;127.0.0.1:24017&quot;,</span><br><span class="line">&quot;syncSourceId&quot; : 0,</span><br><span class="line">&quot;infoMessage&quot; : &quot;&quot;,</span><br><span class="line">&quot;configVersion&quot; : 1</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">&quot;_id&quot; : 2,</span><br><span class="line">&quot;name&quot; : &quot;127.0.0.1:25017&quot;,</span><br><span class="line">&quot;health&quot; : 1,</span><br><span class="line">&quot;state&quot; : 2,</span><br><span class="line">&quot;stateStr&quot; : &quot;SECONDARY&quot;,</span><br><span class="line">&quot;uptime&quot; : 780,</span><br><span class="line">&quot;optime&quot; : &#123;</span><br><span class="line">&quot;ts&quot; : Timestamp(1700884573, 1),</span><br><span class="line">&quot;t&quot; : NumberLong(1)</span><br><span class="line">&#125;,</span><br><span class="line">&quot;optimeDurable&quot; : &#123;</span><br><span class="line">&quot;ts&quot; : Timestamp(1700884573, 1),</span><br><span class="line">&quot;t&quot; : NumberLong(1)</span><br><span class="line">&#125;,</span><br><span class="line">&quot;optimeDate&quot; : ISODate(&quot;2023-11-25T03:56:13Z&quot;),</span><br><span class="line">&quot;optimeDurableDate&quot; : ISODate(&quot;2023-11-25T03:56:13Z&quot;),</span><br><span class="line">&quot;lastHeartbeat&quot; : ISODate(&quot;2023-11-25T03:56:19.301Z&quot;),</span><br><span class="line">&quot;lastHeartbeatRecv&quot; : ISODate(&quot;2023-11-25T03:56:20.187Z&quot;),</span><br><span class="line">&quot;pingMs&quot; : NumberLong(0),</span><br><span class="line">&quot;lastHeartbeatMessage&quot; : &quot;&quot;,</span><br><span class="line">&quot;syncingTo&quot; : &quot;127.0.0.1:24017&quot;,</span><br><span class="line">&quot;syncSourceHost&quot; : &quot;127.0.0.1:24017&quot;,</span><br><span class="line">&quot;syncSourceId&quot; : 0,</span><br><span class="line">&quot;infoMessage&quot; : &quot;&quot;,</span><br><span class="line">&quot;configVersion&quot; : 1</span><br><span class="line">&#125;</span><br><span class="line">],</span><br><span class="line">&quot;ok&quot; : 1,</span><br><span class="line">&quot;operationTime&quot; : Timestamp(1700884573, 1),</span><br><span class="line">&quot;$clusterTime&quot; : &#123;</span><br><span class="line">&quot;clusterTime&quot; : Timestamp(1700884573, 1),</span><br><span class="line">&quot;signature&quot; : &#123;</span><br><span class="line">&quot;hash&quot; : BinData(0,&quot;AAAAAAAAAAAAAAAAAAAAAAAAAAA=&quot;),</span><br><span class="line">&quot;keyId&quot; : NumberLong(0)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">bye</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">生产环境</span></span><br><span class="line">/home/mongodb/mongodb_27017/bin/mongo 127.0.0.1:27017 &lt; /home/mongodb/mongo_init_replset</span><br></pre></td></tr></table></figure><h2 id="4-初始化用户和密码"><a href="#4-初始化用户和密码" class="headerlink" title="4 初始化用户和密码"></a>4 初始化用户和密码</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br></pre></td><td class="code"><pre><span class="line">需要在集群的primary节点执行。根据初始化的副本集信息，可以获取到primary节点信息，找到PRIMARY对应的节点ip地址。</span><br><span class="line">...</span><br><span class="line">&quot;_id&quot; : 0,</span><br><span class="line">&quot;name&quot; : &quot;127.0.0.1:24017&quot;,</span><br><span class="line">&quot;health&quot; : 1,</span><br><span class="line">&quot;state&quot; : 1,</span><br><span class="line">&quot;stateStr&quot; : &quot;PRIMARY&quot;,</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">vim /home/mongodb/mongo_init_user</span><br><span class="line">use admin;</span><br><span class="line">db.createUser(&#123; user: &quot;admin&quot;, pwd: &quot;jwgod@123&quot;, roles: [ &#123; role: &quot;readWriteAnyDatabase&quot;, db: &quot;admin&quot; &#125; ] &#125;);</span><br><span class="line">db.grantRolesToUser(&quot;admin&quot;, [&quot;clusterAdmin&quot;]);</span><br><span class="line">db.grantRolesToUser(&quot;admin&quot;, [&quot;clusterManager&quot;]);</span><br><span class="line">db.grantRolesToUser(&quot;admin&quot;, [&quot;clusterMonitor&quot;]);</span><br><span class="line">db.grantRolesToUser(&quot;admin&quot;, [&quot;hostManager&quot;]);</span><br><span class="line">db.grantRolesToUser(&quot;admin&quot;, [&quot;userAdminAnyDatabase&quot;]);</span><br><span class="line">db.grantRolesToUser(&quot;admin&quot;, [&quot;dbAdmin&quot;]);</span><br><span class="line">db.grantRolesToUser(&quot;admin&quot;, [&quot;dbOwner&quot;]);</span><br><span class="line">show users;</span><br><span class="line">use golog;</span><br><span class="line">db.createUser(&#123; user: &quot;jwgod&quot;, pwd: &quot;jwgod@123&quot;, roles: [ &#123; role: &quot;readWriteAnyDatabase&quot;, db: &quot;admin&quot; &#125; ] &#125;);</span><br><span class="line">use crm;</span><br><span class="line">db.createUser(&#123; user: &quot;crmUser&quot;, pwd: &quot;jwgod,123&quot;, roles: [ &#123; role: &quot;readWriteAnyDatabase&quot;, db: &quot;crm&quot; &#125; ] &#125;);</span><br><span class="line">use price</span><br><span class="line">db.createUser(&#123; user: &quot;priceUser&quot;, pwd: &quot;price,123&quot;, roles: [ &#123; role: &quot;readWriteAnyDatabase&quot;, db: &quot;price&quot; &#125; ] &#125;);</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">执行命令如下。</span></span><br><span class="line">/home/mongodb/mongodb_24017/bin/mongo 127.0.0.1:24017 &lt; /home/mongodb/mongo_init_user</span><br><span class="line">MongoDB shell version v4.0.4</span><br><span class="line">connecting to: mongodb://127.0.0.1:24017/test</span><br><span class="line">Implicit session: session &#123; &quot;id&quot; : UUID(&quot;deead2d8-7337-45a0-968d-8a4fa27961ba&quot;) &#125;</span><br><span class="line">MongoDB server version: 4.0.4</span><br><span class="line">switched to db admin</span><br><span class="line">Successfully added user: &#123;</span><br><span class="line">&quot;user&quot; : &quot;admin&quot;,</span><br><span class="line">&quot;roles&quot; : [</span><br><span class="line">&#123;</span><br><span class="line">&quot;role&quot; : &quot;readWriteAnyDatabase&quot;,</span><br><span class="line">&quot;db&quot; : &quot;admin&quot;</span><br><span class="line">&#125;</span><br><span class="line">]</span><br><span class="line">&#125;</span><br><span class="line">&#123;</span><br><span class="line">&quot;_id&quot; : &quot;admin.admin&quot;,</span><br><span class="line">&quot;user&quot; : &quot;admin&quot;,</span><br><span class="line">&quot;db&quot; : &quot;admin&quot;,</span><br><span class="line">&quot;roles&quot; : [</span><br><span class="line">&#123;</span><br><span class="line">&quot;role&quot; : &quot;dbOwner&quot;,</span><br><span class="line">&quot;db&quot; : &quot;admin&quot;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">&quot;role&quot; : &quot;dbAdmin&quot;,</span><br><span class="line">&quot;db&quot; : &quot;admin&quot;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">&quot;role&quot; : &quot;readWriteAnyDatabase&quot;,</span><br><span class="line">&quot;db&quot; : &quot;admin&quot;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">&quot;role&quot; : &quot;clusterAdmin&quot;,</span><br><span class="line">&quot;db&quot; : &quot;admin&quot;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">&quot;role&quot; : &quot;clusterManager&quot;,</span><br><span class="line">&quot;db&quot; : &quot;admin&quot;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">&quot;role&quot; : &quot;userAdminAnyDatabase&quot;,</span><br><span class="line">&quot;db&quot; : &quot;admin&quot;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">&quot;role&quot; : &quot;hostManager&quot;,</span><br><span class="line">&quot;db&quot; : &quot;admin&quot;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">&quot;role&quot; : &quot;clusterMonitor&quot;,</span><br><span class="line">&quot;db&quot; : &quot;admin&quot;</span><br><span class="line">&#125;</span><br><span class="line">],</span><br><span class="line">&quot;mechanisms&quot; : [</span><br><span class="line">&quot;SCRAM-SHA-1&quot;,</span><br><span class="line">&quot;SCRAM-SHA-256&quot;</span><br><span class="line">]</span><br><span class="line">&#125;</span><br><span class="line">switched to db golog</span><br><span class="line">Successfully added user: &#123;</span><br><span class="line">&quot;user&quot; : &quot;jwgod&quot;,</span><br><span class="line">&quot;roles&quot; : [</span><br><span class="line">&#123;</span><br><span class="line">&quot;role&quot; : &quot;readWriteAnyDatabase&quot;,</span><br><span class="line">&quot;db&quot; : &quot;admin&quot;</span><br><span class="line">&#125;</span><br><span class="line">]</span><br><span class="line">&#125;</span><br><span class="line">switched to db crm</span><br><span class="line">Successfully added user: &#123;</span><br><span class="line">&quot;user&quot; : &quot;crmUser&quot;,</span><br><span class="line">&quot;roles&quot; : [</span><br><span class="line">&#123;</span><br><span class="line">&quot;role&quot; : &quot;readWriteAnyDatabase&quot;,</span><br><span class="line">&quot;db&quot; : &quot;crm&quot;</span><br><span class="line">&#125;</span><br><span class="line">]</span><br><span class="line">&#125;</span><br><span class="line">switched to db price</span><br><span class="line">Successfully added user: &#123;</span><br><span class="line">&quot;user&quot; : &quot;priceUser&quot;,</span><br><span class="line">&quot;roles&quot; : [</span><br><span class="line">&#123;</span><br><span class="line">&quot;role&quot; : &quot;readWriteAnyDatabase&quot;,</span><br><span class="line">&quot;db&quot; : &quot;price&quot;</span><br><span class="line">&#125;</span><br><span class="line">]</span><br><span class="line">&#125;</span><br><span class="line">bye</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">生产环境</span></span><br><span class="line">/home/mongodb/mongodb_27017/bin/mongo 127.0.0.1:27017 &lt; /home/mongodb/mongo_init_user</span><br></pre></td></tr></table></figure><h2 id="5-重启mongodb"><a href="#5-重启mongodb" class="headerlink" title="5 重启mongodb"></a>5 重启mongodb</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart mongodb1  # 24017</span><br><span class="line">systemctl restart mongodb2  # 26017</span><br><span class="line">systemctl restart mongodb3  # 25017</span><br><span class="line"></span><br><span class="line">ps -ef |grep mongod</span><br></pre></td></tr></table></figure><h2 id="6-验证集群"><a href="#6-验证集群" class="headerlink" title="6 验证集群"></a>6 验证集群</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br></pre></td><td class="code"><pre><span class="line">需要在集群的primary节点执行</span><br><span class="line">vim /home/mongodb/mongo_status</span><br><span class="line">use admin;</span><br><span class="line">db.auth(&quot;admin&quot;,&quot;jwgod@123&quot;);</span><br><span class="line">db.system.users.find().pretty();</span><br><span class="line">rs.status();</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">执行命令如下：</span></span><br><span class="line">/home/mongodb/mongodb_24017/bin/mongo 127.0.0.1:24017  &lt; /home/mongodb/mongo_status</span><br><span class="line">MongoDB shell version v4.0.4</span><br><span class="line">connecting to: mongodb://127.0.0.1:24017/test</span><br><span class="line">Implicit session: session &#123; &quot;id&quot; : UUID(&quot;f9c9a94e-44c6-4251-9cf5-0530ab61ad7d&quot;) &#125;</span><br><span class="line">MongoDB server version: 4.0.4</span><br><span class="line">switched to db admin</span><br><span class="line">1</span><br><span class="line">&#123;</span><br><span class="line">&quot;_id&quot; : &quot;admin.admin&quot;,</span><br><span class="line">&quot;user&quot; : &quot;admin&quot;,</span><br><span class="line">&quot;db&quot; : &quot;admin&quot;,</span><br><span class="line">&quot;credentials&quot; : &#123;</span><br><span class="line">&quot;SCRAM-SHA-1&quot; : &#123;</span><br><span class="line">&quot;iterationCount&quot; : 10000,</span><br><span class="line">&quot;salt&quot; : &quot;4LzccFQWe/pHAWa2M0uMHw==&quot;,</span><br><span class="line">&quot;storedKey&quot; : &quot;lx1PpSuUs0jxb/HfXoSYMcQBRZo=&quot;,</span><br><span class="line">&quot;serverKey&quot; : &quot;cwLT63qoFj5psHAVHS+zsBocMZ4=&quot;</span><br><span class="line">&#125;,</span><br><span class="line">&quot;SCRAM-SHA-256&quot; : &#123;</span><br><span class="line">&quot;iterationCount&quot; : 15000,</span><br><span class="line">&quot;salt&quot; : &quot;cG/qx45WdyVD6kKhE0LswmxbXE9zHjd0U43Y2A==&quot;,</span><br><span class="line">&quot;storedKey&quot; : &quot;B7DhuERflmIu0Hlt7c6UxYHY4W5U9PnmkMGVaJiLmwY=&quot;,</span><br><span class="line">&quot;serverKey&quot; : &quot;nsTJMj/U3kE/bbBF8TteWghrAQjavMqIOxgR+J7R2iI=&quot;</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">&quot;roles&quot; : [</span><br><span class="line">&#123;</span><br><span class="line">&quot;role&quot; : &quot;dbOwner&quot;,</span><br><span class="line">&quot;db&quot; : &quot;admin&quot;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">&quot;role&quot; : &quot;dbAdmin&quot;,</span><br><span class="line">&quot;db&quot; : &quot;admin&quot;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">&quot;role&quot; : &quot;readWriteAnyDatabase&quot;,</span><br><span class="line">&quot;db&quot; : &quot;admin&quot;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">&quot;role&quot; : &quot;clusterAdmin&quot;,</span><br><span class="line">&quot;db&quot; : &quot;admin&quot;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">&quot;role&quot; : &quot;clusterManager&quot;,</span><br><span class="line">&quot;db&quot; : &quot;admin&quot;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">&quot;role&quot; : &quot;userAdminAnyDatabase&quot;,</span><br><span class="line">&quot;db&quot; : &quot;admin&quot;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">&quot;role&quot; : &quot;hostManager&quot;,</span><br><span class="line">&quot;db&quot; : &quot;admin&quot;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">&quot;role&quot; : &quot;clusterMonitor&quot;,</span><br><span class="line">&quot;db&quot; : &quot;admin&quot;</span><br><span class="line">&#125;</span><br><span class="line">]</span><br><span class="line">&#125;</span><br><span class="line">&#123;</span><br><span class="line">&quot;_id&quot; : &quot;golog.qmsMongodb&quot;,</span><br><span class="line">&quot;user&quot; : &quot;jwgod&quot;,</span><br><span class="line">&quot;db&quot; : &quot;golog&quot;,</span><br><span class="line">&quot;credentials&quot; : &#123;</span><br><span class="line">&quot;SCRAM-SHA-1&quot; : &#123;</span><br><span class="line">&quot;iterationCount&quot; : 10000,</span><br><span class="line">&quot;salt&quot; : &quot;uLNAPv9iJYtfo5izj+XHBg==&quot;,</span><br><span class="line">&quot;storedKey&quot; : &quot;CH/0tckYdtrcIjYjhGRH5YLkeCs=&quot;,</span><br><span class="line">&quot;serverKey&quot; : &quot;pWGc6n2GaAK1VMU5SHw7BdTsv8o=&quot;</span><br><span class="line">&#125;,</span><br><span class="line">&quot;SCRAM-SHA-256&quot; : &#123;</span><br><span class="line">&quot;iterationCount&quot; : 15000,</span><br><span class="line">&quot;salt&quot; : &quot;8FAGu0lxbCmUgVMl1VwVWlqIpXQfwSZe+RmzUg==&quot;,</span><br><span class="line">&quot;storedKey&quot; : &quot;WdZRbLXpicfynKtdsaL9qcW5q2kdB1+0SVx6sEEw9eo=&quot;,</span><br><span class="line">&quot;serverKey&quot; : &quot;0GVf8iRdxRMIwqiZqpT2nGn7bCs3WYch6bkaYhTv5yQ=&quot;</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">&quot;roles&quot; : [</span><br><span class="line">&#123;</span><br><span class="line">&quot;role&quot; : &quot;readWriteAnyDatabase&quot;,</span><br><span class="line">&quot;db&quot; : &quot;admin&quot;</span><br><span class="line">&#125;</span><br><span class="line">]</span><br><span class="line">&#125;</span><br><span class="line">&#123;</span><br><span class="line">&quot;_id&quot; : &quot;crm.crmUser&quot;,</span><br><span class="line">&quot;user&quot; : &quot;crmUser&quot;,</span><br><span class="line">&quot;db&quot; : &quot;crm&quot;,</span><br><span class="line">&quot;credentials&quot; : &#123;</span><br><span class="line">&quot;SCRAM-SHA-1&quot; : &#123;</span><br><span class="line">&quot;iterationCount&quot; : 10000,</span><br><span class="line">&quot;salt&quot; : &quot;nzd8Kf3z/o2qSlmRjeM1yw==&quot;,</span><br><span class="line">&quot;storedKey&quot; : &quot;cPrhr3mUBiUSYX+WjHdfZu98mdQ=&quot;,</span><br><span class="line">&quot;serverKey&quot; : &quot;aT3IPtF3uqQ2lB0kedQPYJxov4Y=&quot;</span><br><span class="line">&#125;,</span><br><span class="line">&quot;SCRAM-SHA-256&quot; : &#123;</span><br><span class="line">&quot;iterationCount&quot; : 15000,</span><br><span class="line">&quot;salt&quot; : &quot;11k3+Wbo7p7smPIjh21xtCDTiwAAJivmiibrag==&quot;,</span><br><span class="line">&quot;storedKey&quot; : &quot;UbrmPJQWhnKIXRD5TT41vUVAH6WECX/0mEZBzV8URmI=&quot;,</span><br><span class="line">&quot;serverKey&quot; : &quot;WsLpI4KmKC+zJS1fCVzpclAyKBLdGb84rmbZzPt7UjA=&quot;</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">&quot;roles&quot; : [</span><br><span class="line">&#123;</span><br><span class="line">&quot;role&quot; : &quot;readWriteAnyDatabase&quot;,</span><br><span class="line">&quot;db&quot; : &quot;admin&quot;</span><br><span class="line">&#125;</span><br><span class="line">]</span><br><span class="line">&#125;</span><br><span class="line">&#123;</span><br><span class="line">&quot;_id&quot; : &quot;price.priceUser&quot;,</span><br><span class="line">&quot;user&quot; : &quot;priceUser&quot;,</span><br><span class="line">&quot;db&quot; : &quot;price&quot;,</span><br><span class="line">&quot;credentials&quot; : &#123;</span><br><span class="line">&quot;SCRAM-SHA-1&quot; : &#123;</span><br><span class="line">&quot;iterationCount&quot; : 10000,</span><br><span class="line">&quot;salt&quot; : &quot;bofvFKoqXYODB0XTZZA8aw==&quot;,</span><br><span class="line">&quot;storedKey&quot; : &quot;8KCS/O3aMEHYCDoJZUyl/EP0k2k=&quot;,</span><br><span class="line">&quot;serverKey&quot; : &quot;PC559iJa7wmVDN7UjqZSc04CLZI=&quot;</span><br><span class="line">&#125;,</span><br><span class="line">&quot;SCRAM-SHA-256&quot; : &#123;</span><br><span class="line">&quot;iterationCount&quot; : 15000,</span><br><span class="line">&quot;salt&quot; : &quot;SRr1GmvgaCTXr+ePhZxj7WskSGLp4HHkS1n3nQ==&quot;,</span><br><span class="line">&quot;storedKey&quot; : &quot;E+yzlIQQZF0FdyHmD3GuITdYXgQF8Dl5pZK4LexFdnM=&quot;,</span><br><span class="line">&quot;serverKey&quot; : &quot;tgwiIypApCmO2prz/OMVFp1r6OgSEicueEEeTJn9ERI=&quot;</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">&quot;roles&quot; : [</span><br><span class="line">&#123;</span><br><span class="line">&quot;role&quot; : &quot;readWriteAnyDatabase&quot;,</span><br><span class="line">&quot;db&quot; : &quot;admin&quot;</span><br><span class="line">&#125;</span><br><span class="line">]</span><br><span class="line">&#125;</span><br><span class="line">&#123;</span><br><span class="line">&quot;set&quot; : &quot;mgo&quot;,</span><br><span class="line">&quot;date&quot; : ISODate(&quot;2023-11-25T04:05:37.501Z&quot;),</span><br><span class="line">&quot;myState&quot; : 1,</span><br><span class="line">&quot;term&quot; : NumberLong(2),</span><br><span class="line">&quot;syncingTo&quot; : &quot;&quot;,</span><br><span class="line">&quot;syncSourceHost&quot; : &quot;&quot;,</span><br><span class="line">&quot;syncSourceId&quot; : -1,</span><br><span class="line">&quot;heartbeatIntervalMillis&quot; : NumberLong(2000),</span><br><span class="line">&quot;optimes&quot; : &#123;</span><br><span class="line">&quot;lastCommittedOpTime&quot; : &#123;</span><br><span class="line">&quot;ts&quot; : Timestamp(1700885131, 1),</span><br><span class="line">&quot;t&quot; : NumberLong(2)</span><br><span class="line">&#125;,</span><br><span class="line">&quot;readConcernMajorityOpTime&quot; : &#123;</span><br><span class="line">&quot;ts&quot; : Timestamp(1700885131, 1),</span><br><span class="line">&quot;t&quot; : NumberLong(2)</span><br><span class="line">&#125;,</span><br><span class="line">&quot;appliedOpTime&quot; : &#123;</span><br><span class="line">&quot;ts&quot; : Timestamp(1700885131, 1),</span><br><span class="line">&quot;t&quot; : NumberLong(2)</span><br><span class="line">&#125;,</span><br><span class="line">&quot;durableOpTime&quot; : &#123;</span><br><span class="line">&quot;ts&quot; : Timestamp(1700885131, 1),</span><br><span class="line">&quot;t&quot; : NumberLong(2)</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">&quot;lastStableCheckpointTimestamp&quot; : Timestamp(1700885111, 1),</span><br><span class="line">&quot;members&quot; : [</span><br><span class="line">&#123;</span><br><span class="line">&quot;_id&quot; : 0,</span><br><span class="line">&quot;name&quot; : &quot;127.0.0.1:24017&quot;,</span><br><span class="line">&quot;health&quot; : 1,</span><br><span class="line">&quot;state&quot; : 1,</span><br><span class="line">&quot;stateStr&quot; : &quot;PRIMARY&quot;,</span><br><span class="line">&quot;uptime&quot; : 139,</span><br><span class="line">&quot;optime&quot; : &#123;</span><br><span class="line">&quot;ts&quot; : Timestamp(1700885131, 1),</span><br><span class="line">&quot;t&quot; : NumberLong(2)</span><br><span class="line">&#125;,</span><br><span class="line">&quot;optimeDate&quot; : ISODate(&quot;2023-11-25T04:05:31Z&quot;),</span><br><span class="line">&quot;syncingTo&quot; : &quot;&quot;,</span><br><span class="line">&quot;syncSourceHost&quot; : &quot;&quot;,</span><br><span class="line">&quot;syncSourceId&quot; : -1,</span><br><span class="line">&quot;infoMessage&quot; : &quot;&quot;,</span><br><span class="line">&quot;electionTime&quot; : Timestamp(1700885010, 1),</span><br><span class="line">&quot;electionDate&quot; : ISODate(&quot;2023-11-25T04:03:30Z&quot;),</span><br><span class="line">&quot;configVersion&quot; : 1,</span><br><span class="line">&quot;self&quot; : true,</span><br><span class="line">&quot;lastHeartbeatMessage&quot; : &quot;&quot;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">&quot;_id&quot; : 1,</span><br><span class="line">&quot;name&quot; : &quot;127.0.0.1:26017&quot;,</span><br><span class="line">&quot;health&quot; : 1,</span><br><span class="line">&quot;state&quot; : 2,</span><br><span class="line">&quot;stateStr&quot; : &quot;SECONDARY&quot;,</span><br><span class="line">&quot;uptime&quot; : 132,</span><br><span class="line">&quot;optime&quot; : &#123;</span><br><span class="line">&quot;ts&quot; : Timestamp(1700885131, 1),</span><br><span class="line">&quot;t&quot; : NumberLong(2)</span><br><span class="line">&#125;,</span><br><span class="line">&quot;optimeDurable&quot; : &#123;</span><br><span class="line">&quot;ts&quot; : Timestamp(1700885131, 1),</span><br><span class="line">&quot;t&quot; : NumberLong(2)</span><br><span class="line">&#125;,</span><br><span class="line">&quot;optimeDate&quot; : ISODate(&quot;2023-11-25T04:05:31Z&quot;),</span><br><span class="line">&quot;optimeDurableDate&quot; : ISODate(&quot;2023-11-25T04:05:31Z&quot;),</span><br><span class="line">&quot;lastHeartbeat&quot; : ISODate(&quot;2023-11-25T04:05:36.128Z&quot;),</span><br><span class="line">&quot;lastHeartbeatRecv&quot; : ISODate(&quot;2023-11-25T04:05:36.404Z&quot;),</span><br><span class="line">&quot;pingMs&quot; : NumberLong(0),</span><br><span class="line">&quot;lastHeartbeatMessage&quot; : &quot;&quot;,</span><br><span class="line">&quot;syncingTo&quot; : &quot;127.0.0.1:24017&quot;,</span><br><span class="line">&quot;syncSourceHost&quot; : &quot;127.0.0.1:24017&quot;,</span><br><span class="line">&quot;syncSourceId&quot; : 0,</span><br><span class="line">&quot;infoMessage&quot; : &quot;&quot;,</span><br><span class="line">&quot;configVersion&quot; : 1</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">&quot;_id&quot; : 2,</span><br><span class="line">&quot;name&quot; : &quot;127.0.0.1:25017&quot;,</span><br><span class="line">&quot;health&quot; : 1,</span><br><span class="line">&quot;state&quot; : 2,</span><br><span class="line">&quot;stateStr&quot; : &quot;SECONDARY&quot;,</span><br><span class="line">&quot;uptime&quot; : 127,</span><br><span class="line">&quot;optime&quot; : &#123;</span><br><span class="line">&quot;ts&quot; : Timestamp(1700885131, 1),</span><br><span class="line">&quot;t&quot; : NumberLong(2)</span><br><span class="line">&#125;,</span><br><span class="line">&quot;optimeDurable&quot; : &#123;</span><br><span class="line">&quot;ts&quot; : Timestamp(1700885131, 1),</span><br><span class="line">&quot;t&quot; : NumberLong(2)</span><br><span class="line">&#125;,</span><br><span class="line">&quot;optimeDate&quot; : ISODate(&quot;2023-11-25T04:05:31Z&quot;),</span><br><span class="line">&quot;optimeDurableDate&quot; : ISODate(&quot;2023-11-25T04:05:31Z&quot;),</span><br><span class="line">&quot;lastHeartbeat&quot; : ISODate(&quot;2023-11-25T04:05:36.122Z&quot;),</span><br><span class="line">&quot;lastHeartbeatRecv&quot; : ISODate(&quot;2023-11-25T04:05:36.483Z&quot;),</span><br><span class="line">&quot;pingMs&quot; : NumberLong(0),</span><br><span class="line">&quot;lastHeartbeatMessage&quot; : &quot;&quot;,</span><br><span class="line">&quot;syncingTo&quot; : &quot;127.0.0.1:24017&quot;,</span><br><span class="line">&quot;syncSourceHost&quot; : &quot;127.0.0.1:24017&quot;,</span><br><span class="line">&quot;syncSourceId&quot; : 0,</span><br><span class="line">&quot;infoMessage&quot; : &quot;&quot;,</span><br><span class="line">&quot;configVersion&quot; : 1</span><br><span class="line">&#125;</span><br><span class="line">],</span><br><span class="line">&quot;ok&quot; : 1,</span><br><span class="line">&quot;operationTime&quot; : Timestamp(1700885131, 1),</span><br><span class="line">&quot;$clusterTime&quot; : &#123;</span><br><span class="line">&quot;clusterTime&quot; : Timestamp(1700885131, 1),</span><br><span class="line">&quot;signature&quot; : &#123;</span><br><span class="line">&quot;hash&quot; : BinData(0,&quot;AAAAAAAAAAAAAAAAAAAAAAAAAAA=&quot;),</span><br><span class="line">&quot;keyId&quot; : NumberLong(0)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">bye</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">生产环境</span></span><br><span class="line">/home/mongodb/mongodb_27017/bin/mongo 127.0.0.1:27017  &lt; /home/mongodb/mongo_status</span><br></pre></td></tr></table></figure><h2 id="7-连接集群"><a href="#7-连接集群" class="headerlink" title="7 连接集群"></a>7 连接集群</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">/home/mongodb/mongodb_24017/bin/mongo --port 24017</span><br><span class="line">rs.status()</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">数据库集合命令</span></span><br><span class="line">1.显示所有的数据库</span><br><span class="line">  show dbs(全称 show databases)</span><br><span class="line">2.（创建）切换到指定的数据库</span><br><span class="line">  use 数据库名</span><br><span class="line">3.显示当前所在的数据库</span><br><span class="line">  db</span><br><span class="line">4.删除当前数据库（先切换再删除）</span><br><span class="line">  use 库名</span><br><span class="line">  db.dropDatabase()</span><br><span class="line">5.创建集合</span><br><span class="line">  db.createCollection(&#x27;集合名称&#x27;)</span><br><span class="line">6.显示当前数据库中的所有集合</span><br><span class="line">  show collections</span><br><span class="line">7.删除某个集合</span><br><span class="line">  db.集合名.drop()</span><br><span class="line">8.重命名集合</span><br><span class="line">  db.集合名.renameCollection(&#x27;newName&#x27;)</span><br><span class="line">9.查询集合数据</span><br><span class="line">  db.consumer_crm_record.find()</span><br><span class="line">10.修改密码</span><br><span class="line">  use qms</span><br><span class="line">  db.changeUserPassword(&quot;qmsMongodb&quot;, &quot;qms@123&quot;)</span><br><span class="line">11.查看用户权限 </span><br><span class="line">  db.getUser(&quot;mongo_read&quot;)</span><br></pre></td></tr></table></figure><h2 id="8-创建用户"><a href="#8-创建用户" class="headerlink" title="8 创建用户"></a>8 创建用户</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">测试环境</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># admin 登录</span></span>  </span><br><span class="line">/home/mongodb/mongodb_27017/bin/mongo -u admin -p &quot;jwgod@123&quot; --host 192.168.1.26 --port 27017 --authenticationDatabase admin </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 创建jwgod  db</span></span></span><br><span class="line">use jwgod</span><br><span class="line">db.createUser(&#123;</span><br><span class="line">  user: &quot;jwgod&quot;,</span><br><span class="line">  pwd: &quot;jwgod@123&quot;,</span><br><span class="line">  roles: [&#123; role: &quot;readWrite&quot;, db: &quot;jwgod&quot; &#125;]</span><br><span class="line">&#125;)</span><br><span class="line">/home/mongodb/mongodb_27017/bin/mongo -u jwgod -p jwgod@123 --host 192.168.1.26 --port 27017 --authenticationDatabase jwgod</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 创建consumer  db</span></span></span><br><span class="line">use consumer</span><br><span class="line">db.createUser(&#123;</span><br><span class="line">  user: &quot;consumer&quot;,</span><br><span class="line">  pwd: &quot;consumer@123&quot;,</span><br><span class="line">  roles: [&#123; role: &quot;readWrite&quot;, db: &quot;consumer&quot; &#125;]</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">/home/mongodb/mongodb_27017/bin/mongo -u consumer -p consumer@123 --host 192.168.1.26 --port 27017 --authenticationDatabase consumer</span><br></pre></td></tr></table></figure><h2 id="9-mongodb备份恢复"><a href="#9-mongodb备份恢复" class="headerlink" title="9 mongodb备份恢复"></a>9 mongodb备份恢复</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">备份所有库</span></span><br><span class="line">/home/mongodb/mongodb_27017/bin/mongodump  -u admin -p &quot;jwgod@123&quot; --host 192.168.1.26 --port 27017 --gzip --out /home/bak_mongodb/mongo-20231204</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">备份个数据库</span></span><br><span class="line">/home/mongodb/mongodb_24017/bin/mongodump -u admin -p &quot;jwgod@123&quot; --host 192.168.1.26 --authenticationDatabase admin  --port 24017 --db jwgod --out /home/bak_mongodb/jwgod-20231205</span><br><span class="line"></span><br><span class="line">–db 数据库名</span><br><span class="line">–out 备份文件输出文件夹</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">备份单个表</span></span><br><span class="line">/home/mongodb/mongodb_27017/bin/mongodump -u admin -p &quot;jwgod@123&quot; --host 192.168.1.26 --port 27017 -d mydb -o /var/backups/mongo --collection users</span><br><span class="line">-d 数据库</span><br><span class="line">-o 备份文件输出路径</span><br><span class="line">–collection 指定的备份表</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">mongorestore的使用</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">恢复所有数据库</span></span><br><span class="line">/home/mongodb/mongodb_27017/bin/mongorestore -u admin -p &quot;jwgod@123&quot; --host 192.168.1.26 --port 27017 --username root2 --password 123456    /data/backup/mongodb_all_backup/mongo</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">恢复单个数据库qms</span></span><br><span class="line">/home/mongodb/mongodb_27017/bin/mongorestore -u admin -p &quot;jwgod@123&quot; --host 192.168.1.26  --port 27017 --authenticationDatabase admin --db jwgod /home/bak_mongodb/jwgod-20231205/qms</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">恢复单个数据库consumer</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">gunzip consumer_crm_record.bson.gz</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">gunzip consumer_crm_record.metadata.json.gz</span></span><br><span class="line">/home/mongodb/mongodb_27017/bin/mongorestore -u admin -p &quot;jwgod@123&quot; --host 192.168.1.26  --port 27017 --authenticationDatabase admin --db consumer /home/mongodb/mongodb_all_backup-202312260000/consumer</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mongodb </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>歌单分享</title>
      <link href="/posts/3777670968.html"/>
      <url>/posts/3777670968.html</url>
      
        <content type="html"><![CDATA[<h1 id="好听歌单："><a href="#好听歌单：" class="headerlink" title="好听歌单："></a>好听歌单：</h1><h2 id="0001-冬天的秘密-周传雄"><a href="#0001-冬天的秘密-周传雄" class="headerlink" title="0001 冬天的秘密-周传雄"></a>0001 冬天的秘密-周传雄</h2><iframe     frameborder="no"     border="0"     marginwidth="0"     marginheight="0"     width=330     height=86     src="//music.163.com/outchain/player?type=2&id=189545&auto=1&height=66"></iframe><h2 id="0002-悟空-戴荃"><a href="#0002-悟空-戴荃" class="headerlink" title="0002 悟空-戴荃"></a>0002 悟空-戴荃</h2><iframe     frameborder="no"     border="0"     marginwidth="0"     marginheight="0"     width=330     height=86     src="//music.163.com/outchain/player?type=2&id=33162226&auto=1&height=66"></iframe><h2 id="0003-大鱼-周深"><a href="#0003-大鱼-周深" class="headerlink" title="0003 大鱼-周深"></a>0003 大鱼-周深</h2><iframe     frameborder="no"     border="0"     marginwidth="0"     marginheight="0"     width=330     height=86     src="//music.163.com/outchain/player?type=2&id=416385506&auto=1&height=66"></iframe>]]></content>
      
      
      <categories>
          
          <category> 音乐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Music </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>check_list_port</title>
      <link href="/posts/2897752293.html"/>
      <url>/posts/2897752293.html</url>
      
        <content type="html"><![CDATA[<h1 id="checkout-listen-port"><a href="#checkout-listen-port" class="headerlink" title="checkout listen port"></a>checkout listen port</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># @Date    : 2023-06-16</span></span><br><span class="line"><span class="comment"># @Author  : jwgod</span></span><br><span class="line"><span class="comment"># @Version : 1.0.0</span></span><br><span class="line"><span class="comment"># 检测本机指定端口是否还在监听</span></span><br><span class="line"><span class="comment"># 运行：check_listen_port.py -p 8080</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> argparse</span><br><span class="line"><span class="keyword">import</span> mail163</span><br><span class="line"><span class="keyword">import</span> local_ip <span class="keyword">as</span> lip</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">check_listen_port</span>(<span class="params">port</span>):</span><br><span class="line">    ip = lip.get_IP()</span><br><span class="line">    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">    r = s.connect_ex((<span class="string">&#x27;127.0.0.1&#x27;</span>, port))</span><br><span class="line">    <span class="keyword">if</span> r != <span class="number">0</span>:</span><br><span class="line">        <span class="comment"># print(&#x27;%s port %s is down&#x27; % (ip, str(port)))</span></span><br><span class="line">        mail163.mail(<span class="string">&#x27;jwgod@163.com&#x27;</span>, <span class="string">&#x27;mail_aler&#x27;</span>, <span class="string">&#x27;%s port %s is down&#x27;</span> % (ip, <span class="built_in">str</span>(port)))</span><br><span class="line">    s.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">add_args</span>():</span><br><span class="line">    p = argparse.ArgumentParser()</span><br><span class="line">    p.add_argument(<span class="string">&#x27;-p&#x27;</span>, <span class="string">&#x27;--port&#x27;</span>, nargs=<span class="string">&#x27;+&#x27;</span>, <span class="built_in">type</span>=<span class="built_in">int</span>, <span class="built_in">help</span>=<span class="string">&#x27;本机监听的端口号&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> p.parse_args()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    args = add_args()</span><br><span class="line">    <span class="keyword">for</span> p <span class="keyword">in</span> args.port:</span><br><span class="line">        check_listen_port(p)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="local-ip"><a href="#local-ip" class="headerlink" title="local ip"></a>local ip</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># @Date    : 2023-06-16</span></span><br><span class="line"><span class="comment"># @Author  : jwgod</span></span><br><span class="line"><span class="comment"># @Version : 1.0.0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"></span><br><span class="line">r_ip = <span class="string">&#x27;192.168.64.129&#x27;</span>  <span class="comment"># 没有公网IP，先用内网网关对付</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_IP</span>():</span><br><span class="line">    s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)</span><br><span class="line">    s.connect((r_ip, <span class="number">0</span>))</span><br><span class="line">    ip = s.getsockname()[<span class="number">0</span>]</span><br><span class="line">    s.close()</span><br><span class="line">    <span class="keyword">return</span> ip</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    ip=get_IP()</span><br><span class="line">    <span class="built_in">print</span>(ip)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="mail163"><a href="#mail163" class="headerlink" title="mail163"></a>mail163</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># python mail.py jwgod@163.com mail_aler xxxx-is-down</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> smtplib</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> email.mime.text <span class="keyword">import</span> MIMEText</span><br><span class="line"><span class="keyword">from</span> email.header <span class="keyword">import</span> Header</span><br><span class="line"></span><br><span class="line">smtp_server = <span class="string">&#x27;smtphz.qiye.163.com&#x27;</span></span><br><span class="line">mail_user = <span class="string">&#x27;jwgod@163.com&#x27;</span></span><br><span class="line">password = <span class="string">&#x27;xxxxxxxxx&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">mail</span>(<span class="params">to, subject, txt</span>):</span><br><span class="line">    msg = MIMEText(txt, <span class="string">&#x27;html&#x27;</span>, _charset=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    msg[<span class="string">&#x27;From&#x27;</span>] = mail_user</span><br><span class="line">    msg[<span class="string">&#x27;To&#x27;</span>] = to</span><br><span class="line">    msg[<span class="string">&#x27;Subject&#x27;</span>] = Header(subject, <span class="string">&#x27;utf-8&#x27;</span>).encode()</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        s = smtplib.SMTP_SSL(smtp_server, port=<span class="number">465</span>)</span><br><span class="line">        s.login(mail_user, password)</span><br><span class="line">        s.sendmail(mail_user, to, msg.as_string())</span><br><span class="line">        s.quit()</span><br><span class="line">    <span class="keyword">except</span> smtplib.SMTPException <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Error: %s&quot;</span> % e)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(sys.argv) != <span class="number">4</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;$1 to_user $2 Subject $3 Content&#x27;</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="built_in">len</span>(sys.argv))</span><br><span class="line">        sys.exit(<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        mail(sys.argv[<span class="number">1</span>], sys.argv[<span class="number">2</span>], sys.argv[<span class="number">3</span>])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 脚本 </category>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 端口检查 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Rocky linux</title>
      <link href="/posts/2847517668.html"/>
      <url>/posts/2847517668.html</url>
      
        <content type="html"><![CDATA[<h1 id="1-Rocky-linux"><a href="#1-Rocky-linux" class="headerlink" title="1. Rocky linux"></a>1. Rocky linux</h1><h2 id="1-1-安装时分区"><a href="#1-1-安装时分区" class="headerlink" title="1.1 安装时分区"></a>1.1 安装时分区</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">创建以下分区</span><br><span class="line"></span><br><span class="line">/boot: 2GB</span><br><span class="line">/ :21GB</span><br><span class="line">swap: 2GB</span><br><span class="line"></span><br><span class="line">/home: 25GB</span><br><span class="line"></span><br><span class="line">创建第一个分区，大小为2GB的 /boot 分区，点击添加挂载点（Add mount point）</span><br></pre></td></tr></table></figure><h2 id="1-2-配置网络"><a href="#1-2-配置网络" class="headerlink" title="1.2 配置网络"></a>1.2 配置网络</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vi /etc/NetworkManager/system-connections/ens160.nmconnection</span></span><br><span class="line">[connection]</span><br><span class="line">id=ens160</span><br><span class="line">uuid=466abc28-0ac4-3774-a6a1-16a4d9ba1051</span><br><span class="line">type=ethernet</span><br><span class="line">autoconnect-priority=-999</span><br><span class="line">interface-name=ens160</span><br><span class="line">timestamp=1686755143</span><br><span class="line"></span><br><span class="line">[ethernet]</span><br><span class="line"></span><br><span class="line">[ipv4]</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">method=auto</span></span><br><span class="line">method=manual</span><br><span class="line">address=192.168.64.56/24,192.168.64.2</span><br><span class="line">dns=114.114.114.114</span><br><span class="line"></span><br><span class="line">[ipv6]</span><br><span class="line">addr-gen-mode=eui64</span><br><span class="line">method=auto</span><br><span class="line"></span><br><span class="line">[proxy]</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">nmcli c reload</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">nmcli c up ens160</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">另一种方法：</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">ssh root@192.168.1.76 <span class="string">&quot;nmcli con mod ens18 ipv4.addresses 192.168.1.30/24; nmcli con mod ens18 ipv4.gateway 192.168.1.99; nmcli con mod ens18 ipv4.method manual; nmcli con mod ens18 ipv4.dns &quot;</span>8.8.8.8<span class="string">&quot;; nmcli con up ens18&quot;</span></span></span><br></pre></td></tr></table></figure><h2 id="1-3-系统时间设定"><a href="#1-3-系统时间设定" class="headerlink" title="1.3 系统时间设定"></a>1.3 系统时间设定</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">tzselect</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">依次输入4、10、1、1</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">timedatectl list-timezones |grep Asia/Shanghai</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">timedatectl set-timezone Asia/Shanghai</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">timedatectl</span></span><br></pre></td></tr></table></figure><h2 id="1-4-SELinux配置"><a href="#1-4-SELinux配置" class="headerlink" title="1.4 SELinux配置"></a>1.4 SELinux配置</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">禁用SELinux</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">setenforce 0</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">sed -i <span class="string">&quot;s/SELINUX=enforcing/SELINUX=disabled/g&quot;</span> /etc/selinux/config</span></span><br><span class="line">sed &#x27;/Hello/s/$/!/&#x27;</span><br><span class="line"><span class="meta prompt_"> </span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">内核层禁用</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">grubby --update-kernel ALL --args selinux=0</span></span><br><span class="line"><span class="meta prompt_"> </span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看是否禁用</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">grubby --info DEFAULT</span></span><br><span class="line">index=0</span><br><span class="line">kernel=&quot;/boot/vmlinuz-5.14.0-70.13.1.el9_0.x86_64&quot;</span><br><span class="line">args=&quot;ro crashkernel=1G-4G:192M,4G-64G:256M,64G-:512M resume=/dev/mapper/rl-swap rd.lvm.lv=rl/root rd.lvm.lv=rl/swap selinux=0&quot;</span><br><span class="line">root=&quot;/dev/mapper/rl-root&quot;</span><br><span class="line">initrd=&quot;/boot/initramfs-5.14.0-70.13.1.el9_0.x86_64.img&quot;</span><br><span class="line">title=&quot;Rocky Linux (5.14.0-70.13.1.el9_0.x86_64) 9.0 (Blue Onyx)&quot;</span><br><span class="line">id=&quot;0af0a3c0bc4946a6bb4cc8daa8c8a1f7-5.14.0-70.13.1.el9_0.x86_64&quot;</span><br><span class="line"><span class="meta prompt_"> </span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">回滚内核层禁用操作</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">grubby --update-kernel ALL --remove-args selinux</span></span><br></pre></td></tr></table></figure><h2 id="1-5-防火墙配置"><a href="#1-5-防火墙配置" class="headerlink" title="1.5 防火墙配置"></a>1.5 防火墙配置</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">启动防火墙</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl start firewalld</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">停止防火墙</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl stop firewalld</span></span><br><span class="line"><span class="meta prompt_"> </span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">禁用防火墙</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl <span class="built_in">disable</span> firewalld</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">启用防火墙</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl <span class="built_in">enable</span> firewalld</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl status firewalld</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">firewall-cmd --reload</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">firewall-cmd --list-all</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">firewall-cmd --state</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">firewall-cmd --zone=public --add-port=8888/tcp --permanent</span></span><br><span class="line">firewall-cmd --zone=public --add-port=9121/tcp --permanent</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">firewall-cmd --zone=public --remove-port=80/tcp --permanent</span> </span><br></pre></td></tr></table></figure><h2 id="1-6-镜像源"><a href="#1-6-镜像源" class="headerlink" title="1.6 镜像源"></a>1.6 镜像源</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">更换镜像源</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">sed -e <span class="string">&#x27;s|^mirrorlist=|#mirrorlist=|g&#x27;</span> \</span></span><br><span class="line"><span class="language-bash">    -e <span class="string">&#x27;s|^#baseurl=http://dl.rockylinux.org/$contentdir|baseurl=https://mirrors.aliyun.com/rockylinux|g&#x27;</span> \</span></span><br><span class="line"><span class="language-bash">    -i.bak \</span></span><br><span class="line"><span class="language-bash">    /etc/yum.repos.d/rocky-*.repo</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">更新镜像源</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">dnf clean all</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">dnf autoremove</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">rm</span> -rf /var/cache/yum</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">dnf makecache</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">dnf repolist</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">dnf update</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装依赖</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">dnf install wget make gcc bzip2-devel openssl-devel zlib-devel libffi-devel telnet curl net-tools htop lrzsz zip unzip vim -y</span> </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># dnf -y install pcre pcre-devel openssl openssl-devel gcc-c++ autoconf automake zlib-devel libxml2 libxml2-dev  libxslt-devel gd-devel perl-devel perl-ExtUtils-Embed GeoIP GeoIP-devel GeoIP-data</span></span></span><br></pre></td></tr></table></figure><h2 id="1-7-设置时间同步"><a href="#1-7-设置时间同步" class="headerlink" title="1.7 设置时间同步"></a>1.7 设置时间同步</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">Rocky Linux默认已安装chrony服务，如果没有安装的话，使用dnf命令进行安装。</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">rpm -qa | grep chrony命令确认chrony是否安装</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装chrony</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">dnf install chrony</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">修改配置文件如下</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim /etc/chrony.conf</span></span><br><span class="line">pool ntp.aliyun.com iburst</span><br><span class="line">pool ntp1.aliyun.com iburst</span><br><span class="line">server 0.centos.pool.ntp.org iburst</span><br><span class="line">server 1.centos.pool.ntp.org iburst</span><br><span class="line">server 2.centos.pool.ntp.org iburst</span><br><span class="line">server 3.centos.pool.ntp.org iburst</span><br><span class="line"></span><br><span class="line">driftfile /var/lib/chrony/drift</span><br><span class="line">makestep 1.0 3</span><br><span class="line">rtcsync</span><br><span class="line">keyfile /etc/chrony.keys</span><br><span class="line">leapsectz right/UTC</span><br><span class="line">allow 192.168.129.0/24</span><br><span class="line">logdir /var/log/chrony</span><br><span class="line">leapsecmode slew</span><br><span class="line">maxslewrate 1000</span><br><span class="line">smoothtime 400 0.001024 leaponly</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">启动</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl restart chronyd</span> </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl <span class="built_in">enable</span> chronyd</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">chronyc sources -v</span></span><br><span class="line">- 立即手工同步　</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">chronyc -a makestep</span></span><br><span class="line">- 将当前时间和日期写入BIOS，避免重启后失效</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">hwclock -w</span></span><br></pre></td></tr></table></figure><h2 id="1-8-关闭交换分区"><a href="#1-8-关闭交换分区" class="headerlink" title="1.8 关闭交换分区"></a>1.8 关闭交换分区</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sed -ri &#x27;s/.*swap.*/#&amp;/&#x27; /etc/fstab</span><br><span class="line">swapoff -a &amp;&amp; sysctl -w vm.swappiness=0\</span><br><span class="line"></span><br><span class="line">cat /etc/fstab</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">/dev/mapper/centos-swap swap                    swap    defaults        0 0</span></span><br></pre></td></tr></table></figure><h2 id="1-9-配置ulimit"><a href="#1-9-配置ulimit" class="headerlink" title="1.9 配置ulimit"></a>1.9 配置ulimit</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">ulimit -SHn 65535</span><br><span class="line">cat &gt;&gt; /etc/security/limits.conf &lt;&lt;EOF</span><br><span class="line">* soft nofile 655360</span><br><span class="line">* hard nofile 131072</span><br><span class="line">* soft nproc 655350</span><br><span class="line">* hard nproc 655350</span><br><span class="line">* seft memlock unlimited</span><br><span class="line">* hard memlock unlimitedd</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h2 id="1-10-crontab-e"><a href="#1-10-crontab-e" class="headerlink" title="1.10 crontab -e"></a>1.10 crontab -e</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">crontab: installing new crontab   &quot;/tmp/crontab.Asj6b6&quot;:1: bad minute    errors in crontab file, can&#x27;t install</span><br><span class="line"></span><br><span class="line">*/10 * * * * /usr/local/bin/python3 /home/check_listen/check_listen_port.py -p 8080 80 &gt; /home/check_listen/check_listen_port.log 2&gt;&amp;1</span><br><span class="line">*/10 * * * * /usr/local/bin/python3 /home/check_listen/check_listen_port.py -p 3306 &gt; /home/check_listen/check_listen_port.log 2&gt;&amp;1</span><br><span class="line">00 00 * * * sh /home/mysql_bak/mysql_9_bak-v1.sh &gt; /home/mysql_bak/mysql_9_bak-v1.log 2&gt;&amp;1</span><br></pre></td></tr></table></figure><h2 id="1-11-修改hostname"><a href="#1-11-修改hostname" class="headerlink" title="1.11 修改hostname"></a>1.11 修改hostname</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># /etc/hostname</span><br><span class="line"># hostnamectl set-hostname V002012005_master_01_35</span><br><span class="line"></span><br><span class="line"># pro</span><br><span class="line">hostnamectl set-hostname V002012016_k8s_master1_pro_51</span><br><span class="line">Hsyk@56789</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 操作系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git-flows</title>
      <link href="/posts/1069623423.html"/>
      <url>/posts/1069623423.html</url>
      
        <content type="html"><![CDATA[<p>[TOC]</p><h1 id="1-分支类别"><a href="#1-分支类别" class="headerlink" title="1.分支类别"></a>1.分支类别</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1.Main   主分支</span><br><span class="line">2.Develop  开发分支</span><br><span class="line">3.feature  功能分支(临时分支)</span><br><span class="line">4.release  预发布分支(临时分支)</span><br><span class="line">5.fixbug   修复bug分支(临时分支)</span><br></pre></td></tr></table></figure><h1 id="2-分支作用"><a href="#2-分支作用" class="headerlink" title="2.分支作用"></a>2.分支作用</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">1.Main 主分支作用</span><br><span class="line">代码库有且仅有一个主分支，所有提供给用户使用的正式版本，都在这个主分支上发布，主分支只用来分布重大版本，每次重大发布打tag标记。</span><br><span class="line"></span><br><span class="line">2.Develop 开发分支</span><br><span class="line">日常开发分支，我们把开发用的分支，叫做Develop。这个分支可以用来生成代码的最新隔夜版本（nightly）。如果想正式对外发布，就在Main分支上，对Develop分支进行&quot;合并&quot;（merge）</span><br><span class="line"></span><br><span class="line">3.feature  功能分支(临时分支)</span><br><span class="line">临时分支 使用完以后，应该删除，使得代码库的常设分支始终只有Main和Develop。它是为了开发某种特定功能，从Develop分支上面分出来的。开发完成后，要再并入Develop。功能分支的名字，可以采用feature-name-time的形式命名，例如：feature-bright-230612。</span><br><span class="line"></span><br><span class="line">4.release  预发布分支(临时分支)</span><br><span class="line">它是指发布正式版本之前（即合并到Main分支之前），我们可能需要有一个预发布的版本进行测试。预发布分支是从Develop分支上面分出来的，预发布结束以后，必须合并进Develop和Main分支。它的命名，可以采用release-name-time的形式。</span><br><span class="line"></span><br><span class="line">5.fixbug   修复bug分支(临时分支)</span><br><span class="line">修补bug分支是从Main分支上面分出来的，修补结束以后，再合并进Main和Develop分支。它的命名，可以采用fixbug-name-time的形式 如：fixbug-bright-230612</span><br></pre></td></tr></table></figure><h1 id="3-合并分支"><a href="#3-合并分支" class="headerlink" title="3.合并分支"></a>3.合并分支</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">- 查看当前处于哪个分支:</span><br><span class="line">  git branch -a</span><br><span class="line">- Git创建Develop分支的命令：</span><br><span class="line">  git checkout -b develop Main</span><br><span class="line"></span><br><span class="line">- 将Develop分支发布到Main分支的命令：</span><br><span class="line">  1.切换到Main分支:</span><br><span class="line">    git checkout Main</span><br><span class="line">  2.对Develop分支进行合并:</span><br><span class="line">    git merge --no-ff develop</span><br><span class="line">  解释：默认情况下，Git执行&quot;快进式合并&quot;（fast-farward merge）会直接将Main分支指向Develop分支。使用--no-ff参数后，会执行正常合并，在Main分支上生成一个新节点。为了保证版本演进的清晰，我们希望采用这种做法。</span><br></pre></td></tr></table></figure><h1 id="4-功能分支-临时分支"><a href="#4-功能分支-临时分支" class="headerlink" title="4.功能分支(临时分支)"></a>4.功能分支(临时分支)</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">示例：</span><br><span class="line">- 创建一份新的分支:</span><br><span class="line">  git checkout -b feature-kefu-230612 develop</span><br><span class="line">- 合并到开发分支:</span><br><span class="line">  git checkout develop</span><br><span class="line">  git merge --no-ff feature-kefu-230612</span><br><span class="line"></span><br><span class="line">- 删除已合并分支:</span><br><span class="line">  git branch -d feature-kefu-230612</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="5-预发布分支-临时分支"><a href="#5-预发布分支-临时分支" class="headerlink" title="5.预发布分支(临时分支)"></a>5.预发布分支(临时分支)</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">- 创建预发布分支:</span><br><span class="line">  git checkout -b release-kefu-150215 develop</span><br><span class="line">- 确认无问题后 合并到Main分支</span><br><span class="line">  git checkout Main</span><br><span class="line">  git merge --no-ff release-kefu-150215</span><br><span class="line"></span><br><span class="line">- 对合并生成的新节点，做一个标签</span><br><span class="line">  git tag -a v1.1</span><br><span class="line"></span><br><span class="line">- 再合并到开发分支</span><br><span class="line">  git checkout develop</span><br><span class="line">  git merge --no-ff release-kefu-150215</span><br><span class="line"></span><br><span class="line">- 删除分支:</span><br><span class="line">  git branch -d release-kefu-150215</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="6-修复bug分支-临时分支"><a href="#6-修复bug分支-临时分支" class="headerlink" title="6.修复bug分支(临时分支)"></a>6.修复bug分支(临时分支)</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">- 创建一个修补bug分支：</span><br><span class="line">  git checkout -b fixbug-kefu-230612 Main</span><br><span class="line">  </span><br><span class="line">- 修补结束后，合并到Main分支：</span><br><span class="line">  git checkout Main</span><br><span class="line">  git merge --no-ff fixbug-kefu-230612</span><br><span class="line">  git tag -a v1.2_3</span><br><span class="line"></span><br><span class="line">- 再合并到develop分支：</span><br><span class="line">  git checkout develop</span><br><span class="line">  git merge --no-ff fixbug-kefu-230612</span><br><span class="line"></span><br><span class="line">- 最后，删除&quot;修补bug分支&quot;：</span><br><span class="line">  git branch -d fixbug-kefu-230612</span><br></pre></td></tr></table></figure><h1 id="7-其它git操作"><a href="#7-其它git操作" class="headerlink" title="7.其它git操作"></a>7.其它git操作</h1><h2 id="7-1-test分支版本回退"><a href="#7-1-test分支版本回退" class="headerlink" title="7.1 test分支版本回退"></a>7.1 test分支版本回退</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git log</span><br><span class="line">git reset --hard id  //选择要回退的id</span><br><span class="line">git push -f origin test  //回退后强制推送到远程仓库</span><br></pre></td></tr></table></figure><h2 id="7-2-git拉取远程分支"><a href="#7-2-git拉取远程分支" class="headerlink" title="7.2 git拉取远程分支"></a>7.2 git拉取远程分支</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git fetch origin dev //从远程获取最新版本到本地，不会自动merge</span><br><span class="line">git checkout -b 本地分支名 origin/远程分支名  </span><br></pre></td></tr></table></figure><h2 id="7-3-拉取远程分支到本地分支"><a href="#7-3-拉取远程分支到本地分支" class="headerlink" title="7.3 拉取远程分支到本地分支"></a>7.3 拉取远程分支到本地分支</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git checkout mydev  //切换到本地分支</span><br><span class="line">git pull origin dev   //将远程仓库中的dev分支拉取到mydev分支</span><br></pre></td></tr></table></figure><h2 id="7-4-删除本地分支及远程分支"><a href="#7-4-删除本地分支及远程分支" class="headerlink" title="7.4 删除本地分支及远程分支"></a>7.4 删除本地分支及远程分支</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git branch -D dev  //删除本地分支</span><br><span class="line">git push origin :dev  //删除远程分支s</span><br></pre></td></tr></table></figure><h2 id="7-5-删除本地及远程仓库tag"><a href="#7-5-删除本地及远程仓库tag" class="headerlink" title="7.5 删除本地及远程仓库tag"></a>7.5 删除本地及远程仓库tag</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git tag -d v2.9.0　　　　　　　　//本地删除tag</span><br><span class="line">git push origin :refs/tags/v2.9.0　　　　　//本地tag删除了，再执行该句，删除线上tag</span><br></pre></td></tr></table></figure><h2 id="7-6-查看最近3条更新日志，并简单显示出所涉及的文件"><a href="#7-6-查看最近3条更新日志，并简单显示出所涉及的文件" class="headerlink" title="7.6 查看最近3条更新日志，并简单显示出所涉及的文件"></a>7.6 查看最近3条更新日志，并简单显示出所涉及的文件</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git log -3 --stat</span><br><span class="line">git show 3dbfdbccc8238ff688316e481266cfbda8733b8d   //查看修改了文件的那些内容</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>1990-1999年十首金曲分享</title>
      <link href="/posts/3348715242.html"/>
      <url>/posts/3348715242.html</url>
      
        <content type="html"><![CDATA[<div style="position: relative; padding-bottom: 56.25%; height: 0;">  <video src="https://jwgod-blog.oss-cn-beijing.aliyuncs.com/video/%E9%9F%B3%E8%A7%86%E9%A2%91/1990-1999-jwgod_x264.mp4" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%;" controls>    Your browser does not support the video tag.  </video></div>]]></content>
      
      
      <categories>
          
          <category> 视频 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Videos </tag>
            
            <tag> Movie </tag>
            
            <tag> Music </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>minio K8S 部署</title>
      <link href="/posts/2321188352.html"/>
      <url>/posts/2321188352.html</url>
      
        <content type="html"><![CDATA[<h1 id="yaml部署方式"><a href="#yaml部署方式" class="headerlink" title="yaml部署方式"></a>yaml部署方式</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">minio-statefulset.yaml</span></span><br><span class="line">---</span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: StatefulSet</span><br><span class="line">metadata:</span><br><span class="line">  name: minio</span><br><span class="line">  namespace: minio</span><br><span class="line">spec:</span><br><span class="line">  serviceName: minio</span><br><span class="line">  replicas: 4</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: minio</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: minio</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - name: minio</span><br><span class="line">        env:</span><br><span class="line">        - name: MINIO_ROOT_USER</span><br><span class="line">          value: &quot;admin&quot;</span><br><span class="line">        - name: MINIO_ROOT_PASSWORD</span><br><span class="line">          value: &quot;root123456&quot;</span><br><span class="line">        image: 192.168.129.33:5000/minio/minio:latest</span><br><span class="line">        imagePullPolicy: IfNotPresent</span><br><span class="line">        command:</span><br><span class="line">          - /bin/sh</span><br><span class="line">          - -c</span><br><span class="line">          - minio server --console-address &quot;:9001&quot; http://minio-&#123;0...3&#125;.minio.minio.svc.cluster.local/data</span><br><span class="line">        ports:</span><br><span class="line">        - name: data</span><br><span class="line">          containerPort: 9000</span><br><span class="line">          protocol: &quot;TCP&quot;</span><br><span class="line">        - name: console</span><br><span class="line">          containerPort: 9001</span><br><span class="line">          protocol: &quot;TCP&quot;</span><br><span class="line">        volumeMounts:</span><br><span class="line">        - name: minio-data</span><br><span class="line">          mountPath: /data</span><br><span class="line">        - name: date-config</span><br><span class="line">          mountPath: /etc/localtime</span><br><span class="line">      volumes:</span><br><span class="line">        - name: date-config</span><br><span class="line">          hostPath:</span><br><span class="line">            path: /usr/share/zoneinfo/Asia/Shanghai</span><br><span class="line">  volumeClaimTemplates:</span><br><span class="line">  - metadata:</span><br><span class="line">      name: minio-data</span><br><span class="line">    spec:</span><br><span class="line">      accessModes:</span><br><span class="line">        - ReadWriteMany</span><br><span class="line">      resources:</span><br><span class="line">        requests:</span><br><span class="line">          storage: 10Gi</span><br><span class="line">      storageClassName: managed-nfs-storage</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: minio</span><br><span class="line">  namespace: minio</span><br><span class="line">  labels:</span><br><span class="line">    app: minio</span><br><span class="line">spec:</span><br><span class="line">  clusterIP: None</span><br><span class="line">  ports:</span><br><span class="line">    - port: 9000</span><br><span class="line">      name: data</span><br><span class="line">    - port: 9001</span><br><span class="line">      name: console</span><br><span class="line">  selector:</span><br><span class="line">    app: minio</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: minio-service-svc</span><br><span class="line">  namespace: minio</span><br><span class="line">spec:</span><br><span class="line">  type: NodePort</span><br><span class="line">  ports:</span><br><span class="line">   - name: data</span><br><span class="line">     port: 9000</span><br><span class="line">     targetPort: 9000</span><br><span class="line">     protocol: TCP</span><br><span class="line">     nodePort: 30025 </span><br><span class="line">   - name: console</span><br><span class="line">     port: 9001</span><br><span class="line">     targetPort: 9001</span><br><span class="line">     protocol: TCP</span><br><span class="line">     nodePort: 30023</span><br><span class="line">  selector:</span><br><span class="line">    app: minio</span><br></pre></td></tr></table></figure><h1 id="利用-mc迁移minio数据"><a href="#利用-mc迁移minio数据" class="headerlink" title="利用 mc迁移minio数据"></a>利用 mc迁移minio数据</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">参考文档：http://wiki.sqlfans.cn/minio/minio-migr-mc.html</span></span><br><span class="line"></span><br><span class="line">源头minio节点：https://minio.xxxxx.com  </span><br><span class="line">  user：syncer</span><br><span class="line">  password：xxxxxx</span><br><span class="line">  bucket：test-public、test-private</span><br><span class="line">目标minio节点：https://oss.xxxx.com</span><br><span class="line">  user：admin</span><br><span class="line">  password：xxxxxx</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">1.源节点：下载最新版的 mc客户端</span></span><br><span class="line">curl -sL https://dl.min.io/client/mc/release/linux-amd64/mc -o /usr/bin/mc</span><br><span class="line">chmod +x /usr/bin/mc</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">2.源节点：针对2个minio节点，创建2个别名</span></span><br><span class="line">mc alias set minio1 https://minio.xxxx.com syncer xxxx --api s3v4</span><br><span class="line">mc alias set minio2 https://oss.xxxx.com admin xxxx --api s3v4</span><br><span class="line">mc alias list</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">3.源节点：模拟源节点（minio1）某bucket已存在文件，示例 bucket111</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">mc mb minio1/test-public</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">mc <span class="built_in">cp</span> /etc/hosts minio1/test-public</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">mc <span class="built_in">cp</span> /etc/sysconfig minio1/test-public --recursive</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">4.源节点：为目标节点（minio2）创建bucket，并利用<span class="built_in">cp</span>命令实现一次数据同步</span></span><br><span class="line">mc mb minio2/test-public</span><br><span class="line">mc mb minio2/test-private</span><br><span class="line">mc cp --recursive minio1/test-public minio2</span><br><span class="line">mc cp --recursive minio1/test-private minio2</span><br></pre></td></tr></table></figure><h1 id="minio授权用户及创建bucket"><a href="#minio授权用户及创建bucket" class="headerlink" title="minio授权用户及创建bucket"></a>minio授权用户及创建bucket</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">bucket要求：</span></span><br><span class="line">sams-private：Anonymous Access为默认</span><br><span class="line">sams-public：Anonymous Access为&#123;&quot;Prefix&quot;: &quot;*&quot;, &quot;Access&quot;: &quot;readonly&quot;&#125;</span><br><span class="line"></span><br><span class="line">1. 创建账号密码</span><br><span class="line">    shaixxx    xxx@P2023    # 生产环境，readwrite, Secret Key</span><br><span class="line">2. Policies--&gt;readwrite--&gt;Raw Policy</span><br><span class="line">&#123;</span><br><span class="line">    &quot;Version&quot;: &quot;2012-10-17&quot;,</span><br><span class="line">    &quot;Statement&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;Effect&quot;: &quot;Allow&quot;,</span><br><span class="line">            &quot;Action&quot;: [</span><br><span class="line">                &quot;s3:DeleteObject&quot;,</span><br><span class="line">                &quot;s3:GetBucketLocation&quot;,</span><br><span class="line">                &quot;s3:GetObject&quot;,</span><br><span class="line">                &quot;s3:PutObject&quot;</span><br><span class="line">            ],</span><br><span class="line">            &quot;Resource&quot;: [</span><br><span class="line">                &quot;arn:aws:s3:::sams-*&quot;</span><br><span class="line">            ]</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">3. 访问</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">mc <span class="built_in">alias</span> <span class="built_in">set</span> shancha https://oss.xxxx.com shaicha xxxx@P2023 --api s3v4</span></span><br><span class="line">Added `shancha` successfully.</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">mc <span class="built_in">alias</span> list</span></span><br><span class="line">shancha</span><br><span class="line">  URL       : https://oss.xxxx.com</span><br><span class="line">  AccessKey : shaicha</span><br><span class="line">  SecretKey : xxxx@P2023</span><br><span class="line">  API       : s3v4</span><br><span class="line">  Path      : auto</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 容器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文件存储 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>markdown基本语法</title>
      <link href="/posts/1204465438.html"/>
      <url>/posts/1204465438.html</url>
      
        <content type="html"><![CDATA[<h2 id="标题"><a href="#标题" class="headerlink" title="标题:"></a>标题:</h2><ul><li><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1></li><li><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2></li><li><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3></li><li><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4></li><li><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5></li><li><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6></li></ul><h2 id="字体"><a href="#字体" class="headerlink" title="字体:"></a>字体:</h2><ul><li><strong>加粗</strong></li><li><em>斜体</em></li><li><em><strong>斜体加粗</strong></em></li><li><del>删除线</del></li></ul><h2 id="引用"><a href="#引用" class="headerlink" title="引用:"></a>引用:</h2><blockquote><p>引用</p><blockquote><p>引用</p><blockquote><p>引用</p></blockquote></blockquote></blockquote><h2 id="分割线"><a href="#分割线" class="headerlink" title="分割线:"></a>分割线:</h2><ul><li><h2 id="三个或者以上的-或者"><a href="#三个或者以上的-或者" class="headerlink" title="三个或者以上的-或者*"></a>三个或者以上的-或者*</h2><hr><hr><hr></li></ul><h2 id="图片"><a href="#图片" class="headerlink" title="图片:"></a>图片:</h2><p><img src="/%E5%9B%BE%E7%89%87%E5%9C%B0%E5%9D%80" alt="图片alt" title="图片title"><br>图片alt–&gt;是显示在图片下面的文字，相当于对图片内容的解释<br>图片title–&gt;是图片的标题，当鼠标移到图片上时显示的内容，可不加</p><h2 id="超链接"><a href="#超链接" class="headerlink" title="超链接:"></a>超链接:</h2><p><a href="%E8%B6%85%E9%93%BE%E6%8E%A5%E5%9C%B0%E5%9D%80" title="超链接title">超链接名</a>,title可不加<br><a href="http://baidu.com/">百度</a></p><h2 id="列表"><a href="#列表" class="headerlink" title="列表:"></a>列表:</h2><ul><li><p>无序列表</p><ul><li>列表内容</li></ul><ul><li>列表内容</li></ul><ul><li>列表内容</li></ul></li><li><p>有序列表</p><ol><li>列表内容</li><li>列表内容</li><li>列表内容</li></ol></li><li><p>列表嵌套<br>上一级和下一级之间敲三个空格即可</p></li></ul><h2 id="表格"><a href="#表格" class="headerlink" title="表格:"></a>表格:</h2><table><thead><tr><th>表头</th><th align="center">表头</th><th align="right">表头</th></tr></thead><tbody><tr><td>内容</td><td align="center">内容</td><td align="right">内容</td></tr><tr><td>内容</td><td align="center">内容</td><td align="right">内容</td></tr></tbody></table><h2 id="代码"><a href="#代码" class="headerlink" title="代码:"></a>代码:</h2><ul><li>单行代码<br><code>create database hero;</code></li><li>代码块<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">function fun()&#123;</span><br><span class="line">echo &quot;这是一句非常牛逼的代码&quot;;</span><br><span class="line">&#125;</span><br><span class="line">func();</span><br></pre></td></tr></table></figure></li></ul><h2 id="流程图"><a href="#流程图" class="headerlink" title="流程图"></a>流程图</h2><ul><li>示例1<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">st=&gt;start: 开始</span><br><span class="line">op=&gt;operation: My Operation</span><br><span class="line">cond=&gt;condition: Yes or No?</span><br><span class="line">e=&gt;end</span><br><span class="line">st-&gt;op-&gt;cond</span><br><span class="line">cond(yes)-&gt;e</span><br><span class="line">cond(no)-&gt;op</span><br></pre></td></tr></table></figure></li><li>示例2<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">st=&gt;start: 开始</span><br><span class="line">e=&gt;end: 登录</span><br><span class="line">io1=&gt;inputoutput: 输入用户名密码</span><br><span class="line">sub1=&gt;subroutine: 数据库查询子类</span><br><span class="line">cond=&gt;condition: 是否有此用户</span><br><span class="line">cond2=&gt;condition: 密码是否正确</span><br><span class="line">op=&gt;operation: 读入用户信息</span><br><span class="line">st-&gt;io1-&gt;sub1-&gt;cond</span><br><span class="line">cond(yes,right)-&gt;cond2</span><br><span class="line">cond(no)-&gt;io1(right)</span><br><span class="line">cond2(yes,right)-&gt;op-&gt;e</span><br><span class="line">cond2(no)-&gt;io1</span><br></pre></td></tr></table></figure></li></ul><h1 id="上面效果的实现"><a href="#上面效果的实现" class="headerlink" title="上面效果的实现"></a>上面效果的实现</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line">## 标题:</span><br><span class="line">- # 一级标题</span><br><span class="line">- ## 二级标题</span><br><span class="line">- ### 三级标题</span><br><span class="line">- #### 四级标题</span><br><span class="line">- ##### 五级标题</span><br><span class="line">- ###### 六级标题</span><br><span class="line"></span><br><span class="line">## 字体:</span><br><span class="line">- **加粗**</span><br><span class="line">- *斜体*</span><br><span class="line">- ***斜体加粗***</span><br><span class="line">- ~~删除线~~</span><br><span class="line"></span><br><span class="line">## 引用:</span><br><span class="line">&gt;引用</span><br><span class="line">&gt;&gt;引用</span><br><span class="line">&gt;&gt;</span><br><span class="line">&gt;&gt;&gt;引用</span><br><span class="line"></span><br><span class="line">## 分割线:</span><br><span class="line">- 三个或者以上的-或者*</span><br><span class="line">   ---</span><br><span class="line">   ----</span><br><span class="line">   ***</span><br><span class="line">   ****</span><br><span class="line"></span><br><span class="line">## 图片:</span><br><span class="line">![图片alt](图片地址 &quot;图片title&quot;)</span><br><span class="line">图片alt--&gt;是显示在图片下面的文字，相当于对图片内容的解释</span><br><span class="line">图片title--&gt;是图片的标题，当鼠标移到图片上时显示的内容，可不加</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## 超链接:</span><br><span class="line">[超链接名](超链接地址 &quot;超链接title&quot;),title可不加</span><br><span class="line">[百度](http://baidu.com)</span><br><span class="line"></span><br><span class="line">## 列表:</span><br><span class="line">- 无序列表</span><br><span class="line">   - 列表内容</span><br><span class="line">   + 列表内容</span><br><span class="line">   </span><br><span class="line">   * 列表内容</span><br><span class="line">- 有序列表</span><br><span class="line">   1. 列表内容</span><br><span class="line">   2. 列表内容</span><br><span class="line">   3. 列表内容</span><br><span class="line">- 列表嵌套</span><br><span class="line">上一级和下一级之间敲三个空格即可</span><br><span class="line"></span><br><span class="line">## 表格:</span><br><span class="line">| 表头 | 表头 | 表头 |</span><br><span class="line">| ---- | :----: | ----: |</span><br><span class="line">| 内容 | 内容 | 内容 |</span><br><span class="line">| 内容 | 内容 | 内容 |</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## 代码:</span><br><span class="line">- 单行代码</span><br><span class="line">`create database hero;`</span><br><span class="line">- 代码块</span><br><span class="line"></span><br><span class="line">function fun()&#123;</span><br><span class="line">echo &quot;这是一句非常牛逼的代码&quot;;</span><br><span class="line">&#125;</span><br><span class="line">func();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## 流程图</span><br><span class="line">- 示例1</span><br><span class="line">flow</span><br><span class="line">st=&gt;start: 开始</span><br><span class="line">op=&gt;operation: My Operation</span><br><span class="line">cond=&gt;condition: Yes or No?</span><br><span class="line">e=&gt;end</span><br><span class="line">st-&gt;op-&gt;cond</span><br><span class="line">cond(yes)-&gt;e</span><br><span class="line">cond(no)-&gt;op</span><br><span class="line"></span><br><span class="line">- 示例2</span><br><span class="line">flow</span><br><span class="line">st=&gt;start: 开始</span><br><span class="line">e=&gt;end: 登录</span><br><span class="line">io1=&gt;inputoutput: 输入用户名密码</span><br><span class="line">sub1=&gt;subroutine: 数据库查询子类</span><br><span class="line">cond=&gt;condition: 是否有此用户</span><br><span class="line">cond2=&gt;condition: 密码是否正确</span><br><span class="line">op=&gt;operation: 读入用户信息</span><br><span class="line">st-&gt;io1-&gt;sub1-&gt;cond</span><br><span class="line">cond(yes,right)-&gt;cond2</span><br><span class="line">cond(no)-&gt;io1(right)</span><br><span class="line">cond2(yes,right)-&gt;op-&gt;e</span><br><span class="line">cond2(no)-&gt;io1</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>github Connection time out</title>
      <link href="/posts/1800485937.html"/>
      <url>/posts/1800485937.html</url>
      
        <content type="html"><![CDATA[<h1 id="异常"><a href="#异常" class="headerlink" title="异常"></a>异常</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">在连接github时，执行”ssh -T git@github.com” 命令时，出现</span></span><br><span class="line">ssh: connect to host github.com port 22: Connection timed out</span><br></pre></td></tr></table></figure><h1 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">在存放公钥私钥(id_rsa和id_rsa.pub)的文件里，新建config文本</span></span><br><span class="line">vim config</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">输入下面内容</span></span><br><span class="line">Host github.com</span><br><span class="line">User 注册github的邮箱</span><br><span class="line">Hostname ssh.github.com</span><br><span class="line">PreferredAuthentications publickey</span><br><span class="line">IdentityFile ~/.ssh/id_rsa</span><br><span class="line">Port 443</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">最后:wq退出编辑即可</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">接着再执行,出现提示回车<span class="built_in">yes</span>即可</span></span><br><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>elasticsearch+kibana快照实现迁移及恢复</title>
      <link href="/posts/1818393960.html"/>
      <url>/posts/1818393960.html</url>
      
        <content type="html"><![CDATA[<h1 id="1-全部索引存储快照及恢复"><a href="#1-全部索引存储快照及恢复" class="headerlink" title="1. 全部索引存储快照及恢复"></a>1. 全部索引存储快照及恢复</h1><h2 id="1-1-全部索引存储快照"><a href="#1-1-全部索引存储快照" class="headerlink" title="1.1 全部索引存储快照"></a>1.1 全部索引存储快照</h2><h3 id="1-1-2-全部索引注册快照存储库"><a href="#1-1-2-全部索引注册快照存储库" class="headerlink" title="1.1.2 全部索引注册快照存储库"></a>1.1.2 全部索引注册快照存储库</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">PUT _snapshot/old_k8s-prod-info</span><br><span class="line">&#123;</span><br><span class="line">&quot;type&quot;: &quot;fs&quot;,</span><br><span class="line">&quot;settings&quot;: &#123;</span><br><span class="line">&quot;location&quot;: &quot;/usr/share/elasticsearch/es-back/snapshot01&quot;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1-1-2-快照全部索引"><a href="#1-1-2-快照全部索引" class="headerlink" title="1.1.2 快照全部索引"></a>1.1.2 快照全部索引</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PUT _snapshot/old_k8s-prod-info/backup_all?wait_for_completion=true</span><br></pre></td></tr></table></figure><h3 id="1-1-3-查看快照进度"><a href="#1-1-3-查看快照进度" class="headerlink" title="1.1.3 查看快照进度"></a>1.1.3 查看快照进度</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">GET _snapshot/old_k8s-prod-info/backup_all/_status</span><br><span class="line">- grep state</span><br><span class="line">- started:正在同步</span><br><span class="line">- success:成功</span><br><span class="line">- failed：失败</span><br></pre></td></tr></table></figure><h2 id="1-2-恢复"><a href="#1-2-恢复" class="headerlink" title="1.2 恢复"></a>1.2 恢复</h2><h3 id="1-2-1-注册快照存储库"><a href="#1-2-1-注册快照存储库" class="headerlink" title="1.2.1 注册快照存储库"></a>1.2.1 注册快照存储库</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">PUT _snapshot/old_k8s-prod-info</span><br><span class="line">&#123;</span><br><span class="line">&quot;type&quot;: &quot;fs&quot;,</span><br><span class="line">&quot;settings&quot;: &#123;</span><br><span class="line">&quot;location&quot;: &quot;/usr/share/elasticsearch/es-back/snapshot01&quot;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1-2-2-恢复全部索引"><a href="#1-2-2-恢复全部索引" class="headerlink" title="1.2.2 恢复全部索引"></a>1.2.2 恢复全部索引</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">POST _snapshot/old_k8s-prod-info/backup_all/_restore</span><br></pre></td></tr></table></figure><h3 id="1-2-3-查看快照恢复进度"><a href="#1-2-3-查看快照恢复进度" class="headerlink" title="1.2.3 查看快照恢复进度"></a>1.2.3 查看快照恢复进度</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET _cat/recovery?v</span><br></pre></td></tr></table></figure><h1 id="2-指定索引快照及恢复"><a href="#2-指定索引快照及恢复" class="headerlink" title="2. 指定索引快照及恢复"></a>2. 指定索引快照及恢复</h1><h2 id="2-1-指定索引快照"><a href="#2-1-指定索引快照" class="headerlink" title="2.1  指定索引快照"></a>2.1  指定索引快照</h2><h3 id="2-1-1-指定索引注册快照存储库"><a href="#2-1-1-指定索引注册快照存储库" class="headerlink" title="2.1.1 指定索引注册快照存储库"></a>2.1.1 指定索引注册快照存储库</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">PUT _snapshot/old_k8s-prod-info</span><br><span class="line">&#123;</span><br><span class="line">&quot;type&quot;: &quot;fs&quot;,</span><br><span class="line">&quot;settings&quot;: &#123;</span><br><span class="line">&quot;location&quot;: &quot;/usr/share/elasticsearch/es-back/snapshot1119&quot;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-1-2-指定索引存储快照"><a href="#2-1-2-指定索引存储快照" class="headerlink" title="2.1.2 指定索引存储快照"></a>2.1.2 指定索引存储快照</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">PUT _snapshot/old_k8s-prod-info/k8s-prod-info-2023.11.19?wait_for_completion=true</span><br><span class="line">&#123;</span><br><span class="line">&quot;indices&quot;: &quot;k8s-prod-info-2023.11.19&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-1-3-查看指定索引快照进度"><a href="#2-1-3-查看指定索引快照进度" class="headerlink" title="2.1.3 查看指定索引快照进度"></a>2.1.3 查看指定索引快照进度</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET _snapshot/old_k8s-prod-info/k8s-prod-info-2023.11.19/_status</span><br></pre></td></tr></table></figure><h2 id="2-2-恢复"><a href="#2-2-恢复" class="headerlink" title="2.2 恢复"></a>2.2 恢复</h2><h3 id="2-2-1-指定索引注册快照存储库"><a href="#2-2-1-指定索引注册快照存储库" class="headerlink" title="2.2.1 指定索引注册快照存储库"></a>2.2.1 指定索引注册快照存储库</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">PUT _snapshot/old_k8s-prod-info</span><br><span class="line">&#123;</span><br><span class="line">&quot;type&quot;: &quot;fs&quot;,</span><br><span class="line">&quot;settings&quot;: &#123;</span><br><span class="line">&quot;location&quot;: &quot;/usr/share/elasticsearch/es-back/snapshot1119&quot;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-2-2-恢复指定索引"><a href="#2-2-2-恢复指定索引" class="headerlink" title="2.2.2 恢复指定索引"></a>2.2.2 恢复指定索引</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">POST _snapshot/old_k8s-prod-info/k8s-prod-info-2023.11.19/_restore</span><br><span class="line">&#123;</span><br><span class="line">&quot;indices&quot;: &quot;k8s-prod-info-2023.11.19&quot;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">替换索引名称恢复</span></span><br><span class="line">POST _snapshot/old_k8s-prod-info/k8s-prod-info-2023.11.19/_restore</span><br><span class="line">&#123;</span><br><span class="line">  &quot;indices&quot;: &quot;k8s-prod-info-2023.11.19&quot;,</span><br><span class="line">  &quot;rename_pattern&quot;: &quot;k8s-prod-info-2023.11.19&quot;,</span><br><span class="line">  &quot;rename_replacement&quot;: &quot;k8s-prod-info-2023.11.19-old&quot;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h3 id="2-2-3-查看快照恢复进度"><a href="#2-2-3-查看快照恢复进度" class="headerlink" title="2.2.3 查看快照恢复进度"></a>2.2.3 查看快照恢复进度</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GET _cat/recovery?v</span><br><span class="line">- 显示100%完成</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> efk </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ElasticSearch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql 删除重复数据</title>
      <link href="/posts/3265730413.html"/>
      <url>/posts/3265730413.html</url>
      
        <content type="html"><![CDATA[<h1 id="Mysql如何删除重复数据"><a href="#Mysql如何删除重复数据" class="headerlink" title="Mysql如何删除重复数据"></a>Mysql如何删除重复数据</h1><h2 id="项目背景："><a href="#项目背景：" class="headerlink" title="项目背景："></a>项目背景：</h2><p>在RocketMQ的消费者服务中，发现了重复消费的情况，为了处理，需先将消费者停止消费，去重消息ID重复的数据，再给消息ID设置唯一索引。</p><h3 id="方法一：使用临时表"><a href="#方法一：使用临时表" class="headerlink" title="方法一：使用临时表"></a><strong>方法一：使用临时表</strong></h3><ul><li>创建一个临时表，用于存储要保留的数据。</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> consumer_crm_record_tmp <span class="keyword">LIKE</span> consumer_crm_record;</span><br></pre></td></tr></table></figure><ul><li>将要保留的数据存储到临时表中</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> consumer_crm_record_tmp</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">MAX</span>(id) <span class="keyword">AS</span> id,message_id,message,response</span><br><span class="line"><span class="keyword">FROM</span> consumer_crm_record</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> message_id;</span><br></pre></td></tr></table></figure><ul><li>删除原表中的数据</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span>  consumer_crm_record</span><br></pre></td></tr></table></figure><ul><li>将临时表中的数据加入到原表中</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> consumer_crm_record</span><br><span class="line"><span class="keyword">SELECT</span>  id,message_id,message,response</span><br><span class="line"><span class="keyword">FROM</span> consumer_crm_record_tmp;</span><br></pre></td></tr></table></figure><ul><li>删除临时表</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> consumer_crm_record_tmp;</span><br></pre></td></tr></table></figure><p>创建临时表的优点：</p><ul><li>简单直观：通过创建临时表，您可以明确地将要删除的数据和要保留的数据分开存储，易于理解和管理。</li><li>可读性好：临时表的使用可以使查询语句更易读，特别是对于复杂的逻辑操作。</li><li>可以灵活处理：临时表可以在多个查询之间使用，可以执行额外的操作，例如插入、更新或查询临时表的数据。</li></ul><p>创建临时表的缺点：</p><ul><li>需要额外的存储空间：创建临时表需要占用额外的存储空间，特别是在处理大量数据时可能会对磁盘空间造成一定的压力。</li><li>需要额外的操作及权限：创建、插入和删除临时表需要执行额外的数据库操作，增加了一定的复杂性。</li></ul><h3 id="方法二：使用left-join-删除（强烈推荐）"><a href="#方法二：使用left-join-删除（强烈推荐）" class="headerlink" title="方法二：使用left join 删除（强烈推荐）"></a><strong>方法二：使用left join 删除（强烈推荐）</strong></h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> t1 </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">        consumer_crm_record t1</span><br><span class="line">        <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> ( <span class="keyword">SELECT</span> <span class="built_in">MAX</span>( id ) <span class="keyword">AS</span> max_id, message_id <span class="keyword">FROM</span> consumer_crm_record <span class="keyword">GROUP</span> <span class="keyword">BY</span> message_id ) t2 <span class="keyword">ON</span> t1.message_id <span class="operator">=</span> t2.message_id </span><br><span class="line">        <span class="keyword">AND</span> t1.id <span class="operator">=</span> t2.max_id </span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">        t2.max_id <span class="keyword">IS</span> <span class="keyword">NULL</span>;</span><br></pre></td></tr></table></figure><p>这个查询将根据message_id进行分组，并保留每个组中的最大id。然后，它使用左连接将原始表与这些最大id进行比较。如果连接失败（即max_id为NULL），则表示该行不是具有最大id的行，因此将被删除。</p><p>LEFT JOIN的优点：</p><ul><li>可以利用索引：LEFT JOIN 可以利用索引来加速查询，特别是在连接字段上存在索引的情况下。</li><li>更高的灵活性：LEFT JOIN 可以与其他表达式和条件组合使用，使得查询可以更加灵活。</li></ul><p>LEFT JOIN的缺点：</p><ul><li>性能可能受限：当处理大量数据时，LEFT JOIN 可能会导致较慢的查询速度，尤其是在连接字段没有索引或使用了复杂的连接条件时。</li><li>查询复杂度高：使用 LEFT JOIN 进行连接查询时，需要编写较为复杂的查询语句，对于新手而言可能会比较困难。</li></ul><h3 id="方法三：使用not-in-删除"><a href="#方法三：使用not-in-删除" class="headerlink" title="方法三：使用not in 删除"></a><strong>方法三：使用not in 删除</strong></h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line"> consumer_crm_record t1 </span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line"> id <span class="keyword">NOT</span> <span class="keyword">IN</span> ( <span class="keyword">SELECT</span> max_id <span class="keyword">FROM</span> ( <span class="keyword">SELECT</span> <span class="built_in">MAX</span>( id ) <span class="keyword">AS</span> max_id <span class="keyword">FROM</span> consumer_crm_record <span class="keyword">GROUP</span> <span class="keyword">BY</span> message_id) tmp );</span><br></pre></td></tr></table></figure><p>NOT IN的优点：</p><ul><li>简单易用：NOT IN 是一种直观简单的方式来筛选出不在指定列表中的数据。</li><li>可读性好：NOT IN 子句的语义明确，易于理解和维护。</li></ul><p>NOT IN的缺点：</p><ul><li>性能可能较低：NOT IN 子查询对于大型数据集可能会导致较慢的查询速度，尤其是在子查询中返回大量结果时。</li><li>NULL 值处理：NOT IN 子句在处理 NULL 值时需要特别注意，因为 NULL 的处理可能会导致意外的结果。</li></ul><h3 id="方法四：使用窗口函数（MySQL-8-0以上支持）"><a href="#方法四：使用窗口函数（MySQL-8-0以上支持）" class="headerlink" title="方法四：使用窗口函数（MySQL 8.0以上支持）"></a><strong>方法四：使用窗口函数（MySQL 8.0以上支持）</strong></h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DELETE</span></span><br><span class="line"><span class="keyword">FROM</span> consumer_crm_record</span><br><span class="line"><span class="keyword">WHERE</span> id <span class="keyword">in</span> (</span><br><span class="line">    <span class="keyword">SELECT</span> id</span><br><span class="line">    <span class="keyword">FROM</span>(</span><br><span class="line">        <span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line">        <span class="keyword">FROM</span> (</span><br><span class="line">            <span class="keyword">SELECT</span> <span class="built_in">ROW_NUMBER</span>() <span class="keyword">OVER</span> w <span class="keyword">AS</span> row_num,id</span><br><span class="line">            <span class="keyword">FROM</span> consumer_crm_record  <span class="keyword">where</span> message_id <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">null</span></span><br><span class="line">            <span class="keyword">WINDOW</span> w <span class="keyword">AS</span> (<span class="keyword">PARTITION</span> <span class="keyword">BY</span> message_id <span class="keyword">ORDER</span> <span class="keyword">BY</span> id)</span><br><span class="line">        )t</span><br><span class="line">        <span class="keyword">WHERE</span> row_num <span class="operator">&gt;</span><span class="number">1</span></span><br><span class="line">    )e</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>窗口函数的优点：</p><ul><li>简化查询逻辑：使用窗口函数可以在单个查询中完成去重操作，而不需要使用其他复杂的子查询或连接操作。这简化了查询逻辑，使查询更易读和维护。</li><li>高效性能：窗口函数在处理大型数据集时通常比传统的子查询或连接操作更高效。窗口函数可以在单个扫描中计算结果，而不需要多次访问数据表。</li><li>保留原始数据：使用窗口函数进行去重操作时，您可以保留原始数据表中的所有列，并在结果中添加去重的标识。这使得您可以查看去重结果与原始数据之间的关系，并进行进一步的分析和处理。</li></ul><p>窗口函数的缺点：</p><ul><li>学习曲线：窗口函数是一种高级的SQL功能，相对于传统的查询语法来说，使用窗口函数可能需要一些学习和理解。如果您对窗口函数不熟悉，可能需要花费一些时间来学习和了解其语法和用法。</li><li>版本兼容性：窗口函数在MySQL中的支持是在版本8.0之后引入的。如果您使用的是较旧的MySQL版本，那么窗口函数可能不可用，您将无法使用窗口函数进行去重操作。</li><li>内存消耗：窗口函数可能需要在内存中保存一些额外的中间结果，尤其是在处理大型数据集时。这可能会导致一些额外的内存消耗。因此，在使用窗口函数进行去重操作时，需要注意内存使用情况，并确保系统具有足够的内存资源。</li></ul><h3 id="创建唯一索引"><a href="#创建唯一索引" class="headerlink" title="创建唯一索引"></a><strong>创建唯一索引</strong></h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">UNIQUE</span> INDEX idx_message_id <span class="keyword">on</span> consumer_crm_record(message_id);</span><br></pre></td></tr></table></figure><h3 id="在百万级表中执行中发现报错：1206-the-total-number-of-locks-exceeds-the-lock-table-size"><a href="#在百万级表中执行中发现报错：1206-the-total-number-of-locks-exceeds-the-lock-table-size" class="headerlink" title="在百万级表中执行中发现报错：1206- the total number of locks exceeds the lock table size"></a><strong>在百万级表中执行中发现报错：1206- the total number of locks exceeds the lock table size</strong></h3><p>innodb_buffer_pool    mysql缓冲池太小  默认为16M</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span>  variables  <span class="keyword">like</span> <span class="string">&#x27;%innodb_buffer_pool_size%&#x27;</span></span><br></pre></td></tr></table></figure><p>修改缓冲池大小为2G</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SET</span> <span class="keyword">GLOBAL</span> innodb_buffer_pool_size<span class="operator">=</span><span class="number">2147483648</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux常用操作及示例</title>
      <link href="/posts/201088553.html"/>
      <url>/posts/201088553.html</url>
      
        <content type="html"><![CDATA[<h1 id="Linux常用操作及示例"><a href="#Linux常用操作及示例" class="headerlink" title="Linux常用操作及示例"></a>Linux常用操作及示例</h1><p>记录一些常用的linux操作以备学习</p><h2 id="终端操作"><a href="#终端操作" class="headerlink" title="终端操作"></a>终端操作</h2><h3 id="文件和目录管理"><a href="#文件和目录管理" class="headerlink" title="文件和目录管理"></a>文件和目录管理</h3><ul><li><p><code>ls</code>：列出当前目录下的文件和文件夹。<br>示例：<code>ls -l</code>命令用于以详细列表形式显示文件和目录。</p></li><li><p><code>cd</code>：切换到指定目录。<br>示例：<code>cd /home</code>命令用于切换到&#x2F;home目录。</p></li><li><p><code>pwd</code>：显示当前所在目录的路径。<br>示例：<code>pwd</code>命令用于显示当前所在的目录路径。</p></li><li><p><code>mkdir</code>：创建新目录。<br>示例：<code>mkdir myfolder</code>命令用于在当前目录下创建名为myfolder的新目录。</p></li><li><p><code>rm</code>：删除文件或目录。<br>示例：<code>rm myfile.txt</code>命令用于删除名为myfile.txt的文件。</p></li><li><p><code>cp</code>：复制文件或目录。<br>示例：<code>cp myfile.txt myfolder/</code>命令用于将myfile.txt文件复制到myfolder目录。</p></li><li><p><code>mv</code>：移动文件或目录。<br>示例：<code>mv myfile.txt myfolder/</code>命令用于将myfile.txt文件移动到myfolder目录。</p></li></ul><h3 id="文件查看和编辑"><a href="#文件查看和编辑" class="headerlink" title="文件查看和编辑"></a>文件查看和编辑</h3><ul><li><p><code>cat</code>：显示文件内容。<br>示例：<code>cat myfile.txt</code>命令用于显示myfile.txt文件的内容。</p></li><li><p><code>less</code>：分页显示文件内容。<br>示例：<code>less myfile.txt</code>命令用于以分页方式显示myfile.txt文件的内容。</p></li><li><p><code>head</code>：显示文件的前几行。<br>示例：<code>head -n 5 myfile.txt</code>命令用于显示myfile.txt文件的前5行。</p></li><li><p><code>tail</code>：显示文件的后几行。<br>示例：<code>tail -n 10 myfile.txt</code>命令用于显示myfile.txt文件的最后10行。</p></li><li><p><code>nano</code>：使用Nano编辑器编辑文件。<br>示例：<code>nano myfile.txt</code>命令用于使用Nano编辑器打开myfile.txt文件进行编辑。</p></li><li><p><code>vi</code>或<code>vim</code>：使用Vim编辑器编辑文件。<br>示例：<code>vi myfile.txt</code>命令用于使用Vim编辑器打开myfile.txt文件进行编辑。</p></li></ul><h3 id="系统信息查看"><a href="#系统信息查看" class="headerlink" title="系统信息查看"></a>系统信息查看</h3><ul><li><p><code>uname</code>：显示系统信息。<br>示例：<code>uname -a</code>命令用于显示完整的系统信息。</p></li><li><p><code>whoami</code>：显示当前登录用户。<br>示例：<code>whoami</code>命令用于显示当前登录用户的用户名。</p></li><li><p><code>top</code>：显示系统当前运行的进程和资源占用情况。<br>示例：<code>top</code>命令用于实时显示系统的运行情况。</p></li><li><p><code>free</code>：显示系统内存使用情况。<br>示例：<code>free -h</code>命令用于以人类可读的方式显示系统的内存使用情况。</p></li><li><p><code>df</code>：显示磁盘空间使用情况。<br>示例：<code>df -h</code>命令用于以人类可读的方式显示磁盘空间的使用情况。</p></li></ul><h2 id="包管理器"><a href="#包管理器" class="headerlink" title="包管理器"></a>包管理器</h2><h3 id="APT"><a href="#APT" class="headerlink" title="APT"></a>APT</h3><ul><li><p><code>apt update</code>：更新软件包列表。<br>示例：<code>apt update</code>命令用于更新可用软件包的列表。</p></li><li><p><code>apt upgrade</code>：升级已安装的软件包。<br>示例：<code>apt upgrade</code>命令用于升级所有已安装的软件包。</p></li><li><p><code>apt install</code>：安装指定的软件包。<br>示例：<code>apt install nginx</code>命令用于安装Nginx Web服务器。</p></li><li><p><code>apt remove</code>：卸载指定的软件包。<br>示例：<code>apt remove nginx</code>命令用于卸载Nginx Web服务器。</p></li><li><p><code>apt search</code>：搜索可用的软件包。<br>示例：<code>apt search python</code>命令用于搜索与关键词”python”相关的可用软件包。</p></li></ul><h3 id="YUM"><a href="#YUM" class="headerlink" title="YUM"></a>YUM</h3><ul><li><p><code>yum update</code>：更新软件包。<br>示例：<code>yum update</code>命令用于更新所有可用的软件包。</p></li><li><p><code>yum upgrade</code>：升级已安装的软件包。<br>示例：<code>yum upgrade</code>命令用于升级所有已安装的软件包。</p></li><li><p><code>yum install</code>：安装指定的软件包。<br>示例：<code>yum install httpd</code>命令用于安装Apache HTTP服务器。</p></li><li><p><code>yum remove</code>：卸载指定的软件包。<br>示例：<code>yum remove httpd</code>命令用于卸载Apache HTTP服务器。</p></li><li><p><code>yum search</code>：搜索可用的软件包。<br>示例：<code>yum search mysql</code>命令用于搜索与关键词”mysql”相关的可用软件包。</p></li></ul><h2 id="用户和权限管理"><a href="#用户和权限管理" class="headerlink" title="用户和权限管理"></a>用户和权限管理</h2><ul><li><p><code>useradd</code>：创建新用户。<br>示例：<code>useradd john</code>命令用于创建名为”john”的新用户。</p></li><li><p><code>passwd</code>：修改用户密码。<br>示例：<code>passwd john</code>命令用于修改用户”john”的密码。</p></li><li><p><code>usermod</code>：修改用户属性。<br>示例：<code>usermod -aG sudo john</code>命令用于将用户”john”添加到sudo用户组。</p></li><li><p><code>userdel</code>：删除用户。<br>示例：<code>userdel john</code>命令用于删除用户”john”。</p></li><li><p><code>sudo</code>：以超级用户权限执行命令。<br>示例：<code>sudo apt update</code>命令用于以超级用户权限更新软件包列表。</p></li><li><p><code>chmod</code>：修改文件或目录的权限。<br>示例：<code>chmod 644 myfile.txt</code>命令用于将myfile.txt文件的权限设置为644。</p></li><li><p><code>chown</code>：修改文件或目录的所有者。<br>示例：<code>chown john myfile.txt</code>命令用于将myfile.txt文件的所有者设置为用户”john”。</p></li><li><p><code>chgrp</code>：修改文件或目录的所属组。<br>示例：<code>chgrp staff myfile.txt</code>命令用于将myfile.txt文件的所属组设置为”staff”。</p></li></ul><h2 id="网络管理"><a href="#网络管理" class="headerlink" title="网络管理"></a>网络管理</h2><ul><li><p><code>ifconfig</code>：显示和配置网络接口。<br>示例：<code>ifconfig eth0</code>命令用于显示名为”eth0”的网络接口信息。</p></li><li><p><code>ping</code>：测试与另一个主机的连接。<br>示例：<code>ping google.com</code>命令用于测试与google.com主机的连接。</p></li><li><p><code>ssh</code>：通过SSH协议远程登录到另一个主机。<br>示例：<code>ssh user@example.com</code>命令用于通过SSH协议远程登录到example.com主机。</p></li><li><p><code>scp</code>：通过SSH协议在本地主机和远程主机之间复制文件。<br>示例：<code>scp myfile.txt user@example.com:/home/user/</code>命令用于将myfile.txt文件复制到example.com主机的&#x2F;home&#x2F;user&#x2F;目录。</p></li><li><p><code>wget</code>：从网络上下载文件。<br>示例：<code>wget https://example.com/file.zip</code>命令用于从example.com下载file.zip文件。</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 操作系统 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
